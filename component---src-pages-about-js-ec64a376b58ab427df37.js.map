{"version":3,"sources":["webpack:///./src/components/About_Mas/index.js","webpack:///./src/pages/about.js"],"names":["About","className","query","data","location","Layout","Meta","About_Mas","src","alt","href","target","type","class","allCvJson","edges","filter","fortype","node","map","key","num","title","org","yrStart","yrEnd","bulletA","descA","bulletB","descB","animateIn","offset","allCvHighLightJson","sum","bullet","span","list","note"],"mappings":"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","file":"component---src-pages-about-js-ec64a376b58ab427df37.js","sourcesContent":["import React from 'react'\nimport './style.scss'\n\nconst About = () => <div className=\"abt-mas\" />\n\nexport default About\n","import React from 'react'\nimport Layout from 'components/Layout'\nimport { graphql } from 'gatsby'\nimport About_Mas from 'components/About_Mas'\nimport Meta from 'components/Meta'\nimport ScrollAnimation from 'react-animate-on-scroll'\n\nexport default ({ data, location }) => {\n  return (\n    <Layout location={location}>\n      <Meta />\n      <About_Mas />\n      <div className=\"cv bg-white\">\n        <div className=\"container\">\n          <div className=\"row bg-white\">\n            <div className=\"col bloc\">\n              <h1 className=\"title\">Yentsen Liu</h1>\n              <p>Contact: yen-tsen.liu[at]aalto.fi</p>\n            </div>\n          </div>\n          <div className=\"row bg-white\">\n            <div className=\"col-lg-6 col-md-10 col-sm-12\">\n              <p className=\"sum\">\n                Dynamic and socially-responsive designer with a 3-year working\n                experience at two fast-paced startups specializing in UX/UI,\n                product design, and branding. Skills include GUI design &\n                prototyping, UX research, front-end programming, participatory\n                design, and data visualization.\n                <br />\n                <br />\n                Currently working on a transdisciplinary master's thesis\n                research project across the fields of UI design, political HCI,\n                and democracy studies at the program of Collaborative and\n                Industrial Design at Aalto University, Finland.\n              </p>\n            </div>\n            <div className=\"offset-lg-2 col-xl-3 col-lg-4 col-md-10 col-sm-12 pull-right pt-lg-3\">\n              <img\n                className=\"img-heptagon\"\n                src=\"/img/profile.jpg\"\n                alt=\"Card cap\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"cv\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2 className=\"title bloc\">Curriculum Vitae</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-8 col\">\n              <p className=\"pt-2\">Last Updated: Jan. 2019</p>\n            </div>\n            <div className=\"col-md-4 col\">\n              <p>\n                <a\n                  href=\"https://drive.google.com/uc?export=download&id=1R8BOBuMuS7ur56i1OkCF4FN9SkZs9kR-\"\n                  target=\"blank\"\n                >\n                  <button type=\"button\" class=\"btn btn-outline-primary\">\n                    Download one-page pdf\n                  </button>\n                </a>\n              </p>\n            </div>\n          </div>\n\n          <div className=\"row bg-white\">\n            <div className=\"col-lg-8 col-md-10 col-sm-12\">\n              <div className=\"cv-sec-title\">\n                <h2>Work Experience</h2>\n              </div>\n              {data.allCvJson.edges\n                .filter(fortype => fortype.node.type === 'work')\n                .map(({ node }) => (\n                  <div key={node.num} class=\"cv-sec-bloc\">\n                    <div className=\"cv-content-name\">\n                      <p>{node.title}</p>\n                    </div>\n                    <div className=\"cv-content-org\">\n                      <p>{node.org}</p>\n                    </div>\n                    <div className=\"cv-content-yr-location\">\n                      <p>\n                        {node.yrStart}\n                        {node.yrEnd} | {node.location}\n                      </p>\n                    </div>\n                    <div className=\"cv-content-desc\">\n                      <p>\n                        <span class=\"line-bullet\">{node.bulletA}</span>\n                        {node.descA}\n                      </p>\n                      <p>\n                        <span class=\"line-bullet\">{node.bulletB}</span>\n                        {node.descB}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n            </div>\n\n            <div className=\"col-lg-4 col-md-10 col-sm-12\">\n              <ScrollAnimation animateIn=\"fadeIn\" offset={150}>\n                <div className=\"cv-sec-highl\">\n                  {data.allCvHighLightJson.edges\n                    .filter(fortype => fortype.node.type === 'work')\n                    .map(({ node }) => (\n                      <p className=\"highl-sum\">{node.sum}</p>\n                    ))}\n                  {data.allCvHighLightJson.edges\n                    .filter(fortype => fortype.node.type === 'work')\n                    .map(({ node }) => (\n                      <p className=\"highl-span\">\n                        <span className=\"highl-bullet\">{node.bullet}</span>{' '}\n                        {node.span}\n                        <p className=\"highl-list\">{node.list}</p>\n                      </p>\n                    ))}\n                </div>\n              </ScrollAnimation>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"cv\">\n        <div className=\"container\">\n          <div className=\"row bg-white\">\n            <div className=\"col-lg-8 col-md-10 col-sm-12\">\n              <div className=\"cv-sec-title\">\n                <h2>Education</h2>\n              </div>\n              {data.allCvJson.edges\n                .filter(fortype => fortype.node.type === 'education')\n                .map(({ node }) => (\n                  <div key={node.num} class=\"cv-sec-bloc\">\n                    <div className=\"cv-content-org\">\n                      <p>{node.org}</p>\n                    </div>\n                    <div className=\"cv-content-name\">\n                      <p>{node.title}</p>\n                    </div>\n                    <div className=\"cv-content-yr-location\">\n                      <p>\n                        {node.yrStart}\n                        {node.yrEnd} | {node.location}\n                      </p>\n                    </div>\n                    <div className=\"cv-content-desc\">\n                      <p>\n                        <span class=\"line-bullet\">{node.bulletA}</span>\n                        {node.descA}\n                      </p>\n                      <p>\n                        <span class=\"line-bullet\">{node.bulletB}</span>\n                        {node.descB}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n            </div>\n\n            <div className=\"col-lg-4 col-md-10 col-sm-12\">\n              <ScrollAnimation animateIn=\"fadeIn\" offset={150}>\n                <div className=\"cv-sec-highl\">\n                  {data.allCvHighLightJson.edges\n                    .filter(fortype => fortype.node.type === 'education')\n                    .map(({ node }) => (\n                      <p className=\"highl-sum\">{node.sum}</p>\n                    ))}\n                  {data.allCvHighLightJson.edges\n                    .filter(fortype => fortype.node.type === 'education')\n                    .map(({ node }) => (\n                      <p className=\"highl-span\">\n                        <span className=\"highl-bullet\">{node.bullet}</span>{' '}\n                        {node.span}\n                      </p>\n                    ))}\n                  {data.allCvHighLightJson.edges\n                    .filter(fortype => fortype.node.type === 'education')\n                    .map(({ node }) => (\n                      <p className=\"highl-list\">{node.list}</p>\n                    ))}\n                </div>\n              </ScrollAnimation>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"cv\">\n        <div className=\"container\">\n          <div className=\"row bg-white\">\n            <div className=\"col-lg-8 col-md-10 col-sm-12\">\n              <div className=\"cv-sec-title\">\n                <h2>Activities</h2>\n              </div>\n\n              {data.allCvJson.edges\n                .filter(fortype => fortype.node.type === 'activity')\n                .map(({ node }) => (\n                  <div key={node.num} class=\"cv-sec-bloc\">\n                    <div className=\"cv-content-name\">\n                      <p>{node.title}</p>\n                    </div>\n                    <div className=\"cv-content-org\">\n                      <p>{node.org}</p>\n                    </div>\n                    <div className=\"cv-content-yr-location\">\n                      <p>\n                        {node.yrStart}\n                        {node.yrEnd} | {node.location}\n                      </p>\n                    </div>\n                    <div className=\"cv-content-desc\" />\n                  </div>\n                ))}\n            </div>\n\n            <div className=\"col-lg-4 col-md-10 col-sm-12\">\n              <ScrollAnimation animateIn=\"fadeIn\" offset={150}>\n                <div className=\"cv-sec-highl\">\n                  {data.allCvHighLightJson.edges\n                    .filter(fortype => fortype.node.type === 'activity')\n                    .map(({ node }) => (\n                      <p className=\"highl-sum\">{node.sum}</p>\n                    ))}\n                  {data.allCvHighLightJson.edges\n                    .filter(fortype => fortype.node.type === 'activity')\n                    .map(({ node }) => (\n                      <p className=\"highl-span\">\n                        <span className=\"highl-bullet\">{node.bullet}</span>{' '}\n                        {node.span}\n                      </p>\n                    ))}\n                  {data.allCvHighLightJson.edges\n                    .filter(fortype => fortype.node.type === 'activity')\n                    .map(({ node }) => (\n                      <p className=\"highl-list\">\n                        {node.list}\n                        <span className=\"highl-note\"> {node.note}</span>\n                      </p>\n                    ))}\n                </div>\n              </ScrollAnimation>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"cv-break\">\n        <div className=\"container\">\n          <div className=\"row h-100\">\n            <div className=\"col-md-2 col-sm-5 col-6\">\n              <img src=\"/img/dsc.jpg\" alt=\"Card cap\" />\n              <br />\n              <small>\n                Worked as an assistant for Prof. Dung-sheng Chen for the data\n                collection and research on the development of social design in\n                Taiwan.\n              </small>\n              <hr />\n              <br />\n            </div>\n            <div className=\"col-md-3 col-sm-7 col-6 my-auto\">\n              <small>\n                Speech about how to identify your talent to solve social\n                problem, given at TEDxNCTU 2016, Hsingchu Taiwan.\n              </small>\n              <br />\n              <br />\n              <img src=\"/img/ted.jpg\" alt=\"TEDxNTCU 2016\" />\n            </div>\n            <div className=\"col-md-2 col-sm-7 col-6\">\n              <img src=\"/img/boisbuchet.jpg\" alt=\"boisbuchet workshop\" />\n              <small>\n                Presented the concept of curation at So Far My Idea Curation\n                Workshop, Lessac, France.\n              </small>\n            </div>\n            <div className=\"offset-md-1 col-md-4 col-sm-5 col-6\">\n              <img src=\"/img/texel.jpg\" alt=\"Card cap\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allCvJson {\n      totalCount\n      edges {\n        node {\n          title\n          yrStart\n          yrEnd\n          location\n          org\n          type\n          descA\n          descB\n          bulletA\n          bulletB\n        }\n      }\n    }\n    allCvHighLightJson {\n      edges {\n        node {\n          type\n          span\n          note\n          sum\n          list\n          heading\n          bullet\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}