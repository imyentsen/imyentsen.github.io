{"version":3,"sources":["webpack:///./src/components/Landing/Masthead/index.js","webpack:///./src/components/Landing/Preview/index.js","webpack:///./src/components/Landing/Project/index.js","webpack:///./src/pages/index.js"],"names":["Masthead","render","MastheadBox","Display","Subline","React","Component","styled","div","theme","screen","lg","color","secondary","S1000D","fontSize","xxl","font","display","grayscale","S950","primary","Preview","listRole","this","props","role","map","item","i","LsRole","key","PreviewBloc","ImgSlide","img","fluid","Info","title","Desc","desc","TitleRole","BtnGroup","visit","to","target","IconExternal","hideStory","path","Tertiary","S200D","xl","H3","p","sm","xs","span","getCategories","items","flatCategories","post","frontmatter","category","reduce","categoryItems","val","concat","uniqueCategories","Set","categories","Array","from","PopUpPrev","children","StyledPopup","trigger","modal","closeOnDocumentClick","close","Close","onClick","IconClose","description","date","image","childImageSharp","ProjectItems","state","remark","posts","blogPostItems","handleItems","setState","filter","includes","index","BtnCategory","type","ProjectGrid","gridStyle","gridArea","grid","listCategory","ListCategory","ProjCard","style","infoShow","InfoWrapper","Image","animateIn","offset","animateOnce","CategoryDate","dateTime","Brief","brief","Quote","quote","S100","S800D","S100D","S900","S900D","xxs","supplementary","S300","S1000","md","Popup","white","pageQuery","Landingpage","data","location","Layout","Meta","site","get","Project","Channelling"],"mappings":"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","file":"component---src-pages-index-js-ae964c6d5a826b72dbdd.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Container } from '@style/global'\nimport theme from '@style/theme'\n\nclass Masthead extends React.Component {\n  render() {\n    return (\n      <MastheadBox>\n        <Display>{/*<MasPic/>*/}</Display>\n        <Container>\n          <Display><p>Hi, I'm Ansin,</p></Display>\n          <Subline>\n            a startup-minded designer and developer with expertise in UI, UX, and data visualization\n          </Subline>\n        </Container>\n      </MastheadBox>\n    )\n  }\n}\n\nexport default Masthead\n\nconst MastheadBox = styled.div`\n  overflow: show;\n  margin: 0 0 30px 0;\n  @media (max-width: ${theme.screen.lg}) {\n    .masthead {\n      height: auto;\n      padding: 30px 0;\n    }\n  }\n`\n\nconst Display = styled.div`\n  overflow: visible;\n  object-fit: fill;\n  color: ${theme.color.secondary.S1000D};\n  p {\n    ${theme.fontSize.xxl};\n    padding: 100px 0 0 0;\n    font-family: ${theme.font.display};\n    font-weight: bold;\n  }\n`\n\nconst Subline = styled.div`\n  color: ${theme.color.grayscale.S950} !important;\n  ${theme.fontSize.lg};\n  font-family: ${theme.font.primary};\n  font-weight: bold;\n  margin-top: 20px;\n`\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { H3, Button } from '@style/global'\nimport styled from 'styled-components'\nimport theme from '@style/theme'\nimport { IconExternal } from 'components/Icon/IconExternal'\n\nclass Preview extends Component {\n  render() {\n    const listRole = this.props.role.map((item, i) => {\n      return <LsRole key={i}>{item}</LsRole>\n    })\n    return (\n        <PreviewBloc>\n            <ImgSlide>\n              {this.props.img ? <Img fluid={this.props.img} /> : ''}\n            </ImgSlide>\n            <Info>\n              <H3>{this.props.title}</H3>\n              <Desc>{this.props.desc}</Desc>\n              <p>\n                <TitleRole>Roles</TitleRole>\n                {listRole}\n              </p>\n              <BtnGroup>\n                {this.props.visit ? (\n                  <Link to={this.props.visit} target=\"blank\">\n                    <Button>Visit Workâ€‰<IconExternal/></Button>\n                  </Link>\n                ) : (\n                  ''\n                )}\n                {this.props.hideStory ? (\n                  ''\n                ) : (\n                  <Link to={this.props.path}>\n                    <Button Tertiary>Read Story</Button>\n                  </Link>\n                )}\n              </BtnGroup>\n            </Info>\n        </PreviewBloc>\n    )\n  }\n}\n\nexport default Preview\n\nconst PreviewBloc = styled.div`\n  display: grid;\n  height: 100% !important;\n  grid-template-columns: 4fr 2fr;\n  padding: 0 !important;\n  margin: 0 !important;\n  background: ${theme.color.primary.S200D}; \n  border: none !important;\n  @media (max-width: ${theme.screen.lg}) {\n    grid-template-columns: unset !important;\n    height: auto !important;\n  }\n`\n\nconst Info = styled.div`\n  padding: 40px 100px 50px 20px;\n  height: 100% !important;\n  color: ${theme.color.primary.S1000D};\n  @media (max-width: ${theme.screen.lg}) {\n    padding: 25px 16px 0 16px;\n  }\n\n  @media (min-width: ${theme.screen.xl}) {\n    padding: 80px 140px 0 40px;\n  }\n  ${H3} {\n    font-weight: bold;\n    font-size:1.25em !important;\n    line-height: 1.72em !important;\n    @media (min-width: ${theme.screen.lg}) { \n      margin-bottom: 5px;\n    }\n  }\n`\n\nconst ImgSlide = styled.div`\n  @media (max-width: ${theme.screen.lg}) {\n    order: -1;\n    height: 200px;\n    object-fit: cover;\n  }\n  div {\n    height: 100% !important;\n  }\n  img {\n    object-fit: cover;\n    object-position: 50% 50%;\n  }\n`\n\nconst Desc = styled.p`\n  @media (max-width: ${theme.screen.lg}) {\n    ${theme.fontSize.sm};\n  }\n`\nconst TitleRole = styled.div`\n  font-family: ${theme.font.primary};\n  ${theme.fontSize.xs};\n  font-weight: bold;\n  margin: 5px 0;\n`\nconst LsRole = styled.span`\n  ${theme.fontSize.sm};\n  ::after {\n    content: ' / ';\n  }\n  :last-of-type::after {\n    content: '';\n  }\n`\n\nconst BtnGroup = styled.div`\n  margin: 35px 0;\n  @media (max-width: ${theme.screen.lg}) {\n    margin: 25px 0;\n  }\n  div {\n    margin-left: 10px;\n  }\n  div:first-of-type {\n    margin-left: 0px !important;\n  }\n`\n","import React, { Component } from 'react'\nimport Img from 'gatsby-image'\nimport PropTypes from 'prop-types';\n\nimport Preview from 'components/Landing/Preview'\n\nimport { H3 } from '@style/global'\nimport styled from 'styled-components'\nimport theme from '@style/theme'\n\nimport Popup from 'reactjs-popup'\nimport { IconClose } from 'components/Icon/IconClose'\nimport ScrollAnimation from 'react-animate-on-scroll'\n\n//https://ibaslogic.com/instant-post-switching-in-a-gatsbyjs-site/\n\nconst getCategories = items => {\n  let categoryItems = items.map(item => {\n    return item.post.frontmatter.category\n  })\n  let flatCategories = categoryItems.reduce(\n    (categoryItems, val) => categoryItems.concat(val),\n    []\n  )\n  let uniqueCategories = new Set(flatCategories)\n  let categories = Array.from(uniqueCategories)\n  categories = ['All', ...categories]\n  return categories\n}\n\nconst PopUpPrev = ({children, item}) =>  (\n  <StyledPopup\n      trigger={\n        <div>\n          {children}\n        </div>\n      }\n      modal\n      closeOnDocumentClick\n    >\n    {close => (\n      <div>\n        <Close onClick={close}>\n          <IconClose/>\n        </Close>\n          <Preview\n            title={item.post.frontmatter.title}\n            desc={item.post.frontmatter.description}\n            date={item.post.frontmatter.date}\n            img={\n              item.post.frontmatter.image.childImageSharp.fluid\n            }\n            role={item.post.frontmatter.role}\n            category={item.post.frontmatter.category}\n            path={item.post.frontmatter.path}\n            visit={item.post.frontmatter.visit}\n            hideStory={item.post.frontmatter.hideStory}\n          />\n      </div>\n    )}\n  </StyledPopup>\n);\n\nPopUpPrev.propTypes = {\nchildren: PropTypes.element.isRequired,\n};\n\nclass ProjectItems extends Component {\n  state = {\n    items: this.props.items.remark.posts,\n    blogPostItems: this.props.items.remark.posts,\n    categories: getCategories(this.props.items.remark.posts),\n  }\n  handleItems = category => {\n    if (category === 'All') {\n      this.setState({\n        blogPostItems: [...this.state.items],\n      })\n    } else {\n      this.setState({\n        blogPostItems: [\n          ...this.state.items.filter(item => {\n            return item.post.frontmatter.category.includes(category)\n          }),\n        ],\n      })\n    }\n  }\n  render() {\n    return (\n      <>\n        {/* FILTER OF PROJECT CATEGORIES */}\n        <div>\n          {this.state.categories.map((category, index) => {\n            return (\n              <BtnCategory>\n                <button\n                  type=\"button\"\n                  key={index}\n                  onClick={() => this.handleItems(category)}\n                >\n                  {category}\n                </button>\n              </BtnCategory>\n            )\n          })}\n        </div>\n\n        {/* GRID OF PROJECTS */}\n        <ProjectGrid>\n          {this.state.blogPostItems.map(item => {\n            const gridStyle = {\n              gridArea: `${item.post.frontmatter.grid}`,\n            }\n\n            const listCategory = item.post.frontmatter.category.map(\n              (item, i) => {\n                return <ListCategory key={i}>{item}</ListCategory>\n              }\n            )\n            return (\n              <ProjCard key={item.post.frontmatter.path} style={gridStyle} infoShow={item.post.frontmatter.infoShow}>\n                {item.post.frontmatter.infoShow ? (\n                  ''\n                ) : (\n                  <InfoWrapper>\n                    <PopUpPrev item={item}>\n                      <Image infoShow={item.post.frontmatter.infoShow}>\n                        <ScrollAnimation\n                          animateIn=\"fadeIn\"\n                          offset={0}\n                          animateOnce=\"true\"\n                        >\n                          <Img fluid={ item.post.frontmatter.image.childImageSharp.fluid}/>\n                        </ScrollAnimation>\n                      </Image>\n                    </PopUpPrev>\n                    <CategoryDate>\n                      {listCategory}\n                      <time dateTime={item.post.frontmatter.date}>\n                        {item.post.frontmatter.date}\n                      </time>\n                    </CategoryDate>\n                    <PopUpPrev item={item}>\n                      <H3>{item.post.frontmatter.title}</H3>\n                    </PopUpPrev>\n                    <Brief>{item.post.frontmatter.brief}</Brief>\n                  </InfoWrapper>\n                )}\n                {item.post.frontmatter.infoShow ? (\n                  <Quote>\n                    <H3>{item.post.frontmatter.quote}</H3>\n                  </Quote>\n                ) : (\n                  ''\n                )}\n              </ProjCard>\n            )\n          })}\n        </ProjectGrid>\n      </>\n    )\n  }\n}\n\nexport default ProjectItems\n\nconst ProjectGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 30px;\n  margin: 68px 0 72px 0;\n\n  @media (max-width: ${theme.screen.lg}) {\n    width: 100%;\n    justify-content: start;\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n    div {\n      grid-area: auto / auto / auto / auto !important;\n    }\n  }\n\n  @media (max-width: ${theme.screen.sm}) {\n    grid-gap: 24px;\n    grid-template-areas: auto / auto / auto / auto;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  }\n`\n\nconst BtnCategory = styled.span`\n  button {\n    text-transform: Uppercase;\n    font-family: ${theme.font.primary};\n    ${theme.fontSize.xs};\n    letter-spacing: 1px;\n    font-weight: bold;\n    background: ${theme.color.grayscale.S100};\n    border: 1px solid ${theme.color.primary.S800D};\n    border-radius: 100px;\n    color: ${theme.color.primary.S1000D};\n    margin: 0 4px 6px 0;\n    padding: 6px 12px;\n  }\n  button:hover {\n    color: ${theme.color.primary.S100D};\n    background:  linear-gradient(to bottom, ${theme.color.primary.S1000D}, ${theme.color.primary.S900});\n  }\n`\n\nconst ProjCard = styled.div`\n  color: ${theme.color.grayscale.S900};\n`\n\nconst InfoWrapper = styled.div`\n  ${H3}{\n    margin: 5px 0 10px 0;\n    cursor: pointer;\n    color: ${theme.color.primary.S900D};\n    font-weight: bold;\n    :hover {\n      text-decoration: underline;\n    }\n  }\n`\n\nconst Image = styled.div`\n  display: block;\n  width: 100%;\n  margin: 13px 0;\n  cursor: pointer;\n  img {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    -webkit-transition: 0.1s ease-in-out !important;\n    transition: 0.1s ease-in-out !important;\n  }\n  :hover img {\n    -webkit-transform: scale(1.1);\n    transform: scale(1.1);\n  }\n  display: ${props => props.infoShow};\n`\n\nconst CategoryDate = styled.span`\n  color: ${theme.color.grayscale.S900};\n  ${theme.fontSize.xxs};\n  font-family: ${theme.font.primary};\n`\n\nconst ListCategory = styled.span`\n  ::after {\n    content: ',   ';\n  }\n  :last-of-type {\n    ::after {\n      content: 'ãƒ»';\n    }\n  }\n`\n\nconst Brief = styled.div`\n  ${theme.fontSize.sm};\n  color: ${theme.color.grayscale.S900};\n`\n\nconst Quote = styled.div`\n  margin-top: 15px;\n  width: 100%;\n  padding: 50px 25px;\n  border: 1px solid ${theme.color.primary.S900D};\n  background: ${theme.color.supplementary.S300};\n  color: ${theme.color.primary.S1000};\n  @media (max-width: ${theme.screen.md}) {\n    margin-top: 15px;\n  }\n`\n\nconst StyledPopup = styled(Popup)`\n  &-overlay {\n    z-index: 99 !important;\n    background: ${theme.color.primary.S900D} !important;\n    -webkit-animation: anvil 0.3s cubic-bezier(0.38, 0.1, 0.36, 0.9) forwards;\n  }\n  &-content {\n    border: none !important;\n    background: rgba(0, 0, 0, 0) !important;\n    width: auto !important;\n    height: auto !important;\n    margin: 70px !important;\n    padding: 0px !important;\n    display: grid;\n    align-content: center;\n    justify-content: center;\n    @media (max-width: ${theme.screen.md}) {\n      margin: 0px !important;\n      align-content: flex-start;\n    }\n  }\n  /* animation */\n  @keyframes anvil {\n    0% {\n      transform: translateY(0px);\n      opacity: 0;\n      box-shadow: 0 0 0 rgba(241, 241, 241, 0);\n    }\n    1% {\n      transform: translateY(0px);\n      opacity: 0;\n      box-shadow: 0 0 0 rgba(241, 241, 241, 0);\n    }\n    100% {\n      transform: =translateY(0px);\n      opacity: 1;\n      box-shadow: 0 0 500px rgba(241, 241, 241, 0);\n    }\n  }\n`\nconst Close = styled.div`\n  position: fixed;\n  cursor: pointer;\n  color: ${theme.color.white};\n  display: block;\n  float: right;\n  top: 10px;\n  right: 5px;\n  z-index: 10;\n  @media (max-width: ${theme.screen.md}) {\n    position: absolute;\n    padding: 13px;\n    z-index: 999;\n    top: 170px;\n    left: auto;\n    right: 0;\n    position: fixed;\n    background-color: ${theme.color.white};\n    color: ${theme.color.grayscale.S900};\n  }\n  svg {\n    transition: 0.3s;\n  }\n  svg:hover {\n    -webkit-transform: rotate(90deg); /* Chrome, Safari, Opera */\n    transform: rotate(90deg);\n  }\n`","import React from 'react'\nimport { graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Meta from 'components/Meta'\nimport Masthead from 'components/Landing/Masthead'\nimport Channelling from 'components/Channelling'\nimport Layout from 'components/Layout'\n\nimport ProjectItems from 'components/Landing/Project'\nimport { Container } from '@style/global'\n\nconst Landingpage = ({ data, location }) => {\n  return (\n    <Layout location={location}>\n      <Meta site={get(data, 'site.meta')} />\n      <Masthead />\n      <Container>\n        <ProjectItems items={data} />\n      </Container>\n      <Channelling />\n    </Layout>\n  )\n}\n\nexport default Landingpage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        url: siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    remark: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      posts: edges {\n        post: node {\n          html\n          frontmatter {\n            layout\n            title\n            path\n            visit\n            category\n            role\n            brief\n            description\n            grid\n            date(formatString: \"YYYY\")\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1500) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            infoShow\n            hideStory\n            quote\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}