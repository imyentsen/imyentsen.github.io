{"version":3,"sources":["webpack:///./src/templates/Page/index.js","webpack:///./src/templates/index.js"],"names":["Page","data","dangerouslySetInnerHTML","__html","post","html","pageQuery","Template","location","Layout","Meta","title","get","site","desc","ogimg","Post","options","isIndex","adsense","props"],"mappings":"+NAMeA,G,UAHF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,yBAAKC,wBAAyB,CAAEC,OAAQF,EAAKG,KAAKC,UC8BvCC,GAFEC,UAvBE,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAMO,EAAT,EAASA,SAAT,OACf,6BACE,kBAACC,EAAA,EAAD,CAAQD,SAAUA,GAChB,kBAACE,EAAA,EAAD,CACEC,MAAOC,IAAIX,EAAM,0BACjBY,KAAMD,IAAIX,EAAM,aAChBa,KAAMF,IAAIX,EAAM,gCAChBc,MAAOH,IAAIX,EAAM,4BAEuB,SAAzCW,IAAIX,EAAM,2BACT,kBAACe,EAAA,EAAD,CACEf,KAAMW,IAAIX,EAAM,QAChBgB,QAAS,CACPC,SAAS,EACTC,QAASP,IAAIX,EAAM,wBAIvB,kBAAC,Q,GAAcmB,UAOD,e","file":"component---src-templates-index-js-1983fbc75a0935acf640.js","sourcesContent":["import React from 'react'\nimport './style.scss'\n\nconst Page = ({ data }) => (\n  <div dangerouslySetInnerHTML={{ __html: data.post.html }} />\n)\nexport default Page\n","import { graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\n\nimport Post from 'templates/Post'\nimport Meta from 'components/Meta'\nimport Layout from 'components/Layout'\nimport Page from 'templates/Page'\n\nconst Template = ({ data, location }) => (\n  <div>\n    <Layout location={location}>\n      <Meta\n        title={get(data, 'post.frontmatter.title')}\n        site={get(data, 'site.meta')}\n        desc={get(data, 'post.frontmatter.description')}\n        ogimg={get(data, 'post.frontmatter.image')}\n      />\n      {get(data, 'post.frontmatter.layout') !== 'page' ? (\n        <Post\n          data={get(data, 'post')}\n          options={{\n            isIndex: false,\n            adsense: get(data, 'site.meta.adsense'),\n          }}\n        />\n      ) : (\n        <Page {...this.props} />\n      )}\n    </Layout>\n  </div>\n)\nexport default Template\n\nexport const pageQuery = graphql`\n  query PostByPath($path: String!) {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        url: siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        layout\n        title\n        path\n        category\n        skill\n        role\n        description\n        date(formatString: \"YYYY\")\n        image {\n          childImageSharp {\n            fixed(width: 500) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n            fluid(quality: 90) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}