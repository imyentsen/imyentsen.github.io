{"version":3,"sources":["webpack:///./node_modules/pts/dist/es5.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["factory","window","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","./src/Canvas.ts","_createClass","defineProperties","target","props","length","descriptor","configurable","writable","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","constructor","setPrototypeOf","__proto__","Space_1","Form_1","Pt_1","Util_1","Typography_1","Op_1","CanvasSpace","_Space_1$MultiTouchSp","elem","callback","this","_this","getPrototypeOf","_pixelScale","_autoResize","_bgcolor","_offscreen","_initialResize","_selector","id","Element","document","querySelector","substr","nodeName","toLowerCase","_container","_canvas","_createElement","appendChild","parentElement","body","setTimeout","_ready","_ctx","getContext","MultiTouchSpace","arguments","undefined","createElement","setAttribute","Error","k","_isReady","_resizeHandler","clear","dispatchEvent","Event","players","start","bound","clone","_pointer","center","opt","bgcolor","autoResize","resize","retina","r1","devicePixelRatio","r2","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Math","max","offscreen","_offCanvas","_offCtx","b","evt","width","size","x","height","y","style","floor","scale","translate","render","isPlaying","playOnce","getBoundingClientRect","box","Bound","fromBoundingRect","add","pageXOffset","pageYOffset","CanvasForm","bg","lastColor","fillStyle","fillRect","clearRect","time","save","receiver","Function","desc","getOwnPropertyDescriptor","parent","_get","restore","set","auto","addEventListener","removeEventListener","_Form_1$VisualForm","space","_this2","_style","strokeStyle","lineWidth","lineJoin","lineCap","_space","ctx","font","_font","VisualForm","off","clearOffscreen","hasOffscreen","offscreenCtx","offset","drawImage","offscreenCanvas","filled","linejoin","linecap","stroked","sizeOrFont","weight","lineHeight","family","face","_estimateTextWidth","fontWidthEstimate","_this3","estimate","Typography","textWidthEstimator","measureText","str","tail","truncate","getTextWidth","vertical","Rectangle","px","textAlign","py","Pt","Font","_filled","fill","_stroked","stroke","radius","shape","_paint","pts","circle","pt","startAngle","endAngle","cc","arc","halfsize","square","line","polygon","rect","img","original","image","txt","maxWidth","text","verticalAlign","textBaseline","_textTruncate","_textAlign","_this4","crop","lstep","lines","nextLine","sub","buffer","newln","indexOf","push","dt","lastIndexOf","lsize","lbox","lpad","Group","$add","$subtract","len","alignment","baseline","w","beginPath","Const","two_pi","closePath","x1","y1","x2","y2","moveTo","lineTo","orig","fillText","./src/Color.ts","_slicedToArray","arr","Array","isArray","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","sliceIterator","Num_1","Color","_Pt_1$Pt","_ref","_len","args","_key","apply","concat","_mode","_isNorm","toMode","fname","toUpperCase","to","toNorm","ranges","Num","mapToRange","normalize","format","_hex","toString","alpha","_len2","_key2","Util","getArgs","hex","fn","substring","hexVal","parseInt","from","zipSlice","$take","rgb","normalizedInput","normalizedOutput","_ref2","$normalize","_ref3","g","min","h","hsl","_hsl","q","convert","sc","_ref4","_ref5","v","hsb","_hsb","f","XYZtoLAB","RGBtoXYZ","lab","XYZtoRGB","LABtoXYZ","LABtoLCH","RGBtoLAB","lch","LABtoRGB","LCHtoLAB","XYZtoLUV","luv","LUVtoXYZ","pow","xyz","_ref6","_ref7","z","round","divide","D65","cy","nnn","_ref8","_ref9","u","refU","refV","L","_ref10","_ref11","cubeY","Geom","toDegree","boundRadian","atan2","sqrt","rad","toRadian","cos","sin","./src/Create.ts","LinearAlgebra_1","Create","count","dimensions","random","depth","ln","Line","subpoints","unshift","columns","rows","orientation","unit","$divide","$multiply","topLeft","a","toAngle","half_pi","dx","dy","seed","np","Noise","initNoise","Delaunay","grad3","permTable","perm","j","n00","Vec","dot","n01","n10","n11","_fade","tx","lerp","_Pt_1$Group","_mesh","triangleOnly","indices","sort","slice","st","_superTriangle","opened","_circum","closed","tris","edges","circum","triangle","splice","epsilon","_dedupe","_i2","_len3","_cache","vs","neighborPts","cs","sortEdges","minPt","maxPt","$min","$max","mid","dmax","tri","_triangle","Triangle","circumcircle","./src/Dom.ts","DOMSpace","_css","refresh","styles","background","innerHTML","val","update","_styles","backgroundColor","appendTo","data","HTMLSpace","_DOMSpace","HTMLForm","player","querySelectorAll","scopeID","forEach","el","parentNode","removeChild","autoClass","group","groupID","groupCount","currentID","currentClass","border-color","color","border-width","border-radius","border-style","position","top","left","fontSize","fontFamily","element","styleTo","group_id","nextID","item","animateID","updateScope","point","warn","domID","setAttr","join","htmlElement","getID","class","rectStyle","_checkSize","textContent","./src/Form.ts","Form","required","_Form","groups","rest","_multiple","./src/LinearAlgebra.ts","_i3","_i4","_len4","magnitude","map","abs","ceil","Number","MIN_VALUE","index","MAX_VALUE","Mat","isNum","transposed","elementwise","ai","alen","transpose","_ai","_alen","make","bi","blen","_ai2","_alen2","defaultValue","useLongest","ps","reduce","zip","cosA","sinA","tanX","tanY","sx","sy","at","scale2DMatrix","rotate2DMatrix","shear2DMatrix","p1","p2","intercept","yi","ang2","atan","slope","./src/Num.ts","threshold","sum","PI","currA","currB","targetA","targetB","normalizeValue","angle","boundValue","radian","deg_to_rad","rad_to_deg","average","ptOrIndex","method","axis","xy","pa","pb","boundPt1","boundPt2","within","bounds","boundingBox","da","db","det","$cross2D","_scale","anchor","scs","lenP","rotateAt2DMatrix","transform2D","shearAt2DMatrix","tanx","tan","tany","mat","reflectAt2DMatrix","Float64Array","table","boundAngle","Shaping","t2","t4","bounceOut","bounceIn","exp","A","B","om2a","curve","Curve","bezierStep","controlPoints","steps","tt","Range","_dims","_source","fromPtArray","calc","dims","mag","_max","_min","_mag","exclude","./src/Op.ts","_errorLength","obj","param","xi","p3","$cross","equals","magnitudeSq","asProjection","proj","$project","perpendicularFromPt","la","lb","_y","intersectRay2D","withinBound","ray","lineOrRay","poly","intersectLineWithRay2D","intersectLine2D","lines1","lines2","isRay","lenk","_ip","gridPt","subtract","intersectGridWithRay2D","gg","hasIntersectRect2D","intersectLines2D","sides","num","interpolate","cropAsCircle","ls","multiply","fromCenter","sideIdx","graphic","atTail","perpendicular","widthOrSize","fromTopLeft","half","Circle","fromRect","enclose","maxValue","minValue","p0","_Rectangle$corners","corners","_Rectangle$corners2","rects","merged","flatten","_center","ratio","asRows","rect1","rect2","incircle","disc","discSqrt","t1","dv","dr2","dr","ar","br","ar2","br2","ang","inc","toTriangle","fromCircle","Polygon","midpoints","opp","oppositeSide","altitude","bisector","incenter","area","perimeter","total","md","medial","circumcenter","centroid","idx","sp","split","_errorOutofBound","gs","right","adjacentSides","segments","sorted","dq","bot","hull","originIndex","_near","_item","unitAxis","poly1","poly2","projectAxis","lineAt","info","which","dist","normal","edge","vertex","minDist","MAX_SAFE_INTEGER","_axisOverlap","plen","b1","b2","c1","c2","smallest","lp","ins","intersectPolygon2D","polys","boxes","ts","copyStart","_index","ctrls","params","getSteps","catmullRomStep","cp","step","_calcPt","tension","cardinalStep","h2","h3","bsplineTensionStep","bsplineStep","./src/Physics.ts","World","friction","gravity","_lastTime","_gravity","_friction","_damping","_particles","_bodies","_pnames","_bnames","_bound","fromGroup","ms","_updateParticles","_updateBodies","_drawParticles","_drawBodies","Body","bodyIndex","particleIndex","prevDt","addForce","verlet","integrate","boundConstraint","collide","bds","klen","bk","_k","processBody","mlen","processParticle","processEdges","stiff","precise","m1","mass","m2","mm","delta","distSq","damping","changed","previous","_c","Particle","_mass","_radius","_force","_prev","_lock","lastDt","_lockPt","lt","damp","dp","np1","np2","f1","f2","dm1","dm2","_body","_cs","_stiff","_locks","list","index1","index2","link","nd","n2","_cs$i","edgeConstraint","hit","hasIntersectPolygon","cv","eg","lambda","m0","mr0","mr1","hasIntersectCircle","autoLink","autoMass","init","linkAll","./src/Pt.ts","_extendableBuiltin3","cls","ExtendableBuiltin","Reflect","construct","_extendableBuiltin","_extendableBuiltin2","Float32Array","_clone","anchorFromPt","change","_key3","fns","_ops","op","_key4","toArray","_len5","_key5","_clone2","_len6","_key6","_clone3","_len7","_key7","_clone4","_len8","_key8","_clone5","_len9","_key9","_len10","_key10","cross2D","_len11","_key11","cross","_len12","_key12","_len13","_key13","rotate2D","shear2D","reflect2D","_id","randomize","_extendableBuiltin4","_len14","_key14","chunkSize","stride","loopBack","arr2","_toConsumableArray","pts_per_segment","_len15","_key15","clamp","chunk","tc","_len16","_key16","moveBy","_scale2","dim","ptFn","_len17","_key17","_len18","_key18","forEachPt","_len19","_key19","_len20","_key20","_len21","_key21","_Group","_len22","_key22","_size","_topLeft","_bottomRight","_inited","_updateSize","_updateCenter","_updatePosFromTop","_updatePosFromCenter","bottom","./src/Space.ts","UI_1","Space","_time","prev","diff","end","playerCount","_animID","_pause","_refresh","_playing","animate","pid","inited","requestAnimationFrame","play","playItems","cancelAnimationFrame","toggle","duration","stop","context","_renderFunc","_Space","_pressed","_dragged","_hasMouse","_hasTouch","bindCanvas","_mouseDown","_mouseUp","_mouseOver","_mouseOut","_mouseMove","unbindCanvas","_touchMove","pageX","pageY","type","MouseEvent","outerBound","action","_v","changedTouches","touch","_mouseAction","UIPointerActions","down","up","drop","move","drag","over","out","preventDefault","./src/Svg.ts","Dom_1","SVGSpace","_Dom_1$DOMSpace","svgElement","SVGForm","viewBox","xmlns","version","createElementNS","stroke-width","stroke-linejoin","stroke-linecap","cx","largeArc","pi","sweep","_poly","points","fromArray","pointer-events","./src/Typography.ts","samples","distribution","avg","trim","nh","direction","defaultSize","./src/UI.ts","UIShape","rectangle","polyline","uidrag","enter","leave","all","UI","states","_holds","_group","_shape","_counter","_states","_actions","_addHandler","_removeHandler","_within","_trigger","hasIntersectPoint","ui","uis","listen","temp","UIButton","_UI","_hoverID","hover","clicks","UA","on","state","_capID","hold","unhold","ids","enterID","leaveID","UIDragger","_UIButton","_draggingID","_moveHoldID","dragging","./src/Util.ts","_typeof","yz","xz","horizontal","identical","bottom_right","bottom_left","top_left","top_right","quarter_pi","one_degree","newton","gaussian","lv","_warnLevel","pos","ArrayBuffer","isView","message","defaultReturn","warnLevel","range","chunks","result","lenB","arrays","url","request","XMLHttpRequest","open","onload","status","responseText","onerror","send","./src/_module.ts","__export","dP","FProto","nameRE","match","e"],"mappings":"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","file":"13-d6286959ae6129c1a0a0.js","sourcesContent":["/*!\n * pts.js 0.6.6 - Copyright © 2017-2018 William Ngan and contributors.\n * Licensed under Apache 2.0 License.\n * See https://github.com/williamngan/pts for details.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/_module.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/Canvas.ts\":\n/*!***********************!*\\\n  !*** ./src/Canvas.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Space_1 = __webpack_require__(/*! ./Space */ \"./src/Space.ts\");\nvar Form_1 = __webpack_require__(/*! ./Form */ \"./src/Form.ts\");\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nvar Typography_1 = __webpack_require__(/*! ./Typography */ \"./src/Typography.ts\");\nvar Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\n\nvar CanvasSpace = function (_Space_1$MultiTouchSp) {\n    _inherits(CanvasSpace, _Space_1$MultiTouchSp);\n\n    function CanvasSpace(elem, callback) {\n        _classCallCheck(this, CanvasSpace);\n\n        var _this = _possibleConstructorReturn(this, (CanvasSpace.__proto__ || Object.getPrototypeOf(CanvasSpace)).call(this));\n\n        _this._pixelScale = 1;\n        _this._autoResize = true;\n        _this._bgcolor = \"#e1e9f0\";\n        _this._offscreen = false;\n        _this._initialResize = false;\n        var _selector = null;\n        var _existed = false;\n        _this.id = \"pt\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            _this.id = \"pts_existing_space\";\n        } else {\n            var id = elem;\n            id = elem[0] === \"#\" || elem[0] === \".\" ? elem : \"#\" + elem;\n            _selector = document.querySelector(id);\n            _existed = true;\n            _this.id = id.substr(1);\n        }\n        if (!_selector) {\n            _this._container = _this._createElement(\"div\", _this.id + \"_container\");\n            _this._canvas = _this._createElement(\"canvas\", _this.id);\n            _this._container.appendChild(_this._canvas);\n            document.body.appendChild(_this._container);\n            _existed = false;\n        } else if (_selector.nodeName.toLowerCase() != \"canvas\") {\n            _this._container = _selector;\n            _this._canvas = _this._createElement(\"canvas\", _this.id + \"_canvas\");\n            _this._container.appendChild(_this._canvas);\n            _this._initialResize = true;\n        } else {\n            _this._canvas = _selector;\n            _this._container = _selector.parentElement;\n            _this._autoResize = false;\n        }\n        setTimeout(_this._ready.bind(_this, callback), 100);\n        _this._ctx = _this._canvas.getContext('2d');\n        return _this;\n    }\n\n    _createClass(CanvasSpace, [{\n        key: \"_createElement\",\n        value: function _createElement() {\n            var elem = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"div\";\n            var id = arguments[1];\n\n            var d = document.createElement(elem);\n            d.setAttribute(\"id\", id);\n            return d;\n        }\n    }, {\n        key: \"_ready\",\n        value: function _ready(callback) {\n            if (!this._container) throw new Error(\"Cannot initiate #\" + this.id + \" element\");\n            this._isReady = true;\n            this._resizeHandler(null);\n            this.clear(this._bgcolor);\n            this._canvas.dispatchEvent(new Event(\"ready\"));\n            for (var k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    if (this.players[k].start) this.players[k].start(this.bound.clone(), this);\n                }\n            }\n            this._pointer = this.center;\n            this._initialResize = false;\n            if (callback) callback(this.bound, this._canvas);\n        }\n    }, {\n        key: \"setup\",\n        value: function setup(opt) {\n            if (opt.bgcolor) this._bgcolor = opt.bgcolor;\n            this.autoResize = opt.resize != undefined ? opt.resize : false;\n            if (opt.retina !== false) {\n                var r1 = window.devicePixelRatio || 1;\n                var r2 = this._ctx.webkitBackingStorePixelRatio || this._ctx.mozBackingStorePixelRatio || this._ctx.msBackingStorePixelRatio || this._ctx.oBackingStorePixelRatio || this._ctx.backingStorePixelRatio || 1;\n                this._pixelScale = Math.max(1, r1 / r2);\n            }\n            if (opt.offscreen) {\n                this._offscreen = true;\n                this._offCanvas = this._createElement(\"canvas\", this.id + \"_offscreen\");\n                this._offCtx = this._offCanvas.getContext('2d');\n            } else {\n                this._offscreen = false;\n            }\n            return this;\n        }\n    }, {\n        key: \"resize\",\n        value: function resize(b, evt) {\n            this.bound = b;\n            this._canvas.width = this.bound.size.x * this._pixelScale;\n            this._canvas.height = this.bound.size.y * this._pixelScale;\n            this._canvas.style.width = Math.floor(this.bound.size.x) + \"px\";\n            this._canvas.style.height = Math.floor(this.bound.size.y) + \"px\";\n            if (this._offscreen) {\n                this._offCanvas.width = this.bound.size.x * this._pixelScale;\n                this._offCanvas.height = this.bound.size.y * this._pixelScale;\n            }\n            if (this._pixelScale != 1) {\n                this._ctx.scale(this._pixelScale, this._pixelScale);\n                this._ctx.translate(0.5, 0.5);\n                if (this._offscreen) {\n                    this._offCtx.scale(this._pixelScale, this._pixelScale);\n                    this._offCtx.translate(0.5, 0.5);\n                }\n            }\n            for (var k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    var p = this.players[k];\n                    if (p.resize) p.resize(this.bound, evt);\n                }\n            }\n            this.render(this._ctx);\n            if (evt && !this.isPlaying) this.playOnce(0);\n            return this;\n        }\n    }, {\n        key: \"_resizeHandler\",\n        value: function _resizeHandler(evt) {\n            var b = this._autoResize || this._initialResize ? this._container.getBoundingClientRect() : this._canvas.getBoundingClientRect();\n            if (b) {\n                var box = Pt_1.Bound.fromBoundingRect(b);\n                box.center = box.center.add(window.pageXOffset, window.pageYOffset);\n                this.resize(box, evt);\n            }\n        }\n    }, {\n        key: \"getForm\",\n        value: function getForm() {\n            return new CanvasForm(this);\n        }\n    }, {\n        key: \"clear\",\n        value: function clear(bg) {\n            if (bg) this._bgcolor = bg;\n            var lastColor = this._ctx.fillStyle;\n            if (this._bgcolor && this._bgcolor != \"transparent\") {\n                this._ctx.fillStyle = this._bgcolor;\n                this._ctx.fillRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n            } else {\n                this._ctx.clearRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n            }\n            this._ctx.fillStyle = lastColor;\n            return this;\n        }\n    }, {\n        key: \"clearOffscreen\",\n        value: function clearOffscreen(bg) {\n            if (this._offscreen) {\n                if (bg) {\n                    this._offCtx.fillStyle = bg;\n                    this._offCtx.fillRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n                } else {\n                    this._offCtx.clearRect(-1, -1, this._offCanvas.width + 1, this._offCanvas.height + 1);\n                }\n            }\n            return this;\n        }\n    }, {\n        key: \"playItems\",\n        value: function playItems(time) {\n            if (this._isReady) {\n                this._ctx.save();\n                if (this._offscreen) this._offCtx.save();\n                _get(CanvasSpace.prototype.__proto__ || Object.getPrototypeOf(CanvasSpace.prototype), \"playItems\", this).call(this, time);\n                this._ctx.restore();\n                if (this._offscreen) this._offCtx.restore();\n                this.render(this._ctx);\n            }\n        }\n    }, {\n        key: \"autoResize\",\n        set: function set(auto) {\n            this._autoResize = auto;\n            if (auto) {\n                window.addEventListener('resize', this._resizeHandler.bind(this));\n            } else {\n                window.removeEventListener('resize', this._resizeHandler.bind(this));\n            }\n        },\n        get: function get() {\n            return this._autoResize;\n        }\n    }, {\n        key: \"background\",\n        set: function set(bg) {\n            this._bgcolor = bg;\n        },\n        get: function get() {\n            return this._bgcolor;\n        }\n    }, {\n        key: \"pixelScale\",\n        get: function get() {\n            return this._pixelScale;\n        }\n    }, {\n        key: \"hasOffscreen\",\n        get: function get() {\n            return this._offscreen;\n        }\n    }, {\n        key: \"offscreenCtx\",\n        get: function get() {\n            return this._offCtx;\n        }\n    }, {\n        key: \"offscreenCanvas\",\n        get: function get() {\n            return this._offCanvas;\n        }\n    }, {\n        key: \"element\",\n        get: function get() {\n            return this._canvas;\n        }\n    }, {\n        key: \"parent\",\n        get: function get() {\n            return this._container;\n        }\n    }, {\n        key: \"ready\",\n        get: function get() {\n            return this._isReady;\n        }\n    }, {\n        key: \"ctx\",\n        get: function get() {\n            return this._ctx;\n        }\n    }]);\n\n    return CanvasSpace;\n}(Space_1.MultiTouchSpace);\n\nexports.CanvasSpace = CanvasSpace;\n\nvar CanvasForm = function (_Form_1$VisualForm) {\n    _inherits(CanvasForm, _Form_1$VisualForm);\n\n    function CanvasForm(space) {\n        _classCallCheck(this, CanvasForm);\n\n        var _this2 = _possibleConstructorReturn(this, (CanvasForm.__proto__ || Object.getPrototypeOf(CanvasForm)).call(this));\n\n        _this2._style = {\n            fillStyle: \"#f03\", strokeStyle: \"#fff\",\n            lineWidth: 1, lineJoin: \"bevel\", lineCap: \"butt\"\n        };\n        _this2._space = space;\n        _this2._space.add({ start: function start() {\n                _this2._ctx = _this2._space.ctx;\n                _this2._ctx.fillStyle = _this2._style.fillStyle;\n                _this2._ctx.strokeStyle = _this2._style.strokeStyle;\n                _this2._ctx.lineJoin = \"bevel\";\n                _this2._ctx.font = _this2._font.value;\n                _this2._ready = true;\n            } });\n        return _this2;\n    }\n\n    _createClass(CanvasForm, [{\n        key: \"useOffscreen\",\n        value: function useOffscreen() {\n            var off = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            var clear = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            if (clear) this._space.clearOffscreen(typeof clear == \"string\" ? clear : null);\n            this._ctx = this._space.hasOffscreen && off ? this._space.offscreenCtx : this._space.ctx;\n            return this;\n        }\n    }, {\n        key: \"renderOffscreen\",\n        value: function renderOffscreen() {\n            var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0];\n\n            if (this._space.hasOffscreen) {\n                this._space.ctx.drawImage(this._space.offscreenCanvas, offset[0], offset[1], this._space.width, this._space.height);\n            }\n        }\n    }, {\n        key: \"fill\",\n        value: function fill(c) {\n            if (typeof c == \"boolean\") {\n                this.filled = c;\n            } else {\n                this.filled = true;\n                this._style.fillStyle = c;\n                this._ctx.fillStyle = c;\n            }\n            return this;\n        }\n    }, {\n        key: \"stroke\",\n        value: function stroke(c, width, linejoin, linecap) {\n            if (typeof c == \"boolean\") {\n                this.stroked = c;\n            } else {\n                this.stroked = true;\n                this._style.strokeStyle = c;\n                this._ctx.strokeStyle = c;\n                if (width) {\n                    this._ctx.lineWidth = width;\n                    this._style.lineWidth = width;\n                }\n                if (linejoin) {\n                    this._ctx.lineJoin = linejoin;\n                    this._style.lineJoin = linejoin;\n                }\n                if (linecap) {\n                    this._ctx.lineCap = linecap;\n                    this._style.lineCap = linecap;\n                }\n            }\n            return this;\n        }\n    }, {\n        key: \"font\",\n        value: function font(sizeOrFont, weight, style, lineHeight, family) {\n            if (typeof sizeOrFont == \"number\") {\n                this._font.size = sizeOrFont;\n                if (family) this._font.face = family;\n                if (weight) this._font.weight = weight;\n                if (style) this._font.style = style;\n                if (lineHeight) this._font.lineHeight = lineHeight;\n                this._ctx.font = this._font.value;\n            } else {\n                this._font = sizeOrFont;\n            }\n            if (this._estimateTextWidth) this.fontWidthEstimate(true);\n            return this;\n        }\n    }, {\n        key: \"fontWidthEstimate\",\n        value: function fontWidthEstimate() {\n            var _this3 = this;\n\n            var estimate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            this._estimateTextWidth = estimate ? Typography_1.Typography.textWidthEstimator(function (c) {\n                return _this3._ctx.measureText(c).width;\n            }) : undefined;\n            return this;\n        }\n    }, {\n        key: \"getTextWidth\",\n        value: function getTextWidth(c) {\n            return !this._estimateTextWidth ? this._ctx.measureText(c + \" .\").width : this._estimateTextWidth(c);\n        }\n    }, {\n        key: \"_textTruncate\",\n        value: function _textTruncate(str, width) {\n            var tail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n            return Typography_1.Typography.truncate(this.getTextWidth.bind(this), str, width, tail);\n        }\n    }, {\n        key: \"_textAlign\",\n        value: function _textAlign(box, vertical, offset, center) {\n            if (!center) center = Op_1.Rectangle.center(box);\n            var px = box[0][0];\n            if (this._ctx.textAlign == \"end\" || this._ctx.textAlign == \"right\") {\n                px = box[1][0];\n            } else if (this._ctx.textAlign == \"center\" || this._ctx.textAlign == \"middle\") {\n                px = center[0];\n            }\n            var py = center[1];\n            if (vertical == \"top\" || vertical == \"start\") {\n                py = box[0][1];\n            } else if (vertical == \"end\" || vertical == \"bottom\") {\n                py = box[1][1];\n            }\n            return offset ? new Pt_1.Pt(px + offset[0], py + offset[1]) : new Pt_1.Pt(px, py);\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            for (var k in this._style) {\n                if (this._style.hasOwnProperty(k)) {\n                    this._ctx[k] = this._style[k];\n                }\n            }\n            this._font = new Form_1.Font();\n            this._ctx.font = this._font.value;\n            return this;\n        }\n    }, {\n        key: \"_paint\",\n        value: function _paint() {\n            if (this._filled) this._ctx.fill();\n            if (this._stroked) this._ctx.stroke();\n        }\n    }, {\n        key: \"point\",\n        value: function point(p) {\n            var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n            var shape = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"square\";\n\n            if (!p) return;\n            if (!CanvasForm[shape]) throw new Error(shape + \" is not a static function of CanvasForm\");\n            CanvasForm[shape](this._ctx, p, radius);\n            this._paint();\n            return this;\n        }\n    }, {\n        key: \"circle\",\n        value: function circle(pts) {\n            CanvasForm.circle(this._ctx, pts[0], pts[1][0]);\n            this._paint();\n            return this;\n        }\n    }, {\n        key: \"arc\",\n        value: function arc(pt, radius, startAngle, endAngle, cc) {\n            CanvasForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n            this._paint();\n            return this;\n        }\n    }, {\n        key: \"square\",\n        value: function square(pt, halfsize) {\n            CanvasForm.square(this._ctx, pt, halfsize);\n            this._paint();\n            return this;\n        }\n    }, {\n        key: \"line\",\n        value: function line(pts) {\n            CanvasForm.line(this._ctx, pts);\n            this._paint();\n            return this;\n        }\n    }, {\n        key: \"polygon\",\n        value: function polygon(pts) {\n            CanvasForm.polygon(this._ctx, pts);\n            this._paint();\n            return this;\n        }\n    }, {\n        key: \"rect\",\n        value: function rect(pts) {\n            CanvasForm.rect(this._ctx, pts);\n            this._paint();\n            return this;\n        }\n    }, {\n        key: \"image\",\n        value: function image(img, target, original) {\n            CanvasForm.image(this._ctx, img, target, original);\n            return this;\n        }\n    }, {\n        key: \"text\",\n        value: function text(pt, txt, maxWidth) {\n            CanvasForm.text(this._ctx, pt, txt, maxWidth);\n            return this;\n        }\n    }, {\n        key: \"textBox\",\n        value: function textBox(box, txt) {\n            var verticalAlign = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"middle\";\n            var tail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n            var overrideBaseline = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n            if (overrideBaseline) this._ctx.textBaseline = verticalAlign;\n            var size = Op_1.Rectangle.size(box);\n            var t = this._textTruncate(txt, size[0], tail);\n            this.text(this._textAlign(box, verticalAlign), t[0]);\n            return this;\n        }\n    }, {\n        key: \"paragraphBox\",\n        value: function paragraphBox(box, txt) {\n            var lineHeight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1.2;\n\n            var _this4 = this;\n\n            var verticalAlign = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"top\";\n            var crop = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n            var size = Op_1.Rectangle.size(box);\n            this._ctx.textBaseline = \"top\";\n            var lstep = this._font.size * lineHeight;\n            var nextLine = function nextLine(sub) {\n                var buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n                var cc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n                if (!sub) return buffer;\n                if (crop && cc * lstep > size[1] - lstep * 2) return buffer;\n                if (cc > 10000) throw new Error(\"max recursion reached (10000)\");\n                var t = _this4._textTruncate(sub, size[0], \"\");\n                var newln = t[0].indexOf(\"\\n\");\n                if (newln >= 0) {\n                    buffer.push(t[0].substr(0, newln));\n                    return nextLine(sub.substr(newln + 1), buffer, cc + 1);\n                }\n                var dt = t[0].lastIndexOf(\" \") + 1;\n                if (dt <= 0 || t[1] === sub.length) dt = undefined;\n                var line = t[0].substr(0, dt);\n                buffer.push(line);\n                return t[1] <= 0 || t[1] === sub.length ? buffer : nextLine(sub.substr(dt || t[1]), buffer, cc + 1);\n            };\n            var lines = nextLine(txt);\n            var lsize = lines.length * lstep;\n            var lbox = box;\n            if (verticalAlign == \"middle\" || verticalAlign == \"center\") {\n                var lpad = (size[1] - lsize) / 2;\n                if (crop) lpad = Math.max(0, lpad);\n                lbox = new Pt_1.Group(box[0].$add(0, lpad), box[1].$subtract(0, lpad));\n            } else if (verticalAlign == \"bottom\") {\n                lbox = new Pt_1.Group(box[0].$add(0, size[1] - lsize), box[1]);\n            } else {\n                lbox = new Pt_1.Group(box[0], box[0].$add(size[0], lsize));\n            }\n            var center = Op_1.Rectangle.center(lbox);\n            for (var i = 0, len = lines.length; i < len; i++) {\n                this.text(this._textAlign(lbox, \"top\", [0, i * lstep], center), lines[i]);\n            }\n            return this;\n        }\n    }, {\n        key: \"alignText\",\n        value: function alignText() {\n            var alignment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"left\";\n            var baseline = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"alphabetic\";\n\n            if (baseline == \"center\") baseline = \"middle\";\n            if (baseline == \"baseline\") baseline = \"alphabetic\";\n            this._ctx.textAlign = alignment;\n            this._ctx.textBaseline = baseline;\n            return this;\n        }\n    }, {\n        key: \"log\",\n        value: function log(txt) {\n            var w = this._ctx.measureText(txt).width + 20;\n            this.stroke(false).fill(\"rgba(0,0,0,.4)\").rect([[0, 0], [w, 20]]);\n            this.fill(\"#fff\").text([10, 14], txt);\n            return this;\n        }\n    }, {\n        key: \"space\",\n        get: function get() {\n            return this._space;\n        }\n    }], [{\n        key: \"circle\",\n        value: function circle(ctx, pt) {\n            var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n\n            if (!pt) return;\n            ctx.beginPath();\n            ctx.arc(pt[0], pt[1], radius, 0, Util_1.Const.two_pi, false);\n            ctx.closePath();\n        }\n    }, {\n        key: \"arc\",\n        value: function arc(ctx, pt, radius, startAngle, endAngle, cc) {\n            if (!pt) return;\n            ctx.beginPath();\n            ctx.arc(pt[0], pt[1], radius, startAngle, endAngle, cc);\n        }\n    }, {\n        key: \"square\",\n        value: function square(ctx, pt, halfsize) {\n            if (!pt) return;\n            var x1 = pt[0] - halfsize;\n            var y1 = pt[1] - halfsize;\n            var x2 = pt[0] + halfsize;\n            var y2 = pt[1] + halfsize;\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x1, y2);\n            ctx.lineTo(x2, y2);\n            ctx.lineTo(x2, y1);\n            ctx.closePath();\n        }\n    }, {\n        key: \"line\",\n        value: function line(ctx, pts) {\n            if (pts.length < 2) return;\n            ctx.beginPath();\n            ctx.moveTo(pts[0][0], pts[0][1]);\n            for (var i = 1, len = pts.length; i < len; i++) {\n                if (pts[i]) ctx.lineTo(pts[i][0], pts[i][1]);\n            }\n        }\n    }, {\n        key: \"polygon\",\n        value: function polygon(ctx, pts) {\n            if (pts.length < 2) return;\n            ctx.beginPath();\n            ctx.moveTo(pts[0][0], pts[0][1]);\n            for (var i = 1, len = pts.length; i < len; i++) {\n                if (pts[i]) ctx.lineTo(pts[i][0], pts[i][1]);\n            }\n            ctx.closePath();\n        }\n    }, {\n        key: \"rect\",\n        value: function rect(ctx, pts) {\n            if (pts.length < 2) return;\n            ctx.beginPath();\n            ctx.moveTo(pts[0][0], pts[0][1]);\n            ctx.lineTo(pts[0][0], pts[1][1]);\n            ctx.lineTo(pts[1][0], pts[1][1]);\n            ctx.lineTo(pts[1][0], pts[0][1]);\n            ctx.closePath();\n        }\n    }, {\n        key: \"image\",\n        value: function image(ctx, img) {\n            var target = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Pt_1.Pt();\n            var orig = arguments[3];\n\n            if (typeof target[0] === \"number\") {\n                ctx.drawImage(img, target[0], target[1]);\n            } else {\n                var t = target;\n                if (orig) {\n                    ctx.drawImage(img, orig[0][0], orig[0][1], orig[1][0] - orig[0][0], orig[1][1] - orig[0][1], t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]);\n                } else {\n                    ctx.drawImage(img, t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]);\n                }\n            }\n        }\n    }, {\n        key: \"text\",\n        value: function text(ctx, pt, txt, maxWidth) {\n            if (!pt) return;\n            ctx.fillText(txt, pt[0], pt[1], maxWidth);\n        }\n    }]);\n\n    return CanvasForm;\n}(Form_1.VisualForm);\n\nexports.CanvasForm = CanvasForm;\n\n/***/ }),\n\n/***/ \"./src/Color.ts\":\n/*!**********************!*\\\n  !*** ./src/Color.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nvar Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\n\nvar Color = function (_Pt_1$Pt) {\n    _inherits(Color, _Pt_1$Pt);\n\n    function Color() {\n        var _ref;\n\n        _classCallCheck(this, Color);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Color.__proto__ || Object.getPrototypeOf(Color)).call.apply(_ref, [this].concat(args)));\n\n        _this._mode = \"rgb\";\n        _this._isNorm = false;\n        return _this;\n    }\n\n    _createClass(Color, [{\n        key: \"clone\",\n        value: function clone() {\n            var c = new Color(this);\n            c.toMode(this._mode);\n            return c;\n        }\n    }, {\n        key: \"toMode\",\n        value: function toMode(mode) {\n            var convert = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            if (convert) {\n                var fname = this._mode.toUpperCase() + \"to\" + mode.toUpperCase();\n                if (Color[fname]) {\n                    this.to(Color[fname](this, this._isNorm, this._isNorm));\n                } else {\n                    throw new Error(\"Cannot convert color with \" + fname);\n                }\n            }\n            this._mode = mode;\n            return this;\n        }\n    }, {\n        key: \"normalize\",\n        value: function normalize() {\n            var toNorm = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            if (this._isNorm == toNorm) return this;\n            var ranges = Color.ranges[this._mode];\n            for (var i = 0; i < 3; i++) {\n                this[i] = !toNorm ? Num_1.Num.mapToRange(this[i], 0, 1, ranges[i][0], ranges[i][1]) : Num_1.Num.mapToRange(this[i], ranges[i][0], ranges[i][1], 0, 1);\n            }\n            this._isNorm = toNorm;\n            return this;\n        }\n    }, {\n        key: \"$normalize\",\n        value: function $normalize() {\n            var toNorm = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            return this.clone().normalize(toNorm);\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"mode\";\n\n            if (format == \"hex\") {\n                var _hex = function _hex(n) {\n                    var s = Math.floor(n).toString(16);\n                    return s.length < 2 ? '0' + s : s;\n                };\n                return \"#\" + _hex(this[0]) + _hex(this[1]) + _hex(this[2]);\n            } else if (format == \"rgba\") {\n                return \"rgba(\" + Math.floor(this[0]) + \",\" + Math.floor(this[1]) + \",\" + Math.floor(this[2]) + \",\" + this.alpha;\n            } else if (format == \"rgb\") {\n                return \"rgb(\" + Math.floor(this[0]) + \",\" + Math.floor(this[1]) + \",\" + Math.floor(this[2]);\n            } else {\n                return this._mode + \"(\" + this[0] + \",\" + this[1] + \",\" + this[2] + \",\" + this.alpha + \")\";\n            }\n        }\n    }, {\n        key: \"hex\",\n        get: function get() {\n            return this.toString(\"hex\");\n        }\n    }, {\n        key: \"rgb\",\n        get: function get() {\n            return this.toString(\"rgb\");\n        }\n    }, {\n        key: \"rgba\",\n        get: function get() {\n            return this.toString(\"rgba\");\n        }\n    }, {\n        key: \"mode\",\n        get: function get() {\n            return this._mode;\n        }\n    }, {\n        key: \"r\",\n        get: function get() {\n            return this[0];\n        },\n        set: function set(n) {\n            this[0] = n;\n        }\n    }, {\n        key: \"g\",\n        get: function get() {\n            return this[1];\n        },\n        set: function set(n) {\n            this[1] = n;\n        }\n    }, {\n        key: \"b\",\n        get: function get() {\n            return this[2];\n        },\n        set: function set(n) {\n            this[2] = n;\n        }\n    }, {\n        key: \"h\",\n        get: function get() {\n            return this._mode == \"lch\" ? this[2] : this[0];\n        },\n        set: function set(n) {\n            var i = this._mode == \"lch\" ? 2 : 0;\n            this[i] = n;\n        }\n    }, {\n        key: \"s\",\n        get: function get() {\n            return this[1];\n        },\n        set: function set(n) {\n            this[1] = n;\n        }\n    }, {\n        key: \"l\",\n        get: function get() {\n            return this._mode == \"hsl\" ? this[2] : this[0];\n        },\n        set: function set(n) {\n            var i = this._mode == \"hsl\" ? 2 : 0;\n            this[i] = n;\n        }\n    }, {\n        key: \"a\",\n        get: function get() {\n            return this[1];\n        },\n        set: function set(n) {\n            this[1] = n;\n        }\n    }, {\n        key: \"c\",\n        get: function get() {\n            return this[1];\n        },\n        set: function set(n) {\n            this[1] = n;\n        }\n    }, {\n        key: \"u\",\n        get: function get() {\n            return this[1];\n        },\n        set: function set(n) {\n            this[1] = n;\n        }\n    }, {\n        key: \"v\",\n        get: function get() {\n            return this[2];\n        },\n        set: function set(n) {\n            this[2] = n;\n        }\n    }, {\n        key: \"alpha\",\n        get: function get() {\n            return this.length > 3 ? this[3] : 1;\n        }\n    }, {\n        key: \"normalized\",\n        get: function get() {\n            return this._isNorm;\n        },\n        set: function set(b) {\n            this._isNorm = b;\n        }\n    }], [{\n        key: \"from\",\n        value: function from() {\n            var p = [1, 1, 1, 1];\n\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n\n            var c = Util_1.Util.getArgs(args);\n            for (var i = 0, len = p.length; i < len; i++) {\n                if (i < c.length) p[i] = c[i];\n            }\n            return new Color(p);\n        }\n    }, {\n        key: \"fromHex\",\n        value: function fromHex(hex) {\n            if (hex[0] == \"#\") hex = hex.substr(1);\n            if (hex.length <= 3) {\n                var fn = function fn(i) {\n                    return hex[i] || \"F\";\n                };\n                hex = \"\" + fn(0) + fn(0) + fn(1) + fn(1) + fn(2) + fn(2);\n            }\n            var alpha = 1;\n            if (hex.length === 8) {\n                alpha = hex.substr(6) && 0xFF / 255;\n                hex = hex.substring(0, 6);\n            }\n            var hexVal = parseInt(hex, 16);\n            return new Color(hexVal >> 16, hexVal >> 8 & 0xFF, hexVal & 0xFF, alpha);\n        }\n    }, {\n        key: \"rgb\",\n        value: function rgb() {\n            return Color.from.apply(Color, arguments).toMode(\"rgb\");\n        }\n    }, {\n        key: \"hsl\",\n        value: function hsl() {\n            return Color.from.apply(Color, arguments).toMode(\"hsl\");\n        }\n    }, {\n        key: \"hsb\",\n        value: function hsb() {\n            return Color.from.apply(Color, arguments).toMode(\"hsb\");\n        }\n    }, {\n        key: \"lab\",\n        value: function lab() {\n            return Color.from.apply(Color, arguments).toMode(\"lab\");\n        }\n    }, {\n        key: \"lch\",\n        value: function lch() {\n            return Color.from.apply(Color, arguments).toMode(\"lch\");\n        }\n    }, {\n        key: \"luv\",\n        value: function luv() {\n            return Color.from.apply(Color, arguments).toMode(\"luv\");\n        }\n    }, {\n        key: \"xyz\",\n        value: function xyz() {\n            return Color.from.apply(Color, arguments).toMode(\"xyz\");\n        }\n    }, {\n        key: \"maxValues\",\n        value: function maxValues(mode) {\n            return Color.ranges[mode].zipSlice(1).$take([0, 1, 2]);\n        }\n    }, {\n        key: \"RGBtoHSL\",\n        value: function RGBtoHSL(rgb) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var _ref2 = !normalizedInput ? rgb.$normalize() : rgb,\n                _ref3 = _slicedToArray(_ref2, 3),\n                r = _ref3[0],\n                g = _ref3[1],\n                b = _ref3[2];\n\n            var max = Math.max(r, g, b);\n            var min = Math.min(r, g, b);\n            var h = (max + min) / 2;\n            var s = h;\n            var l = h;\n            if (max == min) {\n                h = 0;\n                s = 0;\n            } else {\n                var d = max - min;\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                h = 0;\n                if (max === r) {\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                } else if (max === g) {\n                    h = (b - r) / d + 2;\n                } else if (max === b) {\n                    h = (r - g) / d + 4;\n                }\n            }\n            return Color.hsl(normalizedOutput ? h / 60 : h * 60, s, l, rgb.alpha);\n        }\n    }, {\n        key: \"HSLtoRGB\",\n        value: function HSLtoRGB(hsl) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var _hsl = _slicedToArray(hsl, 3),\n                h = _hsl[0],\n                s = _hsl[1],\n                l = _hsl[2];\n\n            if (!normalizedInput) h = h / 360;\n            if (s == 0) return Color.rgb(l * 255, l * 255, l * 255, hsl.alpha);\n            var q = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n            var p = 2 * l - q;\n            var convert = function convert(t) {\n                t = t < 0 ? t + 1 : t > 1 ? t - 1 : t;\n                if (t * 6 < 1) {\n                    return p + (q - p) * t * 6;\n                } else if (t * 2 < 1) {\n                    return q;\n                } else if (t * 3 < 2) {\n                    return p + (q - p) * (2 / 3 - t) * 6;\n                } else {\n                    return p;\n                }\n            };\n            var sc = normalizedOutput ? 1 : 255;\n            return Color.rgb(sc * convert(h + 1 / 3), sc * convert(h), sc * convert(h - 1 / 3), hsl.alpha);\n        }\n    }, {\n        key: \"RGBtoHSB\",\n        value: function RGBtoHSB(rgb) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var _ref4 = !normalizedInput ? rgb.$normalize() : rgb,\n                _ref5 = _slicedToArray(_ref4, 3),\n                r = _ref5[0],\n                g = _ref5[1],\n                b = _ref5[2];\n\n            var max = Math.max(r, g, b);\n            var min = Math.min(r, g, b);\n            var d = max - min;\n            var h = 0;\n            var s = max === 0 ? 0 : d / max;\n            var v = max;\n            if (max != min) {\n                if (max === r) {\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                } else if (max === g) {\n                    h = (b - r) / d + 2;\n                } else if (max === b) {\n                    h = (r - g) / d + 4;\n                }\n            }\n            return Color.hsb(normalizedOutput ? h / 60 : h * 60, s, v, rgb.alpha);\n        }\n    }, {\n        key: \"HSBtoRGB\",\n        value: function HSBtoRGB(hsb) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var _hsb = _slicedToArray(hsb, 3),\n                h = _hsb[0],\n                s = _hsb[1],\n                v = _hsb[2];\n\n            if (!normalizedInput) h = h / 360;\n            var i = Math.floor(h * 6);\n            var f = h * 6 - i;\n            var p = v * (1 - s);\n            var q = v * (1 - f * s);\n            var t = v * (1 - (1 - f) * s);\n            var pick = [[v, t, p], [q, v, p], [p, v, t], [p, q, v], [t, p, v], [v, p, q]];\n            var c = pick[i % 6];\n            var sc = normalizedOutput ? 1 : 255;\n            return Color.rgb(sc * c[0], sc * c[1], sc * c[2], hsb.alpha);\n        }\n    }, {\n        key: \"RGBtoLAB\",\n        value: function RGBtoLAB(rgb) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = normalizedInput ? rgb.$normalize(false) : rgb;\n            return Color.XYZtoLAB(Color.RGBtoXYZ(c), false, normalizedOutput);\n        }\n    }, {\n        key: \"LABtoRGB\",\n        value: function LABtoRGB(lab) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = normalizedInput ? lab.$normalize(false) : lab;\n            return Color.XYZtoRGB(Color.LABtoXYZ(c), false, normalizedOutput);\n        }\n    }, {\n        key: \"RGBtoLCH\",\n        value: function RGBtoLCH(rgb) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = normalizedInput ? rgb.$normalize(false) : rgb;\n            return Color.LABtoLCH(Color.RGBtoLAB(c), false, normalizedOutput);\n        }\n    }, {\n        key: \"LCHtoRGB\",\n        value: function LCHtoRGB(lch) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = normalizedInput ? lch.$normalize(false) : lch;\n            return Color.LABtoRGB(Color.LCHtoLAB(c), false, normalizedOutput);\n        }\n    }, {\n        key: \"RGBtoLUV\",\n        value: function RGBtoLUV(rgb) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = normalizedInput ? rgb.$normalize(false) : rgb;\n            return Color.XYZtoLUV(Color.RGBtoXYZ(c), false, normalizedOutput);\n        }\n    }, {\n        key: \"LUVtoRGB\",\n        value: function LUVtoRGB(luv) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = normalizedInput ? luv.$normalize(false) : luv;\n            return Color.XYZtoRGB(Color.LUVtoXYZ(c), false, normalizedOutput);\n        }\n    }, {\n        key: \"RGBtoXYZ\",\n        value: function RGBtoXYZ(rgb) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = !normalizedInput ? rgb.$normalize() : rgb.clone();\n            for (var i = 0; i < 3; i++) {\n                c[i] = c[i] > 0.04045 ? Math.pow((c[i] + 0.055) / 1.055, 2.4) : c[i] / 12.92;\n                if (!normalizedOutput) c[i] = c[i] * 100;\n            }\n            var cc = Color.xyz(c[0] * 0.4124564 + c[1] * 0.3575761 + c[2] * 0.1804375, c[0] * 0.2126729 + c[1] * 0.7151522 + c[2] * 0.0721750, c[0] * 0.0193339 + c[1] * 0.1191920 + c[2] * 0.9503041, rgb.alpha);\n            return normalizedOutput ? cc.normalize() : cc;\n        }\n    }, {\n        key: \"XYZtoRGB\",\n        value: function XYZtoRGB(xyz) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var _ref6 = !normalizedInput ? xyz.$normalize() : xyz,\n                _ref7 = _slicedToArray(_ref6, 3),\n                x = _ref7[0],\n                y = _ref7[1],\n                z = _ref7[2];\n\n            var rgb = [x * 3.2404542 + y * -1.5371385 + z * -0.4985314, x * -0.9692660 + y * 1.8760108 + z * 0.0415560, x * 0.0556434 + y * -0.2040259 + z * 1.0572252];\n            for (var i = 0; i < 3; i++) {\n                rgb[i] = rgb[i] < 0 ? 0 : rgb[i] > 0.0031308 ? 1.055 * Math.pow(rgb[i], 1 / 2.4) - 0.055 : 12.92 * rgb[i];\n                rgb[i] = Math.max(0, Math.min(1, rgb[i]));\n                if (!normalizedOutput) rgb[i] = Math.round(rgb[i] * 255);\n            }\n            var cc = Color.rgb(rgb[0], rgb[1], rgb[2], xyz.alpha);\n            return normalizedOutput ? cc.normalize() : cc;\n        }\n    }, {\n        key: \"XYZtoLAB\",\n        value: function XYZtoLAB(xyz) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = normalizedInput ? xyz.$normalize(false) : xyz.clone();\n            c.divide(Color.D65);\n            var fn = function fn(n) {\n                return n > 0.008856 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116;\n            };\n            var cy = fn(c[1]);\n            var cc = Color.lab(116 * cy - 16, 500 * (fn(c[0]) - cy), 200 * (cy - fn(c[2])), xyz.alpha);\n            return normalizedOutput ? cc.normalize() : cc;\n        }\n    }, {\n        key: \"LABtoXYZ\",\n        value: function LABtoXYZ(lab) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = normalizedInput ? lab.$normalize(false) : lab;\n            var y = (c[0] + 16) / 116;\n            var x = c[1] / 500 + y;\n            var z = y - c[2] / 200;\n            var fn = function fn(n) {\n                var nnn = n * n * n;\n                return nnn > 0.008856 ? nnn : (n - 16 / 116) / 7.787;\n            };\n            var d = Color.D65;\n            var cc = Color.xyz(Math.max(0, d[0] * fn(x)), Math.max(0, d[1] * fn(y)), Math.max(0, d[2] * fn(z)), lab.alpha);\n            return normalizedOutput ? cc.normalize() : cc;\n        }\n    }, {\n        key: \"XYZtoLUV\",\n        value: function XYZtoLUV(xyz) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var _ref8 = normalizedInput ? xyz.$normalize(false) : xyz,\n                _ref9 = _slicedToArray(_ref8, 3),\n                x = _ref9[0],\n                y = _ref9[1],\n                z = _ref9[2];\n\n            var u = 4 * x / (x + 15 * y + 3 * z);\n            var v = 9 * y / (x + 15 * y + 3 * z);\n            y = y / 100;\n            y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n            var refU = 4 * Color.D65[0] / (Color.D65[0] + 15 * Color.D65[1] + 3 * Color.D65[2]);\n            var refV = 9 * Color.D65[1] / (Color.D65[0] + 15 * Color.D65[1] + 3 * Color.D65[2]);\n            var L = 116 * y - 16;\n            return Color.luv(L, 13 * L * (u - refU), 13 * L * (v - refV), xyz.alpha);\n        }\n    }, {\n        key: \"LUVtoXYZ\",\n        value: function LUVtoXYZ(luv) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var _ref10 = normalizedInput ? luv.$normalize(false) : luv,\n                _ref11 = _slicedToArray(_ref10, 3),\n                l = _ref11[0],\n                u = _ref11[1],\n                v = _ref11[2];\n\n            var y = (l + 16) / 116;\n            var cubeY = y * y * y;\n            y = cubeY > 0.008856 ? cubeY : (y - 16 / 116) / 7.787;\n            var refU = 4 * Color.D65[0] / (Color.D65[0] + 15 * Color.D65[1] + 3 * Color.D65[2]);\n            var refV = 9 * Color.D65[1] / (Color.D65[0] + 15 * Color.D65[1] + 3 * Color.D65[2]);\n            u = u / (13 * l) + refU;\n            v = v / (13 * l) + refV;\n            y = y * 100;\n            var x = -1 * (9 * y * u) / ((u - 4) * v - u * v);\n            var z = (9 * y - 15 * v * y - v * x) / (3 * v);\n            return Color.xyz(x, y, z, luv.alpha);\n        }\n    }, {\n        key: \"LABtoLCH\",\n        value: function LABtoLCH(lab) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = normalizedInput ? lab.$normalize(false) : lab;\n            var h = Num_1.Geom.toDegree(Num_1.Geom.boundRadian(Math.atan2(c[2], c[1])));\n            return Color.lch(c[0], Math.sqrt(c[1] * c[1] + c[2] * c[2]), h, lab.alpha);\n        }\n    }, {\n        key: \"LCHtoLAB\",\n        value: function LCHtoLAB(lch) {\n            var normalizedInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var normalizedOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var c = normalizedInput ? lch.$normalize(false) : lch;\n            var rad = Num_1.Geom.toRadian(c[2]);\n            return Color.lab(c[0], Math.cos(rad) * c[1], Math.sin(rad) * c[1], lch.alpha);\n        }\n    }]);\n\n    return Color;\n}(Pt_1.Pt);\n\nColor.D65 = new Pt_1.Pt(95.047, 100, 108.883, 1);\nColor.ranges = {\n    rgb: new Pt_1.Group(new Pt_1.Pt(0, 255), new Pt_1.Pt(0, 255), new Pt_1.Pt(0, 255)),\n    hsl: new Pt_1.Group(new Pt_1.Pt(0, 360), new Pt_1.Pt(0, 1), new Pt_1.Pt(0, 1)),\n    hsb: new Pt_1.Group(new Pt_1.Pt(0, 360), new Pt_1.Pt(0, 1), new Pt_1.Pt(0, 1)),\n    lab: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(-128, 127), new Pt_1.Pt(-128, 127)),\n    lch: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 360)),\n    luv: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(-134, 220), new Pt_1.Pt(-140, 122)),\n    xyz: new Pt_1.Group(new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 100), new Pt_1.Pt(0, 100))\n};\nexports.Color = Color;\n\n/***/ }),\n\n/***/ \"./src/Create.ts\":\n/*!***********************!*\\\n  !*** ./src/Create.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nvar Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nvar Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nvar LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\n\nvar Create = function () {\n    function Create() {\n        _classCallCheck(this, Create);\n    }\n\n    _createClass(Create, null, [{\n        key: \"distributeRandom\",\n        value: function distributeRandom(bound, count) {\n            var dimensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n\n            var pts = new Pt_1.Group();\n            for (var i = 0; i < count; i++) {\n                var p = [bound.x + Math.random() * bound.width];\n                if (dimensions > 1) p.push(bound.y + Math.random() * bound.height);\n                if (dimensions > 2) p.push(bound.z + Math.random() * bound.depth);\n                pts.push(new Pt_1.Pt(p));\n            }\n            return pts;\n        }\n    }, {\n        key: \"distributeLinear\",\n        value: function distributeLinear(line, count) {\n            var ln = Op_1.Line.subpoints(line, count - 2);\n            ln.unshift(line[0]);\n            ln.push(line[line.length - 1]);\n            return ln;\n        }\n    }, {\n        key: \"gridPts\",\n        value: function gridPts(bound, columns, rows) {\n            var orientation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0.5, 0.5];\n\n            if (columns === 0 || rows === 0) throw new Error(\"grid columns and rows cannot be 0\");\n            var unit = bound.size.$subtract(1).$divide(columns, rows);\n            var offset = unit.$multiply(orientation);\n            var g = new Pt_1.Group();\n            for (var r = 0; r < rows; r++) {\n                for (var c = 0; c < columns; c++) {\n                    g.push(bound.topLeft.$add(unit.$multiply(c, r)).add(offset));\n                }\n            }\n            return g;\n        }\n    }, {\n        key: \"gridCells\",\n        value: function gridCells(bound, columns, rows) {\n            if (columns === 0 || rows === 0) throw new Error(\"grid columns and rows cannot be 0\");\n            var unit = bound.size.$subtract(1).divide(columns, rows);\n            var g = [];\n            for (var r = 0; r < rows; r++) {\n                for (var c = 0; c < columns; c++) {\n                    g.push(new Pt_1.Group(bound.topLeft.$add(unit.$multiply(c, r)), bound.topLeft.$add(unit.$multiply(c, r).add(unit))));\n                }\n            }\n            return g;\n        }\n    }, {\n        key: \"radialPts\",\n        value: function radialPts(center, radius, count) {\n            var g = new Pt_1.Group();\n            var a = Util_1.Const.two_pi / count;\n            for (var i = 0; i < count; i++) {\n                g.push(new Pt_1.Pt(center).toAngle(a * i - Util_1.Const.half_pi, radius, true));\n            }\n            return g;\n        }\n    }, {\n        key: \"noisePts\",\n        value: function noisePts(pts) {\n            var dx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.01;\n            var dy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.01;\n            var rows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            var columns = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n            var seed = Math.random();\n            var g = new Pt_1.Group();\n            for (var i = 0, len = pts.length; i < len; i++) {\n                var np = new Noise(pts[i]);\n                var r = rows && rows > 0 ? Math.floor(i / rows) : i;\n                var c = columns && columns > 0 ? i % columns : i;\n                np.initNoise(dx * c, dy * r);\n                np.seed(seed);\n                g.push(np);\n            }\n            return g;\n        }\n    }, {\n        key: \"delaunay\",\n        value: function delaunay(pts) {\n            return Delaunay.from(pts);\n        }\n    }]);\n\n    return Create;\n}();\n\nexports.Create = Create;\nvar grad3 = [[1, 1, 0], [-1, 1, 0], [1, -1, 0], [-1, -1, 0], [1, 0, 1], [-1, 0, 1], [1, 0, -1], [-1, 0, -1], [0, 1, 1], [0, -1, 1], [0, 1, -1], [0, -1, -1]];\nvar permTable = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 9, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\n\nvar Noise = function (_Pt_1$Pt) {\n    _inherits(Noise, _Pt_1$Pt);\n\n    function Noise() {\n        var _ref;\n\n        _classCallCheck(this, Noise);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Noise.__proto__ || Object.getPrototypeOf(Noise)).call.apply(_ref, [this].concat(args)));\n\n        _this.perm = [];\n        _this._n = new Pt_1.Pt(0.01, 0.01);\n        _this.perm = permTable.concat(permTable);\n        return _this;\n    }\n\n    _createClass(Noise, [{\n        key: \"initNoise\",\n        value: function initNoise() {\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n\n            this._n = new (Function.prototype.bind.apply(Pt_1.Pt, [null].concat(args)))();\n        }\n    }, {\n        key: \"step\",\n        value: function step() {\n            var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            this._n.add(x, y);\n        }\n    }, {\n        key: \"seed\",\n        value: function seed(s) {\n            if (s > 0 && s < 1) s *= 65536;\n            s = Math.floor(s);\n            if (s < 256) s |= s << 8;\n            for (var i = 0; i < 255; i++) {\n                var v = i & 1 ? permTable[i] ^ s & 255 : permTable[i] ^ s >> 8 & 255;\n                this.perm[i] = this.perm[i + 256] = v;\n            }\n        }\n    }, {\n        key: \"noise2D\",\n        value: function noise2D() {\n            var i = Math.max(0, Math.floor(this._n[0])) % 255;\n            var j = Math.max(0, Math.floor(this._n[1])) % 255;\n            var x = this._n[0] % 255 - i;\n            var y = this._n[1] % 255 - j;\n            var n00 = LinearAlgebra_1.Vec.dot(grad3[(i + this.perm[j]) % 12], [x, y, 0]);\n            var n01 = LinearAlgebra_1.Vec.dot(grad3[(i + this.perm[j + 1]) % 12], [x, y - 1, 0]);\n            var n10 = LinearAlgebra_1.Vec.dot(grad3[(i + 1 + this.perm[j]) % 12], [x - 1, y, 0]);\n            var n11 = LinearAlgebra_1.Vec.dot(grad3[(i + 1 + this.perm[j + 1]) % 12], [x - 1, y - 1, 0]);\n            var _fade = function _fade(f) {\n                return f * f * f * (f * (f * 6 - 15) + 10);\n            };\n            var tx = _fade(x);\n            return Num_1.Num.lerp(Num_1.Num.lerp(n00, n10, tx), Num_1.Num.lerp(n01, n11, tx), _fade(y));\n        }\n    }]);\n\n    return Noise;\n}(Pt_1.Pt);\n\nexports.Noise = Noise;\n\nvar Delaunay = function (_Pt_1$Group) {\n    _inherits(Delaunay, _Pt_1$Group);\n\n    function Delaunay() {\n        _classCallCheck(this, Delaunay);\n\n        var _this2 = _possibleConstructorReturn(this, (Delaunay.__proto__ || Object.getPrototypeOf(Delaunay)).apply(this, arguments));\n\n        _this2._mesh = [];\n        return _this2;\n    }\n\n    _createClass(Delaunay, [{\n        key: \"delaunay\",\n        value: function delaunay() {\n            var _this3 = this;\n\n            var triangleOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            if (this.length < 3) return [];\n            this._mesh = [];\n            var n = this.length;\n            var indices = [];\n            for (var i = 0; i < n; i++) {\n                indices[i] = i;\n            }indices.sort(function (i, j) {\n                return _this3[j][0] - _this3[i][0];\n            });\n            var pts = this.slice();\n            var st = this._superTriangle();\n            pts = pts.concat(st);\n            var opened = [this._circum(n, n + 1, n + 2, st)];\n            var closed = [];\n            var tris = [];\n            for (var _i = 0, len = indices.length; _i < len; _i++) {\n                var c = indices[_i];\n                var edges = [];\n                var j = opened.length;\n                if (!this._mesh[c]) this._mesh[c] = {};\n                while (j--) {\n                    var circum = opened[j];\n                    var radius = circum.circle[1][0];\n                    var d = pts[c].$subtract(circum.circle[0]);\n                    if (d[0] > 0 && d[0] * d[0] > radius * radius) {\n                        closed.push(circum);\n                        tris.push(circum.triangle);\n                        opened.splice(j, 1);\n                        continue;\n                    }\n                    if (d[0] * d[0] + d[1] * d[1] - radius * radius > Util_1.Const.epsilon) {\n                        continue;\n                    }\n                    edges.push(circum.i, circum.j, circum.j, circum.k, circum.k, circum.i);\n                    opened.splice(j, 1);\n                }\n                Delaunay._dedupe(edges);\n                j = edges.length;\n                while (j > 1) {\n                    opened.push(this._circum(edges[--j], edges[--j], c, false, pts));\n                }\n            }\n            for (var _i2 = 0, _len3 = opened.length; _i2 < _len3; _i2++) {\n                var o = opened[_i2];\n                if (o.i < n && o.j < n && o.k < n) {\n                    closed.push(o);\n                    tris.push(o.triangle);\n                    this._cache(o);\n                }\n            }\n            return triangleOnly ? tris : closed;\n        }\n    }, {\n        key: \"voronoi\",\n        value: function voronoi() {\n            var vs = [];\n            var n = this._mesh;\n            for (var i = 0, len = n.length; i < len; i++) {\n                vs.push(this.neighborPts(i, true));\n            }\n            return vs;\n        }\n    }, {\n        key: \"mesh\",\n        value: function mesh() {\n            return this._mesh;\n        }\n    }, {\n        key: \"neighborPts\",\n        value: function neighborPts(i) {\n            var sort = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var cs = new Pt_1.Group();\n            var n = this._mesh;\n            for (var k in n[i]) {\n                if (n[i].hasOwnProperty(k)) cs.push(n[i][k].circle[0]);\n            }\n            return sort ? Num_1.Geom.sortEdges(cs) : cs;\n        }\n    }, {\n        key: \"neighbors\",\n        value: function neighbors(i) {\n            var cs = [];\n            var n = this._mesh;\n            for (var k in n[i]) {\n                if (n[i].hasOwnProperty(k)) cs.push(n[i][k]);\n            }\n            return cs;\n        }\n    }, {\n        key: \"_cache\",\n        value: function _cache(o) {\n            this._mesh[o.i][Math.min(o.j, o.k) + \"-\" + Math.max(o.j, o.k)] = o;\n            this._mesh[o.j][Math.min(o.i, o.k) + \"-\" + Math.max(o.i, o.k)] = o;\n            this._mesh[o.k][Math.min(o.i, o.j) + \"-\" + Math.max(o.i, o.j)] = o;\n        }\n    }, {\n        key: \"_superTriangle\",\n        value: function _superTriangle() {\n            var minPt = this[0];\n            var maxPt = this[0];\n            for (var i = 1, len = this.length; i < len; i++) {\n                minPt = minPt.$min(this[i]);\n                maxPt = maxPt.$max(this[i]);\n            }\n            var d = maxPt.$subtract(minPt);\n            var mid = minPt.$add(maxPt).divide(2);\n            var dmax = Math.max(d[0], d[1]);\n            return new Pt_1.Group(mid.$subtract(20 * dmax, dmax), mid.$add(0, 20 * dmax), mid.$add(20 * dmax, -dmax));\n        }\n    }, {\n        key: \"_triangle\",\n        value: function _triangle(i, j, k) {\n            var pts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this;\n\n            return new Pt_1.Group(pts[i], pts[j], pts[k]);\n        }\n    }, {\n        key: \"_circum\",\n        value: function _circum(i, j, k, tri) {\n            var pts = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this;\n\n            var t = tri || this._triangle(i, j, k, pts);\n            return {\n                i: i,\n                j: j,\n                k: k,\n                triangle: t,\n                circle: Op_1.Triangle.circumcircle(t)\n            };\n        }\n    }], [{\n        key: \"_dedupe\",\n        value: function _dedupe(edges) {\n            var j = edges.length;\n            while (j > 1) {\n                var b = edges[--j];\n                var a = edges[--j];\n                var i = j;\n                while (i > 1) {\n                    var n = edges[--i];\n                    var m = edges[--i];\n                    if (a == m && b == n || a == n && b == m) {\n                        edges.splice(j, 2);\n                        edges.splice(i, 2);\n                        break;\n                    }\n                }\n            }\n            return edges;\n        }\n    }]);\n\n    return Delaunay;\n}(Pt_1.Group);\n\nexports.Delaunay = Delaunay;\n\n/***/ }),\n\n/***/ \"./src/Dom.ts\":\n/*!********************!*\\\n  !*** ./src/Dom.ts ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Space_1 = __webpack_require__(/*! ./Space */ \"./src/Space.ts\");\nvar Form_1 = __webpack_require__(/*! ./Form */ \"./src/Form.ts\");\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\n\nvar DOMSpace = function (_Space_1$MultiTouchSp) {\n    _inherits(DOMSpace, _Space_1$MultiTouchSp);\n\n    function DOMSpace(elem, callback) {\n        _classCallCheck(this, DOMSpace);\n\n        var _this = _possibleConstructorReturn(this, (DOMSpace.__proto__ || Object.getPrototypeOf(DOMSpace)).call(this));\n\n        _this.id = \"domspace\";\n        _this._autoResize = true;\n        _this._bgcolor = \"#e1e9f0\";\n        _this._css = {};\n        var _selector = null;\n        var _existed = false;\n        _this.id = \"pts\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            _this.id = \"pts_existing_space\";\n        } else {\n            _selector = document.querySelector(elem);\n            _existed = true;\n            _this.id = elem.substr(1);\n        }\n        if (!_selector) {\n            _this._container = DOMSpace.createElement(\"div\", \"pts_container\");\n            _this._canvas = DOMSpace.createElement(\"div\", \"pts_element\");\n            _this._container.appendChild(_this._canvas);\n            document.body.appendChild(_this._container);\n            _existed = false;\n        } else {\n            _this._canvas = _selector;\n            _this._container = _selector.parentElement;\n        }\n        setTimeout(_this._ready.bind(_this, callback), 50);\n        return _this;\n    }\n\n    _createClass(DOMSpace, [{\n        key: \"_ready\",\n        value: function _ready(callback) {\n            if (!this._container) throw new Error(\"Cannot initiate #\" + this.id + \" element\");\n            this._isReady = true;\n            this._resizeHandler(null);\n            this.clear(this._bgcolor);\n            this._canvas.dispatchEvent(new Event(\"ready\"));\n            for (var k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    if (this.players[k].start) this.players[k].start(this.bound.clone(), this);\n                }\n            }\n            this._pointer = this.center;\n            this.refresh(false);\n            if (callback) callback(this.bound, this._canvas);\n        }\n    }, {\n        key: \"setup\",\n        value: function setup(opt) {\n            if (opt.bgcolor) {\n                this._bgcolor = opt.bgcolor;\n            }\n            this.autoResize = opt.resize != undefined ? opt.resize : false;\n            return this;\n        }\n    }, {\n        key: \"getForm\",\n        value: function getForm() {\n            return null;\n        }\n    }, {\n        key: \"resize\",\n        value: function resize(b, evt) {\n            this.bound = b;\n            this.styles({ width: b.width + \"px\", height: b.height + \"px\" }, true);\n            for (var k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    var p = this.players[k];\n                    if (p.resize) p.resize(this.bound, evt);\n                }\n            }\n            return this;\n        }\n    }, {\n        key: \"_resizeHandler\",\n        value: function _resizeHandler(evt) {\n            var b = Pt_1.Bound.fromBoundingRect(this._container.getBoundingClientRect());\n            if (this._autoResize) {\n                this.styles({ width: \"100%\", height: \"100%\" }, true);\n            } else {\n                this.styles({ width: b.width + \"px\", height: b.height + \"px\" }, true);\n            }\n            this.resize(b, evt);\n        }\n    }, {\n        key: \"clear\",\n        value: function clear(bg) {\n            if (bg) this.background = bg;\n            this._canvas.innerHTML = \"\";\n            return this;\n        }\n    }, {\n        key: \"style\",\n        value: function style(key, val) {\n            var update = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            this._css[key] = val;\n            if (update) this._canvas.style[key] = val;\n            return this;\n        }\n    }, {\n        key: \"styles\",\n        value: function styles(_styles) {\n            var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            for (var k in _styles) {\n                if (_styles.hasOwnProperty(k)) this.style(k, _styles[k], update);\n            }\n            return this;\n        }\n    }, {\n        key: \"autoResize\",\n        set: function set(auto) {\n            this._autoResize = auto;\n            if (auto) {\n                window.addEventListener('resize', this._resizeHandler.bind(this));\n            } else {\n                delete this._css['width'];\n                delete this._css['height'];\n                window.removeEventListener('resize', this._resizeHandler.bind(this));\n            }\n        },\n        get: function get() {\n            return this._autoResize;\n        }\n    }, {\n        key: \"element\",\n        get: function get() {\n            return this._canvas;\n        }\n    }, {\n        key: \"parent\",\n        get: function get() {\n            return this._container;\n        }\n    }, {\n        key: \"ready\",\n        get: function get() {\n            return this._isReady;\n        }\n    }, {\n        key: \"background\",\n        set: function set(bg) {\n            this._bgcolor = bg;\n            this._container.style.backgroundColor = this._bgcolor;\n        },\n        get: function get() {\n            return this._bgcolor;\n        }\n    }], [{\n        key: \"createElement\",\n        value: function createElement() {\n            var elem = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"div\";\n            var id = arguments[1];\n            var appendTo = arguments[2];\n\n            var d = document.createElement(elem);\n            if (id) d.setAttribute(\"id\", id);\n            if (appendTo && appendTo.appendChild) appendTo.appendChild(d);\n            return d;\n        }\n    }, {\n        key: \"setAttr\",\n        value: function setAttr(elem, data) {\n            for (var k in data) {\n                if (data.hasOwnProperty(k)) {\n                    elem.setAttribute(k, data[k]);\n                }\n            }\n            return elem;\n        }\n    }, {\n        key: \"getInlineStyles\",\n        value: function getInlineStyles(data) {\n            var str = \"\";\n            for (var k in data) {\n                if (data.hasOwnProperty(k)) {\n                    if (data[k]) str += k + \": \" + data[k] + \"; \";\n                }\n            }\n            return str;\n        }\n    }]);\n\n    return DOMSpace;\n}(Space_1.MultiTouchSpace);\n\nexports.DOMSpace = DOMSpace;\n\nvar HTMLSpace = function (_DOMSpace) {\n    _inherits(HTMLSpace, _DOMSpace);\n\n    function HTMLSpace() {\n        _classCallCheck(this, HTMLSpace);\n\n        return _possibleConstructorReturn(this, (HTMLSpace.__proto__ || Object.getPrototypeOf(HTMLSpace)).apply(this, arguments));\n    }\n\n    _createClass(HTMLSpace, [{\n        key: \"getForm\",\n        value: function getForm() {\n            return new HTMLForm(this);\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(player) {\n            var temp = this._container.querySelectorAll(\".\" + HTMLForm.scopeID(player));\n            temp.forEach(function (el) {\n                el.parentNode.removeChild(el);\n            });\n            return _get(HTMLSpace.prototype.__proto__ || Object.getPrototypeOf(HTMLSpace.prototype), \"remove\", this).call(this, player);\n        }\n    }, {\n        key: \"removeAll\",\n        value: function removeAll() {\n            this._container.innerHTML = \"\";\n            return _get(HTMLSpace.prototype.__proto__ || Object.getPrototypeOf(HTMLSpace.prototype), \"removeAll\", this).call(this);\n        }\n    }], [{\n        key: \"htmlElement\",\n        value: function htmlElement(parent, name, id) {\n            var autoClass = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            if (!parent || !parent.appendChild) throw new Error(\"parent is not a valid DOM element\");\n            var elem = document.querySelector(\"#\" + id);\n            if (!elem) {\n                elem = document.createElement(name);\n                elem.setAttribute(\"id\", id);\n                if (autoClass) elem.setAttribute(\"class\", id.substring(0, id.indexOf(\"-\")));\n                parent.appendChild(elem);\n            }\n            return elem;\n        }\n    }]);\n\n    return HTMLSpace;\n}(DOMSpace);\n\nexports.HTMLSpace = HTMLSpace;\n\nvar HTMLForm = function (_Form_1$VisualForm) {\n    _inherits(HTMLForm, _Form_1$VisualForm);\n\n    function HTMLForm(space) {\n        _classCallCheck(this, HTMLForm);\n\n        var _this3 = _possibleConstructorReturn(this, (HTMLForm.__proto__ || Object.getPrototypeOf(HTMLForm)).call(this));\n\n        _this3._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {\n                \"filled\": true,\n                \"stroked\": true,\n                \"background\": \"#f03\",\n                \"border-color\": \"#fff\",\n                \"color\": \"#000\",\n                \"border-width\": \"1px\",\n                \"border-radius\": \"0\",\n                \"border-style\": \"solid\",\n                \"position\": \"absolute\",\n                \"top\": 0,\n                \"left\": 0,\n                \"width\": 0,\n                \"height\": 0\n            },\n            font: \"11px sans-serif\",\n            fontSize: 11,\n            fontFamily: \"sans-serif\"\n        };\n        _this3._ready = false;\n        _this3._space = space;\n        _this3._space.add({ start: function start() {\n                _this3._ctx.group = _this3._space.element;\n                _this3._ctx.groupID = \"pts_dom_\" + HTMLForm.groupID++;\n                _this3._ready = true;\n            } });\n        return _this3;\n    }\n\n    _createClass(HTMLForm, [{\n        key: \"styleTo\",\n        value: function styleTo(k, v) {\n            var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n            if (this._ctx.style[k] === undefined) throw new Error(k + \" style property doesn't exist\");\n            this._ctx.style[k] = \"\" + v + unit;\n        }\n    }, {\n        key: \"fill\",\n        value: function fill(c) {\n            if (typeof c == \"boolean\") {\n                this.styleTo(\"filled\", c);\n                if (!c) this.styleTo(\"background\", \"transparent\");\n            } else {\n                this.styleTo(\"filled\", true);\n                this.styleTo(\"background\", c);\n            }\n            return this;\n        }\n    }, {\n        key: \"stroke\",\n        value: function stroke(c, width, linejoin, linecap) {\n            if (typeof c == \"boolean\") {\n                this.styleTo(\"stroked\", c);\n                if (!c) this.styleTo(\"border-width\", 0);\n            } else {\n                this.styleTo(\"stroked\", true);\n                this.styleTo(\"border-color\", c);\n                this.styleTo(\"border-width\", (width || 1) + \"px\");\n            }\n            return this;\n        }\n    }, {\n        key: \"fillText\",\n        value: function fillText(c) {\n            this.styleTo(\"color\", c);\n            return this;\n        }\n    }, {\n        key: \"cls\",\n        value: function cls(c) {\n            if (typeof c == \"boolean\") {\n                this._ctx.currentClass = \"\";\n            } else {\n                this._ctx.currentClass = c;\n            }\n            return this;\n        }\n    }, {\n        key: \"font\",\n        value: function font(sizeOrFont, weight, style, lineHeight, family) {\n            if (typeof sizeOrFont == \"number\") {\n                this._font.size = sizeOrFont;\n                if (family) this._font.face = family;\n                if (weight) this._font.weight = weight;\n                if (style) this._font.style = style;\n                if (lineHeight) this._font.lineHeight = lineHeight;\n                this._ctx.font = this._font.value;\n            } else {\n                this._font = sizeOrFont;\n            }\n            return this;\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this._ctx.style = {\n                \"filled\": true, \"stroked\": true,\n                \"background\": \"#f03\", \"border-color\": \"#fff\",\n                \"border-width\": \"1px\"\n            };\n            this._font = new Form_1.Font(14, \"sans-serif\");\n            this._ctx.font = this._font.value;\n            return this;\n        }\n    }, {\n        key: \"updateScope\",\n        value: function updateScope(group_id, group) {\n            this._ctx.group = group;\n            this._ctx.groupID = group_id;\n            this._ctx.groupCount = 0;\n            this.nextID();\n            return this._ctx;\n        }\n    }, {\n        key: \"scope\",\n        value: function scope(item) {\n            if (!item || item.animateID == null) throw new Error(\"item not defined or not yet added to Space\");\n            return this.updateScope(HTMLForm.scopeID(item), this.space.element);\n        }\n    }, {\n        key: \"nextID\",\n        value: function nextID() {\n            this._ctx.groupCount++;\n            this._ctx.currentID = this._ctx.groupID + \"-\" + this._ctx.groupCount;\n            return this._ctx.currentID;\n        }\n    }, {\n        key: \"point\",\n        value: function point(pt) {\n            var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n            var shape = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"square\";\n\n            this.nextID();\n            if (shape == \"circle\") this.styleTo(\"border-radius\", \"100%\");\n            HTMLForm.point(this._ctx, pt, radius, shape);\n            return this;\n        }\n    }, {\n        key: \"circle\",\n        value: function circle(pts) {\n            this.nextID();\n            this.styleTo(\"border-radius\", \"100%\");\n            HTMLForm.circle(this._ctx, pts[0], pts[1][0]);\n            return this;\n        }\n    }, {\n        key: \"square\",\n        value: function square(pt, halfsize) {\n            this.nextID();\n            HTMLForm.square(this._ctx, pt, halfsize);\n            return this;\n        }\n    }, {\n        key: \"rect\",\n        value: function rect(pts) {\n            this.nextID();\n            this.styleTo(\"border-radius\", \"0\");\n            HTMLForm.rect(this._ctx, pts);\n            return this;\n        }\n    }, {\n        key: \"text\",\n        value: function text(pt, txt) {\n            this.nextID();\n            HTMLForm.text(this._ctx, pt, txt);\n            return this;\n        }\n    }, {\n        key: \"log\",\n        value: function log(txt) {\n            this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n            return this;\n        }\n    }, {\n        key: \"arc\",\n        value: function arc(pt, radius, startAngle, endAngle, cc) {\n            Util_1.Util.warn(\"arc is not implemented in HTMLForm\");\n            return this;\n        }\n    }, {\n        key: \"line\",\n        value: function line(pts) {\n            Util_1.Util.warn(\"line is not implemented in HTMLForm\");\n            return this;\n        }\n    }, {\n        key: \"polygon\",\n        value: function polygon(pts) {\n            Util_1.Util.warn(\"polygon is not implemented in HTMLForm\");\n            return this;\n        }\n    }, {\n        key: \"space\",\n        get: function get() {\n            return this._space;\n        }\n    }], [{\n        key: \"getID\",\n        value: function getID(ctx) {\n            return ctx.currentID || \"p-\" + HTMLForm.domID++;\n        }\n    }, {\n        key: \"scopeID\",\n        value: function scopeID(item) {\n            return \"item-\" + item.animateID;\n        }\n    }, {\n        key: \"style\",\n        value: function style(elem, styles) {\n            var st = [];\n            if (!styles[\"filled\"]) st.push(\"background: none\");\n            if (!styles[\"stroked\"]) st.push(\"border: none\");\n            for (var k in styles) {\n                if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                    var v = styles[k];\n                    if (v) {\n                        if (!styles[\"filled\"] && k.indexOf('background') === 0) {\n                            continue;\n                        } else if (!styles[\"stroked\"] && k.indexOf('border-width') === 0) {\n                            continue;\n                        } else {\n                            st.push(k + \": \" + v);\n                        }\n                    }\n                }\n            }\n            return HTMLSpace.setAttr(elem, { style: st.join(\";\") });\n        }\n    }, {\n        key: \"rectStyle\",\n        value: function rectStyle(ctx, pt, size) {\n            ctx.style[\"left\"] = pt[0] + \"px\";\n            ctx.style[\"top\"] = pt[1] + \"px\";\n            ctx.style[\"width\"] = size[0] + \"px\";\n            ctx.style[\"height\"] = size[1] + \"px\";\n            return ctx;\n        }\n    }, {\n        key: \"point\",\n        value: function point(ctx, pt) {\n            var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n            var shape = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"square\";\n\n            if (shape === \"circle\") {\n                return HTMLForm.circle(ctx, pt, radius);\n            } else {\n                return HTMLForm.square(ctx, pt, radius);\n            }\n        }\n    }, {\n        key: \"circle\",\n        value: function circle(ctx, pt) {\n            var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n\n            var elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n            HTMLSpace.setAttr(elem, { class: \"pts-form pts-circle \" + ctx.currentClass });\n            HTMLForm.rectStyle(ctx, new Pt_1.Pt(pt).$subtract(radius), new Pt_1.Pt(radius * 2, radius * 2));\n            HTMLForm.style(elem, ctx.style);\n            return elem;\n        }\n    }, {\n        key: \"square\",\n        value: function square(ctx, pt, halfsize) {\n            var elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n            HTMLSpace.setAttr(elem, { class: \"pts-form pts-square \" + ctx.currentClass });\n            HTMLForm.rectStyle(ctx, new Pt_1.Pt(pt).$subtract(halfsize), new Pt_1.Pt(halfsize * 2, halfsize * 2));\n            HTMLForm.style(elem, ctx.style);\n            return elem;\n        }\n    }, {\n        key: \"rect\",\n        value: function rect(ctx, pts) {\n            if (!this._checkSize(pts)) return;\n            var elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n            HTMLSpace.setAttr(elem, { class: \"pts-form pts-rect \" + ctx.currentClass });\n            HTMLForm.rectStyle(ctx, pts[0], pts[1]);\n            HTMLForm.style(elem, ctx.style);\n            return elem;\n        }\n    }, {\n        key: \"text\",\n        value: function text(ctx, pt, txt) {\n            var elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n            HTMLSpace.setAttr(elem, {\n                position: 'absolute',\n                class: \"pts-form pts-text \" + ctx.currentClass,\n                left: pt[0],\n                top: pt[1]\n            });\n            elem.textContent = txt;\n            HTMLForm.style(elem, ctx.style);\n            return elem;\n        }\n    }]);\n\n    return HTMLForm;\n}(Form_1.VisualForm);\n\nHTMLForm.groupID = 0;\nHTMLForm.domID = 0;\nexports.HTMLForm = HTMLForm;\n\n/***/ }),\n\n/***/ \"./src/Form.ts\":\n/*!*********************!*\\\n  !*** ./src/Form.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\n\nvar Form = function () {\n    function Form() {\n        _classCallCheck(this, Form);\n\n        this._ready = false;\n    }\n\n    _createClass(Form, [{\n        key: \"ready\",\n        get: function get() {\n            return this._ready;\n        }\n    }], [{\n        key: \"_checkSize\",\n        value: function _checkSize(pts) {\n            var required = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n            if (pts.length < required) {\n                Util_1.Util.warn(\"Requires 2 or more Pts in this Group.\");\n                return false;\n            }\n            return true;\n        }\n    }]);\n\n    return Form;\n}();\n\nexports.Form = Form;\n\nvar VisualForm = function (_Form) {\n    _inherits(VisualForm, _Form);\n\n    function VisualForm() {\n        _classCallCheck(this, VisualForm);\n\n        var _this = _possibleConstructorReturn(this, (VisualForm.__proto__ || Object.getPrototypeOf(VisualForm)).apply(this, arguments));\n\n        _this._filled = true;\n        _this._stroked = true;\n        _this._font = new Font(14, \"sans-serif\");\n        return _this;\n    }\n\n    _createClass(VisualForm, [{\n        key: \"_multiple\",\n        value: function _multiple(groups, shape) {\n            if (!groups) return this;\n\n            for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n                rest[_key - 2] = arguments[_key];\n            }\n\n            for (var i = 0, len = groups.length; i < len; i++) {\n                this[shape].apply(this, [groups[i]].concat(rest));\n            }\n            return this;\n        }\n    }, {\n        key: \"fill\",\n        value: function fill(c) {\n            return this;\n        }\n    }, {\n        key: \"fillOnly\",\n        value: function fillOnly(c) {\n            this.stroke(false);\n            return this.fill(c);\n        }\n    }, {\n        key: \"stroke\",\n        value: function stroke(c, width, linejoin, linecap) {\n            return this;\n        }\n    }, {\n        key: \"strokeOnly\",\n        value: function strokeOnly(c, width, linejoin, linecap) {\n            this.fill(false);\n            return this.stroke(c, width, linejoin, linecap);\n        }\n    }, {\n        key: \"points\",\n        value: function points(pts, radius, shape) {\n            if (!pts) return;\n            for (var i = 0, len = pts.length; i < len; i++) {\n                this.point(pts[i], radius, shape);\n            }\n            return this;\n        }\n    }, {\n        key: \"circles\",\n        value: function circles(groups) {\n            return this._multiple(groups, \"circle\");\n        }\n    }, {\n        key: \"squares\",\n        value: function squares(groups) {\n            return this._multiple(groups, \"square\");\n        }\n    }, {\n        key: \"lines\",\n        value: function lines(groups) {\n            return this._multiple(groups, \"line\");\n        }\n    }, {\n        key: \"polygons\",\n        value: function polygons(groups) {\n            return this._multiple(groups, \"polygon\");\n        }\n    }, {\n        key: \"rects\",\n        value: function rects(groups) {\n            return this._multiple(groups, \"rect\");\n        }\n    }, {\n        key: \"filled\",\n        get: function get() {\n            return this._filled;\n        },\n        set: function set(b) {\n            this._filled = b;\n        }\n    }, {\n        key: \"stroked\",\n        get: function get() {\n            return this._stroked;\n        },\n        set: function set(b) {\n            this._stroked = b;\n        }\n    }, {\n        key: \"currentFont\",\n        get: function get() {\n            return this._font;\n        }\n    }]);\n\n    return VisualForm;\n}(Form);\n\nexports.VisualForm = VisualForm;\n\nvar Font = function () {\n    function Font() {\n        var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;\n        var face = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"sans-serif\";\n        var weight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n        var style = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n        var lineHeight = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1.5;\n\n        _classCallCheck(this, Font);\n\n        this.size = size;\n        this.face = face;\n        this.style = style;\n        this.weight = weight;\n        this.lineHeight = lineHeight;\n    }\n\n    _createClass(Font, [{\n        key: \"toString\",\n        value: function toString() {\n            return this.value;\n        }\n    }, {\n        key: \"value\",\n        get: function get() {\n            return this.style + \" \" + this.weight + \" \" + this.size + \"px/\" + this.lineHeight + \" \" + this.face;\n        }\n    }]);\n\n    return Font;\n}();\n\nexports.Font = Font;\n\n/***/ }),\n\n/***/ \"./src/LinearAlgebra.ts\":\n/*!******************************!*\\\n  !*** ./src/LinearAlgebra.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nvar Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\n\nvar Vec = function () {\n    function Vec() {\n        _classCallCheck(this, Vec);\n    }\n\n    _createClass(Vec, null, [{\n        key: \"add\",\n        value: function add(a, b) {\n            if (typeof b == \"number\") {\n                for (var i = 0, len = a.length; i < len; i++) {\n                    a[i] += b;\n                }\n            } else {\n                for (var _i = 0, _len = a.length; _i < _len; _i++) {\n                    a[_i] += b[_i] || 0;\n                }\n            }\n            return a;\n        }\n    }, {\n        key: \"subtract\",\n        value: function subtract(a, b) {\n            if (typeof b == \"number\") {\n                for (var i = 0, len = a.length; i < len; i++) {\n                    a[i] -= b;\n                }\n            } else {\n                for (var _i2 = 0, _len2 = a.length; _i2 < _len2; _i2++) {\n                    a[_i2] -= b[_i2] || 0;\n                }\n            }\n            return a;\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply(a, b) {\n            if (typeof b == \"number\") {\n                for (var i = 0, len = a.length; i < len; i++) {\n                    a[i] *= b;\n                }\n            } else {\n                if (a.length != b.length) {\n                    throw new Error(\"Cannot do element-wise multiply since the array lengths don't match: \" + a.toString() + \" multiply-with \" + b.toString());\n                }\n                for (var _i3 = 0, _len3 = a.length; _i3 < _len3; _i3++) {\n                    a[_i3] *= b[_i3];\n                }\n            }\n            return a;\n        }\n    }, {\n        key: \"divide\",\n        value: function divide(a, b) {\n            if (typeof b == \"number\") {\n                if (b === 0) throw new Error(\"Cannot divide by zero\");\n                for (var i = 0, len = a.length; i < len; i++) {\n                    a[i] /= b;\n                }\n            } else {\n                if (a.length != b.length) {\n                    throw new Error(\"Cannot do element-wise divide since the array lengths don't match. \" + a.toString() + \" divide-by \" + b.toString());\n                }\n                for (var _i4 = 0, _len4 = a.length; _i4 < _len4; _i4++) {\n                    a[_i4] /= b[_i4];\n                }\n            }\n            return a;\n        }\n    }, {\n        key: \"dot\",\n        value: function dot(a, b) {\n            if (a.length != b.length) throw new Error(\"Array lengths don't match\");\n            var d = 0;\n            for (var i = 0, len = a.length; i < len; i++) {\n                d += a[i] * b[i];\n            }\n            return d;\n        }\n    }, {\n        key: \"cross2D\",\n        value: function cross2D(a, b) {\n            return a[0] * b[1] - a[1] * b[0];\n        }\n    }, {\n        key: \"cross\",\n        value: function cross(a, b) {\n            return new Pt_1.Pt(a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]);\n        }\n    }, {\n        key: \"magnitude\",\n        value: function magnitude(a) {\n            return Math.sqrt(Vec.dot(a, a));\n        }\n    }, {\n        key: \"unit\",\n        value: function unit(a) {\n            var magnitude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n            var m = magnitude === undefined ? Vec.magnitude(a) : magnitude;\n            if (m === 0) throw new Error(\"Cannot calculate unit vector because magnitude is 0\");\n            return Vec.divide(a, m);\n        }\n    }, {\n        key: \"abs\",\n        value: function abs(a) {\n            return Vec.map(a, Math.abs);\n        }\n    }, {\n        key: \"floor\",\n        value: function floor(a) {\n            return Vec.map(a, Math.floor);\n        }\n    }, {\n        key: \"ceil\",\n        value: function ceil(a) {\n            return Vec.map(a, Math.ceil);\n        }\n    }, {\n        key: \"round\",\n        value: function round(a) {\n            return Vec.map(a, Math.round);\n        }\n    }, {\n        key: \"max\",\n        value: function max(a) {\n            var m = Number.MIN_VALUE;\n            var index = 0;\n            for (var i = 0, len = a.length; i < len; i++) {\n                m = Math.max(m, a[i]);\n                if (m === a[i]) index = i;\n            }\n            return { value: m, index: index };\n        }\n    }, {\n        key: \"min\",\n        value: function min(a) {\n            var m = Number.MAX_VALUE;\n            var index = 0;\n            for (var i = 0, len = a.length; i < len; i++) {\n                m = Math.min(m, a[i]);\n                if (m === a[i]) index = i;\n            }\n            return { value: m, index: index };\n        }\n    }, {\n        key: \"sum\",\n        value: function sum(a) {\n            var s = 0;\n            for (var i = 0, len = a.length; i < len; i++) {\n                s += a[i];\n            }return s;\n        }\n    }, {\n        key: \"map\",\n        value: function map(a, fn) {\n            for (var i = 0, len = a.length; i < len; i++) {\n                a[i] = fn(a[i], i, a);\n            }\n            return a;\n        }\n    }]);\n\n    return Vec;\n}();\n\nexports.Vec = Vec;\n\nvar Mat = function () {\n    function Mat() {\n        _classCallCheck(this, Mat);\n    }\n\n    _createClass(Mat, null, [{\n        key: \"add\",\n        value: function add(a, b) {\n            if (typeof b != \"number\") {\n                if (a[0].length != b[0].length) throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n                if (a.length != b.length) throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n            }\n            var g = new Pt_1.Group();\n            var isNum = typeof b == \"number\";\n            for (var i = 0, len = a.length; i < len; i++) {\n                g.push(a[i].$add(isNum ? b : b[i]));\n            }\n            return g;\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply(a, b) {\n            var transposed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var elementwise = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            var g = new Pt_1.Group();\n            if (typeof b != \"number\") {\n                if (elementwise) {\n                    if (a.length != b.length) throw new Error(\"Cannot multiply matrix element-wise because the matrices' sizes don't match.\");\n                    for (var ai = 0, alen = a.length; ai < alen; ai++) {\n                        g.push(a[ai].$multiply(b[ai]));\n                    }\n                } else {\n                    if (!transposed && a[0].length != b.length) throw new Error(\"Cannot multiply matrix if rows in matrix-a don't match columns in matrix-b.\");\n                    if (transposed && a[0].length != b[0].length) throw new Error(\"Cannot multiply matrix if transposed and the columns in both matrices don't match.\");\n                    if (!transposed) b = Mat.transpose(b);\n                    for (var _ai = 0, _alen = a.length; _ai < _alen; _ai++) {\n                        var p = Pt_1.Pt.make(b.length, 0);\n                        for (var bi = 0, blen = b.length; bi < blen; bi++) {\n                            p[bi] = Vec.dot(a[_ai], b[bi]);\n                        }\n                        g.push(p);\n                    }\n                }\n            } else {\n                for (var _ai2 = 0, _alen2 = a.length; _ai2 < _alen2; _ai2++) {\n                    g.push(a[_ai2].$multiply(b));\n                }\n            }\n            return g;\n        }\n    }, {\n        key: \"zipSlice\",\n        value: function zipSlice(g, index) {\n            var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var z = [];\n            for (var i = 0, len = g.length; i < len; i++) {\n                if (g[i].length - 1 < index && defaultValue === false) throw \"Index \" + index + \" is out of bounds\";\n                z.push(g[i][index] || defaultValue);\n            }\n            return new Pt_1.Pt(z);\n        }\n    }, {\n        key: \"zip\",\n        value: function zip(g) {\n            var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var useLongest = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var ps = new Pt_1.Group();\n            var len = useLongest ? g.reduce(function (a, b) {\n                return Math.max(a, b.length);\n            }, 0) : g[0].length;\n            for (var i = 0; i < len; i++) {\n                ps.push(Mat.zipSlice(g, i, defaultValue));\n            }\n            return ps;\n        }\n    }, {\n        key: \"transpose\",\n        value: function transpose(g) {\n            var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var useLongest = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            return Mat.zip(g, defaultValue, useLongest);\n        }\n    }, {\n        key: \"transform2D\",\n        value: function transform2D(pt, m) {\n            var x = pt[0] * m[0][0] + pt[1] * m[1][0] + m[2][0];\n            var y = pt[0] * m[0][1] + pt[1] * m[1][1] + m[2][1];\n            return new Pt_1.Pt(x, y);\n        }\n    }, {\n        key: \"scale2DMatrix\",\n        value: function scale2DMatrix(x, y) {\n            return new Pt_1.Group(new Pt_1.Pt(x, 0, 0), new Pt_1.Pt(0, y, 0), new Pt_1.Pt(0, 0, 1));\n        }\n    }, {\n        key: \"rotate2DMatrix\",\n        value: function rotate2DMatrix(cosA, sinA) {\n            return new Pt_1.Group(new Pt_1.Pt(cosA, sinA, 0), new Pt_1.Pt(-sinA, cosA, 0), new Pt_1.Pt(0, 0, 1));\n        }\n    }, {\n        key: \"shear2DMatrix\",\n        value: function shear2DMatrix(tanX, tanY) {\n            return new Pt_1.Group(new Pt_1.Pt(1, tanX, 0), new Pt_1.Pt(tanY, 1, 0), new Pt_1.Pt(0, 0, 1));\n        }\n    }, {\n        key: \"translate2DMatrix\",\n        value: function translate2DMatrix(x, y) {\n            return new Pt_1.Group(new Pt_1.Pt(1, 0, 0), new Pt_1.Pt(0, 1, 0), new Pt_1.Pt(x, y, 1));\n        }\n    }, {\n        key: \"scaleAt2DMatrix\",\n        value: function scaleAt2DMatrix(sx, sy, at) {\n            var m = Mat.scale2DMatrix(sx, sy);\n            m[2][0] = -at[0] * sx + at[0];\n            m[2][1] = -at[1] * sy + at[1];\n            return m;\n        }\n    }, {\n        key: \"rotateAt2DMatrix\",\n        value: function rotateAt2DMatrix(cosA, sinA, at) {\n            var m = Mat.rotate2DMatrix(cosA, sinA);\n            m[2][0] = at[0] * (1 - cosA) + at[1] * sinA;\n            m[2][1] = at[1] * (1 - cosA) - at[0] * sinA;\n            return m;\n        }\n    }, {\n        key: \"shearAt2DMatrix\",\n        value: function shearAt2DMatrix(tanX, tanY, at) {\n            var m = Mat.shear2DMatrix(tanX, tanY);\n            m[2][0] = -at[1] * tanY;\n            m[2][1] = -at[0] * tanX;\n            return m;\n        }\n    }, {\n        key: \"reflectAt2DMatrix\",\n        value: function reflectAt2DMatrix(p1, p2) {\n            var intercept = Op_1.Line.intercept(p1, p2);\n            if (intercept == undefined) {\n                return [new Pt_1.Pt([-1, 0, 0]), new Pt_1.Pt([0, 1, 0]), new Pt_1.Pt([p1[0] + p2[0], 0, 1])];\n            } else {\n                var yi = intercept.yi;\n                var ang2 = Math.atan(intercept.slope) * 2;\n                var cosA = Math.cos(ang2);\n                var sinA = Math.sin(ang2);\n                return [new Pt_1.Pt([cosA, sinA, 0]), new Pt_1.Pt([sinA, -cosA, 0]), new Pt_1.Pt([-yi * sinA, yi + yi * cosA, 1])];\n            }\n        }\n    }]);\n\n    return Mat;\n}();\n\nexports.Mat = Mat;\n\n/***/ }),\n\n/***/ \"./src/Num.ts\":\n/*!********************!*\\\n  !*** ./src/Num.ts ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nvar Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nvar LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\n\nvar Num = function () {\n    function Num() {\n        _classCallCheck(this, Num);\n    }\n\n    _createClass(Num, null, [{\n        key: \"equals\",\n        value: function equals(a, b) {\n            var threshold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.00001;\n\n            return Math.abs(a - b) < threshold;\n        }\n    }, {\n        key: \"lerp\",\n        value: function lerp(a, b, t) {\n            return (1 - t) * a + t * b;\n        }\n    }, {\n        key: \"clamp\",\n        value: function clamp(val, min, max) {\n            return Math.max(min, Math.min(max, val));\n        }\n    }, {\n        key: \"boundValue\",\n        value: function boundValue(val, min, max) {\n            var len = Math.abs(max - min);\n            var a = val % len;\n            if (a > max) a -= len;else if (a < min) a += len;\n            return a;\n        }\n    }, {\n        key: \"within\",\n        value: function within(p, a, b) {\n            return p >= Math.min(a, b) && p <= Math.max(a, b);\n        }\n    }, {\n        key: \"randomRange\",\n        value: function randomRange(a) {\n            var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            var r = a > b ? a - b : b - a;\n            return a + Math.random() * r;\n        }\n    }, {\n        key: \"normalizeValue\",\n        value: function normalizeValue(n, a, b) {\n            var min = Math.min(a, b);\n            var max = Math.max(a, b);\n            return (n - min) / (max - min);\n        }\n    }, {\n        key: \"sum\",\n        value: function sum(pts) {\n            var c = new Pt_1.Pt(pts[0]);\n            for (var i = 1, len = pts.length; i < len; i++) {\n                LinearAlgebra_1.Vec.add(c, pts[i]);\n            }\n            return c;\n        }\n    }, {\n        key: \"average\",\n        value: function average(pts) {\n            return Num.sum(pts).divide(pts.length);\n        }\n    }, {\n        key: \"cycle\",\n        value: function cycle(t) {\n            return (Math.sin(Math.PI * 2 * t) + 1) / 2;\n        }\n    }, {\n        key: \"mapToRange\",\n        value: function mapToRange(n, currA, currB, targetA, targetB) {\n            if (currA == currB) throw new Error(\"[currMin, currMax] must define a range that is not zero\");\n            var min = Math.min(targetA, targetB);\n            var max = Math.max(targetA, targetB);\n            return Num.normalizeValue(n, currA, currB) * (max - min) + min;\n        }\n    }]);\n\n    return Num;\n}();\n\nexports.Num = Num;\n\nvar Geom = function () {\n    function Geom() {\n        _classCallCheck(this, Geom);\n    }\n\n    _createClass(Geom, null, [{\n        key: \"boundAngle\",\n        value: function boundAngle(angle) {\n            return Num.boundValue(angle, 0, 360);\n        }\n    }, {\n        key: \"boundRadian\",\n        value: function boundRadian(radian) {\n            return Num.boundValue(radian, 0, Util_1.Const.two_pi);\n        }\n    }, {\n        key: \"toRadian\",\n        value: function toRadian(angle) {\n            return angle * Util_1.Const.deg_to_rad;\n        }\n    }, {\n        key: \"toDegree\",\n        value: function toDegree(radian) {\n            return radian * Util_1.Const.rad_to_deg;\n        }\n    }, {\n        key: \"boundingBox\",\n        value: function boundingBox(pts) {\n            var minPt = pts.reduce(function (a, p) {\n                return a.$min(p);\n            });\n            var maxPt = pts.reduce(function (a, p) {\n                return a.$max(p);\n            });\n            return new Pt_1.Group(minPt, maxPt);\n        }\n    }, {\n        key: \"centroid\",\n        value: function centroid(pts) {\n            return Num.average(pts);\n        }\n    }, {\n        key: \"anchor\",\n        value: function anchor(pts) {\n            var ptOrIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"to\";\n\n            var method = direction == \"to\" ? \"subtract\" : \"add\";\n            for (var i = 0, len = pts.length; i < len; i++) {\n                if (typeof ptOrIndex == \"number\") {\n                    if (ptOrIndex !== i) pts[i][method](pts[ptOrIndex]);\n                } else {\n                    pts[i][method](ptOrIndex);\n                }\n            }\n        }\n    }, {\n        key: \"interpolate\",\n        value: function interpolate(a, b) {\n            var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n\n            var len = Math.min(a.length, b.length);\n            var d = Pt_1.Pt.make(len);\n            for (var i = 0; i < len; i++) {\n                d[i] = a[i] * (1 - t) + b[i] * t;\n            }\n            return d;\n        }\n    }, {\n        key: \"perpendicular\",\n        value: function perpendicular(pt) {\n            var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Util_1.Const.xy;\n\n            var y = axis[1];\n            var x = axis[0];\n            var p = new Pt_1.Pt(pt);\n            var pa = new Pt_1.Pt(p);\n            pa[x] = -p[y];\n            pa[y] = p[x];\n            var pb = new Pt_1.Pt(p);\n            pb[x] = p[y];\n            pb[y] = -p[x];\n            return new Pt_1.Group(pa, pb);\n        }\n    }, {\n        key: \"isPerpendicular\",\n        value: function isPerpendicular(p1, p2) {\n            return new Pt_1.Pt(p1).dot(p2) === 0;\n        }\n    }, {\n        key: \"withinBound\",\n        value: function withinBound(pt, boundPt1, boundPt2) {\n            for (var i = 0, len = Math.min(pt.length, boundPt1.length, boundPt2.length); i < len; i++) {\n                if (!Num.within(pt[i], boundPt1[i], boundPt2[i])) return false;\n            }\n            return true;\n        }\n    }, {\n        key: \"sortEdges\",\n        value: function sortEdges(pts) {\n            var bounds = Geom.boundingBox(pts);\n            var center = bounds[1].add(bounds[0]).divide(2);\n            var fn = function fn(a, b) {\n                if (a.length < 2 || b.length < 2) throw new Error(\"Pt dimension cannot be less than 2\");\n                var da = a.$subtract(center);\n                var db = b.$subtract(center);\n                if (da[0] >= 0 && db[0] < 0) return 1;\n                if (da[0] < 0 && db[0] >= 0) return -1;\n                if (da[0] == 0 && db[0] == 0) {\n                    if (da[1] >= 0 || db[1] >= 0) return da[1] > db[1] ? 1 : -1;\n                    return db[1] > da[1] ? 1 : -1;\n                }\n                var det = da.$cross2D(db);\n                if (det < 0) return 1;\n                if (det > 0) return -1;\n                return da[0] * da[0] + da[1] * da[1] > db[0] * db[0] + db[1] * db[1] ? 1 : -1;\n            };\n            return pts.sort(fn);\n        }\n    }, {\n        key: \"scale\",\n        value: function scale(ps, _scale, anchor) {\n            var pts = !Array.isArray(ps) ? [ps] : ps;\n            var scs = typeof _scale == \"number\" ? Pt_1.Pt.make(pts[0].length, _scale) : _scale;\n            if (!anchor) anchor = Pt_1.Pt.make(pts[0].length, 0);\n            for (var i = 0, len = pts.length; i < len; i++) {\n                var p = pts[i];\n                for (var k = 0, lenP = p.length; k < lenP; k++) {\n                    p[k] = anchor && anchor[k] ? anchor[k] + (p[k] - anchor[k]) * scs[k] : p[k] * scs[k];\n                }\n            }\n            return Geom;\n        }\n    }, {\n        key: \"rotate2D\",\n        value: function rotate2D(ps, angle, anchor, axis) {\n            var pts = !Array.isArray(ps) ? [ps] : ps;\n            var fn = anchor ? LinearAlgebra_1.Mat.rotateAt2DMatrix : LinearAlgebra_1.Mat.rotate2DMatrix;\n            if (!anchor) anchor = Pt_1.Pt.make(pts[0].length, 0);\n            var cos = Math.cos(angle);\n            var sin = Math.sin(angle);\n            for (var i = 0, len = pts.length; i < len; i++) {\n                var p = axis ? pts[i].$take(axis) : pts[i];\n                p.to(LinearAlgebra_1.Mat.transform2D(p, fn(cos, sin, anchor)));\n            }\n            return Geom;\n        }\n    }, {\n        key: \"shear2D\",\n        value: function shear2D(ps, scale, anchor, axis) {\n            var pts = !Array.isArray(ps) ? [ps] : ps;\n            var s = typeof scale == \"number\" ? [scale, scale] : scale;\n            if (!anchor) anchor = Pt_1.Pt.make(pts[0].length, 0);\n            var fn = anchor ? LinearAlgebra_1.Mat.shearAt2DMatrix : LinearAlgebra_1.Mat.shear2DMatrix;\n            var tanx = Math.tan(s[0]);\n            var tany = Math.tan(s[1]);\n            for (var i = 0, len = pts.length; i < len; i++) {\n                var p = axis ? pts[i].$take(axis) : pts[i];\n                p.to(LinearAlgebra_1.Mat.transform2D(p, fn(tanx, tany, anchor)));\n            }\n            return Geom;\n        }\n    }, {\n        key: \"reflect2D\",\n        value: function reflect2D(ps, line, axis) {\n            var pts = !Array.isArray(ps) ? [ps] : ps;\n            var mat = LinearAlgebra_1.Mat.reflectAt2DMatrix(line[0], line[1]);\n            for (var i = 0, len = pts.length; i < len; i++) {\n                var p = axis ? pts[i].$take(axis) : pts[i];\n                p.to(LinearAlgebra_1.Mat.transform2D(p, mat));\n            }\n            return Geom;\n        }\n    }, {\n        key: \"cosTable\",\n        value: function cosTable() {\n            var cos = new Float64Array(360);\n            for (var i = 0; i < 360; i++) {\n                cos[i] = Math.cos(i * Math.PI / 180);\n            }var find = function find(rad) {\n                return cos[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n            };\n            return { table: cos, cos: find };\n        }\n    }, {\n        key: \"sinTable\",\n        value: function sinTable() {\n            var sin = new Float64Array(360);\n            for (var i = 0; i < 360; i++) {\n                sin[i] = Math.sin(i * Math.PI / 180);\n            }var find = function find(rad) {\n                return sin[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n            };\n            return { table: sin, sin: find };\n        }\n    }]);\n\n    return Geom;\n}();\n\nexports.Geom = Geom;\n\nvar Shaping = function () {\n    function Shaping() {\n        _classCallCheck(this, Shaping);\n    }\n\n    _createClass(Shaping, null, [{\n        key: \"linear\",\n        value: function linear(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return c * t;\n        }\n    }, {\n        key: \"quadraticIn\",\n        value: function quadraticIn(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return c * t * t;\n        }\n    }, {\n        key: \"quadraticOut\",\n        value: function quadraticOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return -c * t * (t - 2);\n        }\n    }, {\n        key: \"quadraticInOut\",\n        value: function quadraticInOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var dt = t * 2;\n            return t < 0.5 ? c / 2 * t * t * 4 : -c / 2 * ((dt - 1) * (dt - 3) - 1);\n        }\n    }, {\n        key: \"cubicIn\",\n        value: function cubicIn(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return c * t * t * t;\n        }\n    }, {\n        key: \"cubicOut\",\n        value: function cubicOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var dt = t - 1;\n            return c * (dt * dt * dt + 1);\n        }\n    }, {\n        key: \"cubicInOut\",\n        value: function cubicInOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var dt = t * 2;\n            return t < 0.5 ? c / 2 * dt * dt * dt : c / 2 * ((dt - 2) * (dt - 2) * (dt - 2) + 2);\n        }\n    }, {\n        key: \"exponentialIn\",\n        value: function exponentialIn(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.25;\n\n            return c * Math.pow(t, 1 / p);\n        }\n    }, {\n        key: \"exponentialOut\",\n        value: function exponentialOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.25;\n\n            return c * Math.pow(t, p);\n        }\n    }, {\n        key: \"sineIn\",\n        value: function sineIn(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return -c * Math.cos(t * Util_1.Const.half_pi) + c;\n        }\n    }, {\n        key: \"sineOut\",\n        value: function sineOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return c * Math.sin(t * Util_1.Const.half_pi);\n        }\n    }, {\n        key: \"sineInOut\",\n        value: function sineInOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return -c / 2 * (Math.cos(Math.PI * t) - 1);\n        }\n    }, {\n        key: \"cosineApprox\",\n        value: function cosineApprox(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var t2 = t * t;\n            var t4 = t2 * t2;\n            var t6 = t4 * t2;\n            return c * (4 * t6 / 9 - 17 * t4 / 9 + 22 * t2 / 9);\n        }\n    }, {\n        key: \"circularIn\",\n        value: function circularIn(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return -c * (Math.sqrt(1 - t * t) - 1);\n        }\n    }, {\n        key: \"circularOut\",\n        value: function circularOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var dt = t - 1;\n            return c * Math.sqrt(1 - dt * dt);\n        }\n    }, {\n        key: \"circularInOut\",\n        value: function circularInOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var dt = t * 2;\n            return t < 0.5 ? -c / 2 * (Math.sqrt(1 - dt * dt) - 1) : c / 2 * (Math.sqrt(1 - (dt - 2) * (dt - 2)) + 1);\n        }\n    }, {\n        key: \"elasticIn\",\n        value: function elasticIn(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.7;\n\n            var dt = t - 1;\n            var s = p / Util_1.Const.two_pi * 1.5707963267948966;\n            return c * (-Math.pow(2, 10 * dt) * Math.sin((dt - s) * Util_1.Const.two_pi / p));\n        }\n    }, {\n        key: \"elasticOut\",\n        value: function elasticOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.7;\n\n            var s = p / Util_1.Const.two_pi * 1.5707963267948966;\n            return c * (Math.pow(2, -10 * t) * Math.sin((t - s) * Util_1.Const.two_pi / p)) + c;\n        }\n    }, {\n        key: \"elasticInOut\",\n        value: function elasticInOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.6;\n\n            var dt = t * 2;\n            var s = p / Util_1.Const.two_pi * 1.5707963267948966;\n            if (t < 0.5) {\n                dt -= 1;\n                return c * (-0.5 * (Math.pow(2, 10 * dt) * Math.sin((dt - s) * Util_1.Const.two_pi / p)));\n            } else {\n                dt -= 1;\n                return c * (0.5 * (Math.pow(2, -10 * dt) * Math.sin((dt - s) * Util_1.Const.two_pi / p))) + c;\n            }\n        }\n    }, {\n        key: \"bounceIn\",\n        value: function bounceIn(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return c - Shaping.bounceOut(1 - t, c);\n        }\n    }, {\n        key: \"bounceOut\",\n        value: function bounceOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            if (t < 1 / 2.75) {\n                return c * (7.5625 * t * t);\n            } else if (t < 2 / 2.75) {\n                t -= 1.5 / 2.75;\n                return c * (7.5625 * t * t + 0.75);\n            } else if (t < 2.5 / 2.75) {\n                t -= 2.25 / 2.75;\n                return c * (7.5625 * t * t + 0.9375);\n            } else {\n                t -= 2.625 / 2.75;\n                return c * (7.5625 * t * t + 0.984375);\n            }\n        }\n    }, {\n        key: \"bounceInOut\",\n        value: function bounceInOut(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return t < 0.5 ? Shaping.bounceIn(t * 2, c) / 2 : Shaping.bounceOut(t * 2 - 1, c) / 2 + c / 2;\n        }\n    }, {\n        key: \"sigmoid\",\n        value: function sigmoid(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n\n            var d = p * (t - 0.5);\n            return c / (1 + Math.exp(-d));\n        }\n    }, {\n        key: \"logSigmoid\",\n        value: function logSigmoid(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.7;\n\n            p = Math.max(Util_1.Const.epsilon, Math.min(1 - Util_1.Const.epsilon, p));\n            p = 1 / (1 - p);\n            var A = 1 / (1 + Math.exp((t - 0.5) * p * -2));\n            var B = 1 / (1 + Math.exp(p));\n            var C = 1 / (1 + Math.exp(-p));\n            return c * (A - B) / (C - B);\n        }\n    }, {\n        key: \"seat\",\n        value: function seat(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n\n            if (t < 0.5) {\n                return c * Math.pow(2 * t, 1 - p) / 2;\n            } else {\n                return c * (1 - Math.pow(2 * (1 - t), 1 - p) / 2);\n            }\n        }\n    }, {\n        key: \"quadraticBezier\",\n        value: function quadraticBezier(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0.05, 0.95];\n\n            var a = typeof p != \"number\" ? p[0] : p;\n            var b = typeof p != \"number\" ? p[1] : 0.5;\n            var om2a = 1 - 2 * a;\n            if (om2a === 0) {\n                om2a = Util_1.Const.epsilon;\n            }\n            var d = (Math.sqrt(a * a + om2a * t) - a) / om2a;\n            return c * ((1 - 2 * b) * (d * d) + 2 * b * d);\n        }\n    }, {\n        key: \"cubicBezier\",\n        value: function cubicBezier(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0.1, 0.7];\n            var p2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0.9, 0.2];\n\n            var curve = new Pt_1.Group(new Pt_1.Pt(0, 0), new Pt_1.Pt(p1), new Pt_1.Pt(p2), new Pt_1.Pt(1, 1));\n            return c * Op_1.Curve.bezierStep(new Pt_1.Pt(t * t * t, t * t, t, 1), Op_1.Curve.controlPoints(curve)).y;\n        }\n    }, {\n        key: \"quadraticTarget\",\n        value: function quadraticTarget(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0.2, 0.35];\n\n            var a = Math.min(1 - Util_1.Const.epsilon, Math.max(Util_1.Const.epsilon, p1[0]));\n            var b = Math.min(1, Math.max(0, p1[1]));\n            var A = (1 - b) / (1 - a) - b / a;\n            var B = (A * (a * a) - b) / a;\n            var y = A * (t * t) - B * t;\n            return c * Math.min(1, Math.max(0, y));\n        }\n    }, {\n        key: \"cliff\",\n        value: function cliff(t) {\n            var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n\n            return t > p ? c : 0;\n        }\n    }, {\n        key: \"step\",\n        value: function step(fn, steps, t, c) {\n            var s = 1 / steps;\n            var tt = Math.floor(t / s) * s;\n\n            for (var _len = arguments.length, args = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n                args[_key - 4] = arguments[_key];\n            }\n\n            return fn.apply(undefined, [tt, c].concat(args));\n        }\n    }]);\n\n    return Shaping;\n}();\n\nexports.Shaping = Shaping;\n\nvar Range = function () {\n    function Range(g) {\n        _classCallCheck(this, Range);\n\n        this._dims = 0;\n        this._source = Pt_1.Group.fromPtArray(g);\n        this.calc();\n    }\n\n    _createClass(Range, [{\n        key: \"calc\",\n        value: function calc() {\n            if (!this._source) return;\n            var dims = this._source[0].length;\n            this._dims = dims;\n            var max = new Pt_1.Pt(dims);\n            var min = new Pt_1.Pt(dims);\n            var mag = new Pt_1.Pt(dims);\n            for (var i = 0; i < dims; i++) {\n                max[i] = Util_1.Const.min;\n                min[i] = Util_1.Const.max;\n                mag[i] = 0;\n                var s = this._source.zipSlice(i);\n                for (var k = 0, len = s.length; k < len; k++) {\n                    max[i] = Math.max(max[i], s[k]);\n                    min[i] = Math.min(min[i], s[k]);\n                    mag[i] = max[i] - min[i];\n                }\n            }\n            this._max = max;\n            this._min = min;\n            this._mag = mag;\n            return this;\n        }\n    }, {\n        key: \"mapTo\",\n        value: function mapTo(min, max, exclude) {\n            var target = new Pt_1.Group();\n            for (var i = 0, len = this._source.length; i < len; i++) {\n                var g = this._source[i];\n                var n = new Pt_1.Pt(this._dims);\n                for (var k = 0; k < this._dims; k++) {\n                    n[k] = exclude && exclude[k] ? g[k] : Num.mapToRange(g[k], this._min[k], this._max[k], min, max);\n                }\n                target.push(n);\n            }\n            return target;\n        }\n    }, {\n        key: \"append\",\n        value: function append(g) {\n            var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (g[0].length !== this._dims) throw new Error(\"Dimensions don't match. \" + this._dims + \" dimensions in Range and \" + g[0].length + \" provided in parameter. \");\n            this._source = this._source.concat(g);\n            if (update) this.calc();\n            return this;\n        }\n    }, {\n        key: \"ticks\",\n        value: function ticks(count) {\n            var g = new Pt_1.Group();\n            for (var i = 0; i <= count; i++) {\n                var p = new Pt_1.Pt(this._dims);\n                for (var k = 0, len = this._max.length; k < len; k++) {\n                    p[k] = Num.lerp(this._min[k], this._max[k], i / count);\n                }\n                g.push(p);\n            }\n            return g;\n        }\n    }, {\n        key: \"max\",\n        get: function get() {\n            return this._max.clone();\n        }\n    }, {\n        key: \"min\",\n        get: function get() {\n            return this._min.clone();\n        }\n    }, {\n        key: \"magnitude\",\n        get: function get() {\n            return this._mag.clone();\n        }\n    }]);\n\n    return Range;\n}();\n\nexports.Range = Range;\n\n/***/ }),\n\n/***/ \"./src/Op.ts\":\n/*!*******************!*\\\n  !*** ./src/Op.ts ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nvar Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nvar LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\nvar _errorLength = function _errorLength(obj) {\n    var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"expected\";\n    return Util_1.Util.warn(\"Group's length is less than \" + param, obj);\n};\nvar _errorOutofBound = function _errorOutofBound(obj) {\n    var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return Util_1.Util.warn(\"Index \" + param + \" is out of bound in Group\", obj);\n};\n\nvar Line = function () {\n    function Line() {\n        _classCallCheck(this, Line);\n    }\n\n    _createClass(Line, null, [{\n        key: \"fromAngle\",\n        value: function fromAngle(anchor, angle, magnitude) {\n            var g = new Pt_1.Group(new Pt_1.Pt(anchor), new Pt_1.Pt(anchor));\n            g[1].toAngle(angle, magnitude, true);\n            return g;\n        }\n    }, {\n        key: \"slope\",\n        value: function slope(p1, p2) {\n            return p2[0] - p1[0] === 0 ? undefined : (p2[1] - p1[1]) / (p2[0] - p1[0]);\n        }\n    }, {\n        key: \"intercept\",\n        value: function intercept(p1, p2) {\n            if (p2[0] - p1[0] === 0) {\n                return undefined;\n            } else {\n                var m = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n                var c = p1[1] - m * p1[0];\n                return { slope: m, yi: c, xi: m === 0 ? undefined : -c / m };\n            }\n        }\n    }, {\n        key: \"sideOfPt2D\",\n        value: function sideOfPt2D(line, pt) {\n            return (line[1][0] - line[0][0]) * (pt[1] - line[0][1]) - (pt[0] - line[0][0]) * (line[1][1] - line[0][1]);\n        }\n    }, {\n        key: \"collinear\",\n        value: function collinear(p1, p2, p3) {\n            var threshold = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.01;\n\n            var a = new Pt_1.Pt(0, 0, 0).to(p1).$subtract(p2);\n            var b = new Pt_1.Pt(0, 0, 0).to(p1).$subtract(p3);\n            return a.$cross(b).divide(1000).equals(new Pt_1.Pt(0, 0, 0), threshold);\n        }\n    }, {\n        key: \"magnitude\",\n        value: function magnitude(line) {\n            return line.length >= 2 ? line[1].$subtract(line[0]).magnitude() : 0;\n        }\n    }, {\n        key: \"magnitudeSq\",\n        value: function magnitudeSq(line) {\n            return line.length >= 2 ? line[1].$subtract(line[0]).magnitudeSq() : 0;\n        }\n    }, {\n        key: \"perpendicularFromPt\",\n        value: function perpendicularFromPt(line, pt) {\n            var asProjection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            if (line[0].equals(line[1])) return undefined;\n            var a = line[0].$subtract(line[1]);\n            var b = line[1].$subtract(pt);\n            var proj = b.$subtract(a.$project(b));\n            return asProjection ? proj : proj.$add(pt);\n        }\n    }, {\n        key: \"distanceFromPt\",\n        value: function distanceFromPt(line, pt) {\n            return Line.perpendicularFromPt(line, pt, true).magnitude();\n        }\n    }, {\n        key: \"intersectRay2D\",\n        value: function intersectRay2D(la, lb) {\n            var a = Line.intercept(la[0], la[1]);\n            var b = Line.intercept(lb[0], lb[1]);\n            var pa = la[0];\n            var pb = lb[0];\n            if (a == undefined) {\n                if (b == undefined) return undefined;\n                var y1 = -b.slope * (pb[0] - pa[0]) + pb[1];\n                return new Pt_1.Pt(pa[0], y1);\n            } else {\n                if (b == undefined) {\n                    var _y = -a.slope * (pa[0] - pb[0]) + pa[1];\n                    return new Pt_1.Pt(pb[0], _y);\n                } else if (b.slope != a.slope) {\n                    var px = (a.slope * pa[0] - b.slope * pb[0] + pb[1] - pa[1]) / (a.slope - b.slope);\n                    var py = a.slope * (px - pa[0]) + pa[1];\n                    return new Pt_1.Pt(px, py);\n                } else {\n                    if (a.yi == b.yi) {\n                        return new Pt_1.Pt(pa[0], pa[1]);\n                    } else {\n                        return undefined;\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"intersectLine2D\",\n        value: function intersectLine2D(la, lb) {\n            var pt = Line.intersectRay2D(la, lb);\n            return pt && Num_1.Geom.withinBound(pt, la[0], la[1]) && Num_1.Geom.withinBound(pt, lb[0], lb[1]) ? pt : undefined;\n        }\n    }, {\n        key: \"intersectLineWithRay2D\",\n        value: function intersectLineWithRay2D(line, ray) {\n            var pt = Line.intersectRay2D(line, ray);\n            return pt && Num_1.Geom.withinBound(pt, line[0], line[1]) ? pt : undefined;\n        }\n    }, {\n        key: \"intersectPolygon2D\",\n        value: function intersectPolygon2D(lineOrRay, poly) {\n            var sourceIsRay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var fn = sourceIsRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n            var pts = new Pt_1.Group();\n            for (var i = 0, len = poly.length; i < len; i++) {\n                var next = i === len - 1 ? 0 : i + 1;\n                var d = fn([poly[i], poly[next]], lineOrRay);\n                if (d) pts.push(d);\n            }\n            return pts.length > 0 ? pts : undefined;\n        }\n    }, {\n        key: \"intersectLines2D\",\n        value: function intersectLines2D(lines1, lines2) {\n            var isRay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var group = new Pt_1.Group();\n            var fn = isRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n            for (var i = 0, len = lines1.length; i < len; i++) {\n                for (var k = 0, lenk = lines2.length; k < lenk; k++) {\n                    var _ip = fn(lines1[i], lines2[k]);\n                    if (_ip) group.push(_ip);\n                }\n            }\n            return group;\n        }\n    }, {\n        key: \"intersectGridWithRay2D\",\n        value: function intersectGridWithRay2D(ray, gridPt) {\n            var t = Line.intercept(new Pt_1.Pt(ray[0]).subtract(gridPt), new Pt_1.Pt(ray[1]).subtract(gridPt));\n            var g = new Pt_1.Group();\n            if (t && t.xi) g.push(new Pt_1.Pt(gridPt[0] + t.xi, gridPt[1]));\n            if (t && t.yi) g.push(new Pt_1.Pt(gridPt[0], gridPt[1] + t.yi));\n            return g;\n        }\n    }, {\n        key: \"intersectGridWithLine2D\",\n        value: function intersectGridWithLine2D(line, gridPt) {\n            var g = Line.intersectGridWithRay2D(line, gridPt);\n            var gg = new Pt_1.Group();\n            for (var i = 0, len = g.length; i < len; i++) {\n                if (Num_1.Geom.withinBound(g[i], line[0], line[1])) gg.push(g[i]);\n            }\n            return gg;\n        }\n    }, {\n        key: \"intersectRect2D\",\n        value: function intersectRect2D(line, rect) {\n            var box = Num_1.Geom.boundingBox(Pt_1.Group.fromPtArray(line));\n            if (!Rectangle.hasIntersectRect2D(box, rect)) return new Pt_1.Group();\n            return Line.intersectLines2D([line], Rectangle.sides(rect));\n        }\n    }, {\n        key: \"subpoints\",\n        value: function subpoints(line, num) {\n            var pts = new Pt_1.Group();\n            for (var i = 1; i <= num; i++) {\n                pts.push(Num_1.Geom.interpolate(line[0], line[1], i / (num + 1)));\n            }\n            return pts;\n        }\n    }, {\n        key: \"crop\",\n        value: function crop(line, size) {\n            var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            var cropAsCircle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var tdx = index === 0 ? 1 : 0;\n            var ls = line[tdx].$subtract(line[index]);\n            if (ls[0] === 0 || size[0] === 0) return line[index];\n            if (cropAsCircle) {\n                var d = ls.unit().multiply(size[1]);\n                return line[index].$add(d);\n            } else {\n                var rect = Rectangle.fromCenter(line[index], size);\n                var sides = Rectangle.sides(rect);\n                var sideIdx = 0;\n                if (Math.abs(ls[1] / ls[0]) > Math.abs(size[1] / size[0])) {\n                    sideIdx = ls[1] < 0 ? 0 : 2;\n                } else {\n                    sideIdx = ls[0] < 0 ? 3 : 1;\n                }\n                return Line.intersectRay2D(sides[sideIdx], line);\n            }\n        }\n    }, {\n        key: \"marker\",\n        value: function marker(line, size) {\n            var graphic = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"arrow\" || \"line\";\n            var atTail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var h = atTail ? 0 : 1;\n            var t = atTail ? 1 : 0;\n            var unit = line[h].$subtract(line[t]);\n            if (unit.magnitudeSq() === 0) return new Pt_1.Group();\n            unit.unit();\n            var ps = Num_1.Geom.perpendicular(unit).multiply(size[0]).add(line[t]);\n            if (graphic == \"arrow\") {\n                ps.add(unit.$multiply(size[1]));\n                return new Pt_1.Group(line[t], ps[0], ps[1]);\n            } else {\n                return new Pt_1.Group(ps[0], ps[1]);\n            }\n        }\n    }, {\n        key: \"toRect\",\n        value: function toRect(line) {\n            return new Pt_1.Group(line[0].$min(line[1]), line[0].$max(line[1]));\n        }\n    }]);\n\n    return Line;\n}();\n\nexports.Line = Line;\n\nvar Rectangle = function () {\n    function Rectangle() {\n        _classCallCheck(this, Rectangle);\n    }\n\n    _createClass(Rectangle, null, [{\n        key: \"from\",\n        value: function from(topLeft, widthOrSize, height) {\n            return Rectangle.fromTopLeft(topLeft, widthOrSize, height);\n        }\n    }, {\n        key: \"fromTopLeft\",\n        value: function fromTopLeft(topLeft, widthOrSize, height) {\n            var size = typeof widthOrSize == \"number\" ? [widthOrSize, height || widthOrSize] : widthOrSize;\n            return new Pt_1.Group(new Pt_1.Pt(topLeft), new Pt_1.Pt(topLeft).add(size));\n        }\n    }, {\n        key: \"fromCenter\",\n        value: function fromCenter(center, widthOrSize, height) {\n            var half = typeof widthOrSize == \"number\" ? [widthOrSize / 2, (height || widthOrSize) / 2] : new Pt_1.Pt(widthOrSize).divide(2);\n            return new Pt_1.Group(new Pt_1.Pt(center).subtract(half), new Pt_1.Pt(center).add(half));\n        }\n    }, {\n        key: \"toCircle\",\n        value: function toCircle(pts) {\n            var within = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            return Circle.fromRect(pts, within);\n        }\n    }, {\n        key: \"toSquare\",\n        value: function toSquare(pts) {\n            var enclose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var s = Rectangle.size(pts);\n            var m = enclose ? s.maxValue().value : s.minValue().value;\n            return Rectangle.fromCenter(Rectangle.center(pts), m, m);\n        }\n    }, {\n        key: \"size\",\n        value: function size(pts) {\n            return pts[0].$max(pts[1]).subtract(pts[0].$min(pts[1]));\n        }\n    }, {\n        key: \"center\",\n        value: function center(pts) {\n            var min = pts[0].$min(pts[1]);\n            var max = pts[0].$max(pts[1]);\n            return min.add(max.$subtract(min).divide(2));\n        }\n    }, {\n        key: \"corners\",\n        value: function corners(rect) {\n            var p0 = rect[0].$min(rect[1]);\n            var p2 = rect[0].$max(rect[1]);\n            return new Pt_1.Group(p0, new Pt_1.Pt(p2.x, p0.y), p2, new Pt_1.Pt(p0.x, p2.y));\n        }\n    }, {\n        key: \"sides\",\n        value: function sides(rect) {\n            var _Rectangle$corners = Rectangle.corners(rect),\n                _Rectangle$corners2 = _slicedToArray(_Rectangle$corners, 4),\n                p0 = _Rectangle$corners2[0],\n                p1 = _Rectangle$corners2[1],\n                p2 = _Rectangle$corners2[2],\n                p3 = _Rectangle$corners2[3];\n\n            return [new Pt_1.Group(p0, p1), new Pt_1.Group(p1, p2), new Pt_1.Group(p2, p3), new Pt_1.Group(p3, p0)];\n        }\n    }, {\n        key: \"boundingBox\",\n        value: function boundingBox(rects) {\n            var merged = Util_1.Util.flatten(rects, false);\n            var min = Pt_1.Pt.make(2, Number.MAX_VALUE);\n            var max = Pt_1.Pt.make(2, Number.MIN_VALUE);\n            for (var i = 0, len = merged.length; i < len; i++) {\n                for (var k = 0; k < 2; k++) {\n                    min[k] = Math.min(min[k], merged[i][k]);\n                    max[k] = Math.max(max[k], merged[i][k]);\n                }\n            }\n            return new Pt_1.Group(min, max);\n        }\n    }, {\n        key: \"polygon\",\n        value: function polygon(rect) {\n            return Rectangle.corners(rect);\n        }\n    }, {\n        key: \"quadrants\",\n        value: function quadrants(rect, center) {\n            var corners = Rectangle.corners(rect);\n            var _center = center != undefined ? new Pt_1.Pt(center) : Rectangle.center(rect);\n            return corners.map(function (c) {\n                return new Pt_1.Group(c, _center).boundingBox();\n            });\n        }\n    }, {\n        key: \"halves\",\n        value: function halves(rect) {\n            var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n            var asRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var min = rect[0].$min(rect[1]);\n            var max = rect[0].$max(rect[1]);\n            var mid = asRows ? Num_1.Num.lerp(min[1], max[1], ratio) : Num_1.Num.lerp(min[0], max[0], ratio);\n            return asRows ? [new Pt_1.Group(min, new Pt_1.Pt(max[0], mid)), new Pt_1.Group(new Pt_1.Pt(min[0], mid), max)] : [new Pt_1.Group(min, new Pt_1.Pt(mid, max[1])), new Pt_1.Group(new Pt_1.Pt(mid, min[1]), max)];\n        }\n    }, {\n        key: \"withinBound\",\n        value: function withinBound(rect, pt) {\n            return Num_1.Geom.withinBound(pt, rect[0], rect[1]);\n        }\n    }, {\n        key: \"hasIntersectRect2D\",\n        value: function hasIntersectRect2D(rect1, rect2) {\n            var resetBoundingBox = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            if (resetBoundingBox) {\n                rect1 = Num_1.Geom.boundingBox(rect1);\n                rect2 = Num_1.Geom.boundingBox(rect2);\n            }\n            if (rect1[0][0] > rect2[1][0] || rect2[0][0] > rect1[1][0]) return false;\n            if (rect1[0][1] > rect2[1][1] || rect2[0][1] > rect1[1][1]) return false;\n            return true;\n        }\n    }, {\n        key: \"intersectRect2D\",\n        value: function intersectRect2D(rect1, rect2) {\n            if (!Rectangle.hasIntersectRect2D(rect1, rect2)) return new Pt_1.Group();\n            return Line.intersectLines2D(Rectangle.sides(rect1), Rectangle.sides(rect2));\n        }\n    }]);\n\n    return Rectangle;\n}();\n\nexports.Rectangle = Rectangle;\n\nvar Circle = function () {\n    function Circle() {\n        _classCallCheck(this, Circle);\n    }\n\n    _createClass(Circle, null, [{\n        key: \"fromRect\",\n        value: function fromRect(pts) {\n            var enclose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var r = 0;\n            var min = r = Rectangle.size(pts).minValue().value / 2;\n            if (enclose) {\n                var max = Rectangle.size(pts).maxValue().value / 2;\n                r = Math.sqrt(min * min + max * max);\n            } else {\n                r = min;\n            }\n            return new Pt_1.Group(Rectangle.center(pts), new Pt_1.Pt(r, r));\n        }\n    }, {\n        key: \"fromTriangle\",\n        value: function fromTriangle(pts) {\n            var enclose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            if (enclose) {\n                return Triangle.circumcircle(pts);\n            } else {\n                return Triangle.incircle(pts);\n            }\n        }\n    }, {\n        key: \"fromCenter\",\n        value: function fromCenter(pt, radius) {\n            return new Pt_1.Group(new Pt_1.Pt(pt), new Pt_1.Pt(radius, radius));\n        }\n    }, {\n        key: \"withinBound\",\n        value: function withinBound(pts, pt) {\n            var threshold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n            var d = pts[0].$subtract(pt);\n            return d.dot(d) + threshold < pts[1].x * pts[1].x;\n        }\n    }, {\n        key: \"intersectRay2D\",\n        value: function intersectRay2D(pts, ray) {\n            var d = ray[0].$subtract(ray[1]);\n            var f = pts[0].$subtract(ray[0]);\n            var a = d.dot(d);\n            var b = f.dot(d);\n            var c = f.dot(f) - pts[1].x * pts[1].x;\n            var p = b / a;\n            var q = c / a;\n            var disc = p * p - q;\n            if (disc < 0) {\n                return new Pt_1.Group();\n            } else {\n                var discSqrt = Math.sqrt(disc);\n                var t1 = -p + discSqrt;\n                var p1 = ray[0].$subtract(d.$multiply(t1));\n                if (disc === 0) return new Pt_1.Group(p1);\n                var t2 = -p - discSqrt;\n                var p2 = ray[0].$subtract(d.$multiply(t2));\n                return new Pt_1.Group(p1, p2);\n            }\n        }\n    }, {\n        key: \"intersectLine2D\",\n        value: function intersectLine2D(pts, line) {\n            var ps = Circle.intersectRay2D(pts, line);\n            var g = new Pt_1.Group();\n            if (ps.length > 0) {\n                for (var i = 0, len = ps.length; i < len; i++) {\n                    if (Rectangle.withinBound(line, ps[i])) g.push(ps[i]);\n                }\n            }\n            return g;\n        }\n    }, {\n        key: \"intersectCircle2D\",\n        value: function intersectCircle2D(pts, circle) {\n            var dv = circle[0].$subtract(pts[0]);\n            var dr2 = dv.magnitudeSq();\n            var dr = Math.sqrt(dr2);\n            var ar = pts[1].x;\n            var br = circle[1].x;\n            var ar2 = ar * ar;\n            var br2 = br * br;\n            if (dr > ar + br) {\n                return new Pt_1.Group();\n            } else if (dr < Math.abs(ar - br)) {\n                return new Pt_1.Group(pts[0].clone());\n            } else {\n                var a = (ar2 - br2 + dr2) / (2 * dr);\n                var h = Math.sqrt(ar2 - a * a);\n                var p = dv.$multiply(a / dr).add(pts[0]);\n                return new Pt_1.Group(new Pt_1.Pt(p.x + h * dv.y / dr, p.y - h * dv.x / dr), new Pt_1.Pt(p.x - h * dv.y / dr, p.y + h * dv.x / dr));\n            }\n        }\n    }, {\n        key: \"intersectRect2D\",\n        value: function intersectRect2D(pts, rect) {\n            var sides = Rectangle.sides(rect);\n            var g = [];\n            for (var i = 0, len = sides.length; i < len; i++) {\n                var ps = Circle.intersectLine2D(pts, sides[i]);\n                if (ps.length > 0) g.push(ps);\n            }\n            return Util_1.Util.flatten(g);\n        }\n    }, {\n        key: \"toRect\",\n        value: function toRect(pts) {\n            var within = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var r = pts[1][0];\n            if (within) {\n                var half = Math.sqrt(r * r) / 2;\n                return new Pt_1.Group(pts[0].$subtract(half), pts[0].$add(half));\n            } else {\n                return new Pt_1.Group(pts[0].$subtract(r), pts[0].$add(r));\n            }\n        }\n    }, {\n        key: \"toTriangle\",\n        value: function toTriangle(pts) {\n            var within = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (within) {\n                var ang = -Math.PI / 2;\n                var inc = Math.PI * 2 / 3;\n                var g = new Pt_1.Group();\n                for (var i = 0; i < 3; i++) {\n                    g.push(pts[0].clone().toAngle(ang, pts[1][0], true));\n                    ang += inc;\n                }\n                return g;\n            } else {\n                return Triangle.fromCenter(pts[0], pts[1][0]);\n            }\n        }\n    }]);\n\n    return Circle;\n}();\n\nexports.Circle = Circle;\n\nvar Triangle = function () {\n    function Triangle() {\n        _classCallCheck(this, Triangle);\n    }\n\n    _createClass(Triangle, null, [{\n        key: \"fromRect\",\n        value: function fromRect(rect) {\n            var top = rect[0].$add(rect[1]).divide(2);\n            top.y = rect[0][1];\n            var left = rect[1].clone();\n            left.x = rect[0][0];\n            return new Pt_1.Group(top, rect[1].clone(), left);\n        }\n    }, {\n        key: \"fromCircle\",\n        value: function fromCircle(circle) {\n            return Circle.toTriangle(circle, true);\n        }\n    }, {\n        key: \"fromCenter\",\n        value: function fromCenter(pt, size) {\n            return Triangle.fromCircle(Circle.fromCenter(pt, size));\n        }\n    }, {\n        key: \"medial\",\n        value: function medial(pts) {\n            if (pts.length < 3) return _errorLength(new Pt_1.Group(), 3);\n            return Polygon.midpoints(pts, true);\n        }\n    }, {\n        key: \"oppositeSide\",\n        value: function oppositeSide(pts, index) {\n            if (pts.length < 3) return _errorLength(new Pt_1.Group(), 3);\n            if (index === 0) {\n                return Pt_1.Group.fromPtArray([pts[1], pts[2]]);\n            } else if (index === 1) {\n                return Pt_1.Group.fromPtArray([pts[0], pts[2]]);\n            } else {\n                return Pt_1.Group.fromPtArray([pts[0], pts[1]]);\n            }\n        }\n    }, {\n        key: \"altitude\",\n        value: function altitude(pts, index) {\n            var opp = Triangle.oppositeSide(pts, index);\n            if (opp.length > 1) {\n                return new Pt_1.Group(pts[index], Line.perpendicularFromPt(opp, pts[index]));\n            } else {\n                return new Pt_1.Group();\n            }\n        }\n    }, {\n        key: \"orthocenter\",\n        value: function orthocenter(pts) {\n            if (pts.length < 3) return _errorLength(undefined, 3);\n            var a = Triangle.altitude(pts, 0);\n            var b = Triangle.altitude(pts, 1);\n            return Line.intersectRay2D(a, b);\n        }\n    }, {\n        key: \"incenter\",\n        value: function incenter(pts) {\n            if (pts.length < 3) return _errorLength(undefined, 3);\n            var a = Polygon.bisector(pts, 0).add(pts[0]);\n            var b = Polygon.bisector(pts, 1).add(pts[1]);\n            return Line.intersectRay2D(new Pt_1.Group(pts[0], a), new Pt_1.Group(pts[1], b));\n        }\n    }, {\n        key: \"incircle\",\n        value: function incircle(pts, center) {\n            var c = center ? center : Triangle.incenter(pts);\n            var area = Polygon.area(pts);\n            var perim = Polygon.perimeter(pts, true);\n            var r = 2 * area / perim.total;\n            return Circle.fromCenter(c, r);\n        }\n    }, {\n        key: \"circumcenter\",\n        value: function circumcenter(pts) {\n            var md = Triangle.medial(pts);\n            var a = [md[0], Num_1.Geom.perpendicular(pts[0].$subtract(md[0])).p1.$add(md[0])];\n            var b = [md[1], Num_1.Geom.perpendicular(pts[1].$subtract(md[1])).p1.$add(md[1])];\n            return Line.intersectRay2D(a, b);\n        }\n    }, {\n        key: \"circumcircle\",\n        value: function circumcircle(pts, center) {\n            var c = center ? center : Triangle.circumcenter(pts);\n            var r = pts[0].$subtract(c).magnitude();\n            return Circle.fromCenter(c, r);\n        }\n    }]);\n\n    return Triangle;\n}();\n\nexports.Triangle = Triangle;\n\nvar Polygon = function () {\n    function Polygon() {\n        _classCallCheck(this, Polygon);\n    }\n\n    _createClass(Polygon, null, [{\n        key: \"centroid\",\n        value: function centroid(pts) {\n            return Num_1.Geom.centroid(pts);\n        }\n    }, {\n        key: \"rectangle\",\n        value: function rectangle(center, widthOrSize, height) {\n            return Rectangle.corners(Rectangle.fromCenter(center, widthOrSize, height));\n        }\n    }, {\n        key: \"fromCenter\",\n        value: function fromCenter(center, radius, sides) {\n            var g = new Pt_1.Group();\n            for (var i = 0; i < sides; i++) {\n                var ang = Math.PI * 2 * i / sides;\n                g.push(new Pt_1.Pt(Math.cos(ang) * radius, Math.sin(ang) * radius).add(center));\n            }\n            return g;\n        }\n    }, {\n        key: \"lineAt\",\n        value: function lineAt(pts, idx) {\n            if (idx < 0 || idx >= pts.length) throw new Error(\"index out of the Polygon's range\");\n            return new Pt_1.Group(pts[idx], idx === pts.length - 1 ? pts[0] : pts[idx + 1]);\n        }\n    }, {\n        key: \"lines\",\n        value: function lines(pts) {\n            var closePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (pts.length < 2) return _errorLength(new Pt_1.Group(), 2);\n            var sp = Util_1.Util.split(pts, 2, 1);\n            if (closePath) sp.push(new Pt_1.Group(pts[pts.length - 1], pts[0]));\n            return sp.map(function (g) {\n                return g;\n            });\n        }\n    }, {\n        key: \"midpoints\",\n        value: function midpoints(pts) {\n            var closePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n\n            if (pts.length < 2) return _errorLength(new Pt_1.Group(), 2);\n            var sides = Polygon.lines(pts, closePath);\n            var mids = sides.map(function (s) {\n                return Num_1.Geom.interpolate(s[0], s[1], t);\n            });\n            return mids;\n        }\n    }, {\n        key: \"adjacentSides\",\n        value: function adjacentSides(pts, index) {\n            var closePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            if (pts.length < 2) return _errorLength(new Pt_1.Group(), 2);\n            if (index < 0 || index >= pts.length) return _errorOutofBound(new Pt_1.Group(), index);\n            var gs = [];\n            var left = index - 1;\n            if (closePath && left < 0) left = pts.length - 1;\n            if (left >= 0) gs.push(new Pt_1.Group(pts[index], pts[left]));\n            var right = index + 1;\n            if (closePath && right > pts.length - 1) right = 0;\n            if (right <= pts.length - 1) gs.push(new Pt_1.Group(pts[index], pts[right]));\n            return gs;\n        }\n    }, {\n        key: \"bisector\",\n        value: function bisector(pts, index) {\n            var sides = Polygon.adjacentSides(pts, index, true);\n            if (sides.length >= 2) {\n                var a = sides[0][1].$subtract(sides[0][0]).unit();\n                var b = sides[1][1].$subtract(sides[1][0]).unit();\n                return a.add(b).divide(2);\n            } else {\n                return undefined;\n            }\n        }\n    }, {\n        key: \"perimeter\",\n        value: function perimeter(pts) {\n            var closePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            if (pts.length < 2) return _errorLength(new Pt_1.Group(), 2);\n            var lines = Polygon.lines(pts, closePath);\n            var mag = 0;\n            var p = Pt_1.Pt.make(lines.length, 0);\n            for (var i = 0, len = lines.length; i < len; i++) {\n                var m = Line.magnitude(lines[i]);\n                mag += m;\n                p[i] = m;\n            }\n            return {\n                total: mag,\n                segments: p\n            };\n        }\n    }, {\n        key: \"area\",\n        value: function area(pts) {\n            if (pts.length < 3) return _errorLength(new Pt_1.Group(), 3);\n            var det = function det(a, b) {\n                return a[0] * b[1] - a[1] * b[0];\n            };\n            var area = 0;\n            for (var i = 0, len = pts.length; i < len; i++) {\n                if (i < pts.length - 1) {\n                    area += det(pts[i], pts[i + 1]);\n                } else {\n                    area += det(pts[i], pts[0]);\n                }\n            }\n            return Math.abs(area / 2);\n        }\n    }, {\n        key: \"convexHull\",\n        value: function convexHull(pts) {\n            var sorted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            if (pts.length < 3) return _errorLength(new Pt_1.Group(), 3);\n            if (!sorted) {\n                pts = pts.slice();\n                pts.sort(function (a, b) {\n                    return a[0] - b[0];\n                });\n            }\n            var left = function left(a, b, c) {\n                return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]) > 0;\n            };\n            var dq = [];\n            var bot = pts.length - 2;\n            var top = bot + 3;\n            dq[bot] = pts[2];\n            dq[top] = pts[2];\n            if (left(pts[0], pts[1], pts[2])) {\n                dq[bot + 1] = pts[0];\n                dq[bot + 2] = pts[1];\n            } else {\n                dq[bot + 1] = pts[1];\n                dq[bot + 2] = pts[0];\n            }\n            for (var i = 3, len = pts.length; i < len; i++) {\n                var pt = pts[i];\n                if (left(dq[bot], dq[bot + 1], pt) && left(dq[top - 1], dq[top], pt)) {\n                    continue;\n                }\n                while (!left(dq[bot], dq[bot + 1], pt)) {\n                    bot += 1;\n                }\n                bot -= 1;\n                dq[bot] = pt;\n                while (!left(dq[top - 1], dq[top], pt)) {\n                    top -= 1;\n                }\n                top += 1;\n                dq[top] = pt;\n            }\n            var hull = new Pt_1.Group();\n            for (var h = 0; h < top - bot; h++) {\n                hull.push(dq[bot + h]);\n            }\n            return hull;\n        }\n    }, {\n        key: \"network\",\n        value: function network(pts) {\n            var originIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            var g = [];\n            for (var i = 0, len = pts.length; i < len; i++) {\n                if (i != originIndex) g.push(new Pt_1.Group(pts[originIndex], pts[i]));\n            }\n            return g;\n        }\n    }, {\n        key: \"nearestPt\",\n        value: function nearestPt(pts, pt) {\n            var _near = Number.MAX_VALUE;\n            var _item = -1;\n            for (var i = 0, len = pts.length; i < len; i++) {\n                var d = pts[i].$subtract(pt).magnitudeSq();\n                if (d < _near) {\n                    _near = d;\n                    _item = i;\n                }\n            }\n            return _item;\n        }\n    }, {\n        key: \"projectAxis\",\n        value: function projectAxis(poly, unitAxis) {\n            var dot = unitAxis.dot(poly[0]);\n            var d = new Pt_1.Pt(dot, dot);\n            for (var n = 1, len = poly.length; n < len; n++) {\n                dot = unitAxis.dot(poly[n]);\n                d = new Pt_1.Pt(Math.min(dot, d[0]), Math.max(dot, d[1]));\n            }\n            return d;\n        }\n    }, {\n        key: \"_axisOverlap\",\n        value: function _axisOverlap(poly1, poly2, unitAxis) {\n            var pa = Polygon.projectAxis(poly1, unitAxis);\n            var pb = Polygon.projectAxis(poly2, unitAxis);\n            return pa[0] < pb[0] ? pb[0] - pa[1] : pa[0] - pb[1];\n        }\n    }, {\n        key: \"hasIntersectPoint\",\n        value: function hasIntersectPoint(poly, pt) {\n            var c = false;\n            for (var i = 0, len = poly.length; i < len; i++) {\n                var ln = Polygon.lineAt(poly, i);\n                if (ln[0][1] > pt[1] != ln[1][1] > pt[1] && pt[0] < (ln[1][0] - ln[0][0]) * (pt[1] - ln[0][1]) / (ln[1][1] - ln[0][1]) + ln[0][0]) {\n                    c = !c;\n                }\n            }\n            return c;\n        }\n    }, {\n        key: \"hasIntersectCircle\",\n        value: function hasIntersectCircle(poly, circle) {\n            var info = {\n                which: -1,\n                dist: 0,\n                normal: null,\n                edge: null,\n                vertex: null\n            };\n            var c = circle[0];\n            var r = circle[1][0];\n            var minDist = Number.MAX_SAFE_INTEGER;\n            for (var i = 0, len = poly.length; i < len; i++) {\n                var edge = Polygon.lineAt(poly, i);\n                var axis = new Pt_1.Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n                var poly2 = new Pt_1.Group(c.$add(axis.$multiply(r)), c.$subtract(axis.$multiply(r)));\n                var dist = Polygon._axisOverlap(poly, poly2, axis);\n                if (dist > 0) {\n                    return null;\n                } else if (Math.abs(dist) < minDist) {\n                    var check = Rectangle.withinBound(edge, Line.perpendicularFromPt(edge, c)) || Circle.intersectLine2D(circle, edge).length > 0;\n                    if (check) {\n                        info.edge = edge;\n                        info.normal = axis;\n                        minDist = Math.abs(dist);\n                        info.which = i;\n                    }\n                }\n            }\n            if (!info.edge) return null;\n            var dir = c.$subtract(Polygon.centroid(poly)).dot(info.normal);\n            if (dir < 0) info.normal.multiply(-1);\n            info.dist = minDist;\n            info.vertex = c;\n            return info;\n        }\n    }, {\n        key: \"hasIntersectPolygon\",\n        value: function hasIntersectPolygon(poly1, poly2) {\n            var info = {\n                which: -1,\n                dist: 0,\n                normal: new Pt_1.Pt(),\n                edge: new Pt_1.Group(),\n                vertex: new Pt_1.Pt()\n            };\n            var minDist = Number.MAX_SAFE_INTEGER;\n            for (var i = 0, plen = poly1.length + poly2.length; i < plen; i++) {\n                var edge = i < poly1.length ? Polygon.lineAt(poly1, i) : Polygon.lineAt(poly2, i - poly1.length);\n                var axis = new Pt_1.Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n                var dist = Polygon._axisOverlap(poly1, poly2, axis);\n                if (dist > 0) {\n                    return null;\n                } else if (Math.abs(dist) < minDist) {\n                    info.edge = edge;\n                    info.normal = axis;\n                    minDist = Math.abs(dist);\n                    info.which = i < poly1.length ? 0 : 1;\n                }\n            }\n            info.dist = minDist;\n            var b1 = info.which === 0 ? poly2 : poly1;\n            var b2 = info.which === 0 ? poly1 : poly2;\n            var c1 = Polygon.centroid(b1);\n            var c2 = Polygon.centroid(b2);\n            var dir = c1.$subtract(c2).dot(info.normal);\n            if (dir < 0) info.normal.multiply(-1);\n            var smallest = Number.MAX_SAFE_INTEGER;\n            for (var _i = 0, len = b1.length; _i < len; _i++) {\n                var d = info.normal.dot(b1[_i].$subtract(c2));\n                if (d < smallest) {\n                    smallest = d;\n                    info.vertex = b1[_i];\n                }\n            }\n            return info;\n        }\n    }, {\n        key: \"intersectPolygon2D\",\n        value: function intersectPolygon2D(poly1, poly2) {\n            var lp = Polygon.lines(poly1);\n            var g = [];\n            for (var i = 0, len = lp.length; i < len; i++) {\n                var ins = Line.intersectPolygon2D(lp[i], poly2, false);\n                if (ins) g.push(ins);\n            }\n            return Util_1.Util.flatten(g, true);\n        }\n    }, {\n        key: \"toRects\",\n        value: function toRects(polys) {\n            var boxes = polys.map(function (g) {\n                return Num_1.Geom.boundingBox(g);\n            });\n            var merged = Util_1.Util.flatten(boxes, false);\n            boxes.unshift(Num_1.Geom.boundingBox(merged));\n            return boxes;\n        }\n    }]);\n\n    return Polygon;\n}();\n\nexports.Polygon = Polygon;\n\nvar Curve = function () {\n    function Curve() {\n        _classCallCheck(this, Curve);\n    }\n\n    _createClass(Curve, null, [{\n        key: \"getSteps\",\n        value: function getSteps(steps) {\n            var ts = new Pt_1.Group();\n            for (var i = 0; i <= steps; i++) {\n                var t = i / steps;\n                ts.push(new Pt_1.Pt(t * t * t, t * t, t, 1));\n            }\n            return ts;\n        }\n    }, {\n        key: \"controlPoints\",\n        value: function controlPoints(pts) {\n            var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var copyStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            if (index > pts.length - 1) return new Pt_1.Group();\n            var _index = function _index(i) {\n                return i < pts.length - 1 ? i : pts.length - 1;\n            };\n            var p0 = pts[index];\n            index = copyStart ? index : index + 1;\n            return new Pt_1.Group(p0, pts[_index(index++)], pts[_index(index++)], pts[_index(index++)]);\n        }\n    }, {\n        key: \"_calcPt\",\n        value: function _calcPt(ctrls, params) {\n            var x = ctrls.reduce(function (a, c, i) {\n                return a + c.x * params[i];\n            }, 0);\n            var y = ctrls.reduce(function (a, c, i) {\n                return a + c.y * params[i];\n            }, 0);\n            if (ctrls[0].length > 2) {\n                var z = ctrls.reduce(function (a, c, i) {\n                    return a + c.z * params[i];\n                }, 0);\n                return new Pt_1.Pt(x, y, z);\n            }\n            return new Pt_1.Pt(x, y);\n        }\n    }, {\n        key: \"catmullRom\",\n        value: function catmullRom(pts) {\n            var steps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n\n            if (pts.length < 2) return new Pt_1.Group();\n            var ps = new Pt_1.Group();\n            var ts = Curve.getSteps(steps);\n            var c = Curve.controlPoints(pts, 0, true);\n            for (var i = 0; i <= steps; i++) {\n                ps.push(Curve.catmullRomStep(ts[i], c));\n            }\n            var k = 0;\n            while (k < pts.length - 2) {\n                var cp = Curve.controlPoints(pts, k);\n                if (cp.length > 0) {\n                    for (var _i2 = 0; _i2 <= steps; _i2++) {\n                        ps.push(Curve.catmullRomStep(ts[_i2], cp));\n                    }\n                    k++;\n                }\n            }\n            return ps;\n        }\n    }, {\n        key: \"catmullRomStep\",\n        value: function catmullRomStep(step, ctrls) {\n            var m = new Pt_1.Group(new Pt_1.Pt(-0.5, 1, -0.5, 0), new Pt_1.Pt(1.5, -2.5, 0, 1), new Pt_1.Pt(-1.5, 2, 0.5, 0), new Pt_1.Pt(0.5, -0.5, 0, 0));\n            return Curve._calcPt(ctrls, LinearAlgebra_1.Mat.multiply([step], m, true)[0]);\n        }\n    }, {\n        key: \"cardinal\",\n        value: function cardinal(pts) {\n            var steps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n            var tension = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n\n            if (pts.length < 2) return new Pt_1.Group();\n            var ps = new Pt_1.Group();\n            var ts = Curve.getSteps(steps);\n            var c = Curve.controlPoints(pts, 0, true);\n            for (var i = 0; i <= steps; i++) {\n                ps.push(Curve.cardinalStep(ts[i], c, tension));\n            }\n            var k = 0;\n            while (k < pts.length - 2) {\n                var cp = Curve.controlPoints(pts, k);\n                if (cp.length > 0) {\n                    for (var _i3 = 0; _i3 <= steps; _i3++) {\n                        ps.push(Curve.cardinalStep(ts[_i3], cp, tension));\n                    }\n                    k++;\n                }\n            }\n            return ps;\n        }\n    }, {\n        key: \"cardinalStep\",\n        value: function cardinalStep(step, ctrls) {\n            var tension = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n\n            var m = new Pt_1.Group(new Pt_1.Pt(-1, 2, -1, 0), new Pt_1.Pt(-1, 1, 0, 0), new Pt_1.Pt(1, -2, 1, 0), new Pt_1.Pt(1, -1, 0, 0));\n            var h = LinearAlgebra_1.Mat.multiply([step], m, true)[0].multiply(tension);\n            var h2 = 2 * step[0] - 3 * step[1] + 1;\n            var h3 = -2 * step[0] + 3 * step[1];\n            var pt = Curve._calcPt(ctrls, h);\n            pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n            pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n            if (pt.length > 2) pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n            return pt;\n        }\n    }, {\n        key: \"bezier\",\n        value: function bezier(pts) {\n            var steps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n\n            if (pts.length < 4) return new Pt_1.Group();\n            var ps = new Pt_1.Group();\n            var ts = Curve.getSteps(steps);\n            var k = 0;\n            while (k < pts.length - 3) {\n                var c = Curve.controlPoints(pts, k);\n                if (c.length > 0) {\n                    for (var i = 0; i <= steps; i++) {\n                        ps.push(Curve.bezierStep(ts[i], c));\n                    }\n                    k += 3;\n                }\n            }\n            return ps;\n        }\n    }, {\n        key: \"bezierStep\",\n        value: function bezierStep(step, ctrls) {\n            var m = new Pt_1.Group(new Pt_1.Pt(-1, 3, -3, 1), new Pt_1.Pt(3, -6, 3, 0), new Pt_1.Pt(-3, 3, 0, 0), new Pt_1.Pt(1, 0, 0, 0));\n            return Curve._calcPt(ctrls, LinearAlgebra_1.Mat.multiply([step], m, true)[0]);\n        }\n    }, {\n        key: \"bspline\",\n        value: function bspline(pts) {\n            var steps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n            var tension = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            if (pts.length < 2) return new Pt_1.Group();\n            var ps = new Pt_1.Group();\n            var ts = Curve.getSteps(steps);\n            var k = 0;\n            while (k < pts.length - 3) {\n                var c = Curve.controlPoints(pts, k);\n                if (c.length > 0) {\n                    if (tension !== 1) {\n                        for (var i = 0; i <= steps; i++) {\n                            ps.push(Curve.bsplineTensionStep(ts[i], c, tension));\n                        }\n                    } else {\n                        for (var _i4 = 0; _i4 <= steps; _i4++) {\n                            ps.push(Curve.bsplineStep(ts[_i4], c));\n                        }\n                    }\n                    k++;\n                }\n            }\n            return ps;\n        }\n    }, {\n        key: \"bsplineStep\",\n        value: function bsplineStep(step, ctrls) {\n            var m = new Pt_1.Group(new Pt_1.Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666), new Pt_1.Pt(0.5, -1, 0, 0.6666666666666666), new Pt_1.Pt(-0.5, 0.5, 0.5, 0.16666666666666666), new Pt_1.Pt(0.16666666666666666, 0, 0, 0));\n            return Curve._calcPt(ctrls, LinearAlgebra_1.Mat.multiply([step], m, true)[0]);\n        }\n    }, {\n        key: \"bsplineTensionStep\",\n        value: function bsplineTensionStep(step, ctrls) {\n            var tension = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            var m = new Pt_1.Group(new Pt_1.Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666), new Pt_1.Pt(-1.5, 2, 0, -0.3333333333333333), new Pt_1.Pt(1.5, -2.5, 0.5, 0.16666666666666666), new Pt_1.Pt(0.16666666666666666, 0, 0, 0));\n            var h = LinearAlgebra_1.Mat.multiply([step], m, true)[0].multiply(tension);\n            var h2 = 2 * step[0] - 3 * step[1] + 1;\n            var h3 = -2 * step[0] + 3 * step[1];\n            var pt = Curve._calcPt(ctrls, h);\n            pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n            pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n            if (pt.length > 2) pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n            return pt;\n        }\n    }]);\n\n    return Curve;\n}();\n\nexports.Curve = Curve;\n\n/***/ }),\n\n/***/ \"./src/Physics.ts\":\n/*!************************!*\\\n  !*** ./src/Physics.ts ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nvar Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\n\nvar World = function () {\n    function World(bound) {\n        var friction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var gravity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n        _classCallCheck(this, World);\n\n        this._lastTime = null;\n        this._gravity = new Pt_1.Pt();\n        this._friction = 1;\n        this._damping = 0.75;\n        this._particles = [];\n        this._bodies = [];\n        this._pnames = [];\n        this._bnames = [];\n        this._bound = Pt_1.Bound.fromGroup(bound);\n        this._friction = friction;\n        this._gravity = typeof gravity === \"number\" ? new Pt_1.Pt(0, gravity) : new Pt_1.Pt(gravity);\n        return this;\n    }\n\n    _createClass(World, [{\n        key: \"body\",\n        value: function body(id) {\n            var idx = id;\n            if (typeof id === \"string\" && id.length > 0) {\n                idx = this._bnames.indexOf(id);\n            }\n            if (!(idx >= 0)) throw new Error(\"Cannot find body id: \" + id);\n            return this._bodies[idx];\n        }\n    }, {\n        key: \"particle\",\n        value: function particle(id) {\n            var idx = id;\n            if (typeof id === \"string\" && id.length > 0) {\n                idx = this._pnames.indexOf(id);\n            }\n            if (!(idx >= 0)) throw new Error(\"Cannot find particle id: \" + id);\n            return this._particles[idx];\n        }\n    }, {\n        key: \"bodyIndex\",\n        value: function bodyIndex(name) {\n            return this._bnames.indexOf(name);\n        }\n    }, {\n        key: \"particleIndex\",\n        value: function particleIndex(name) {\n            return this._pnames.indexOf(name);\n        }\n    }, {\n        key: \"update\",\n        value: function update(ms) {\n            var dt = ms / 1000;\n            this._updateParticles(dt);\n            this._updateBodies(dt);\n        }\n    }, {\n        key: \"drawParticles\",\n        value: function drawParticles(fn) {\n            this._drawParticles = fn;\n        }\n    }, {\n        key: \"drawBodies\",\n        value: function drawBodies(fn) {\n            this._drawBodies = fn;\n        }\n    }, {\n        key: \"add\",\n        value: function add(p) {\n            var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n            if (p instanceof Body) {\n                this._bodies.push(p);\n                this._bnames.push(name);\n            } else {\n                this._particles.push(p);\n                this._pnames.push(name);\n            }\n            return this;\n        }\n    }, {\n        key: \"_index\",\n        value: function _index(fn, id) {\n            var index = 0;\n            if (typeof id === \"string\") {\n                index = fn(id);\n                if (index < 0) throw new Error(\"Cannot find index of \" + id);\n            } else {\n                index = id;\n            }\n            return index;\n        }\n    }, {\n        key: \"removeBody\",\n        value: function removeBody(from) {\n            var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var index = this._index(this.bodyIndex.bind(this), from);\n            var param = index < 0 ? [index * -1 - 1, count] : [index, count];\n            this._bodies.splice(param[0], param[1]);\n            this._bnames.splice(param[0], param[1]);\n            return this;\n        }\n    }, {\n        key: \"removeParticle\",\n        value: function removeParticle(from) {\n            var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var index = this._index(this.particleIndex.bind(this), from);\n            var param = index < 0 ? [index * -1 - 1, count] : [index, count];\n            this._particles.splice(param[0], param[1]);\n            this._pnames.splice(param[0], param[1]);\n            return this;\n        }\n    }, {\n        key: \"integrate\",\n        value: function integrate(p, dt, prevDt) {\n            p.addForce(this._gravity);\n            p.verlet(dt, this._friction, prevDt);\n            return p;\n        }\n    }, {\n        key: \"_updateParticles\",\n        value: function _updateParticles(dt) {\n            for (var i = 0, len = this._particles.length; i < len; i++) {\n                var p = this._particles[i];\n                this.integrate(p, dt, this._lastTime);\n                World.boundConstraint(p, this._bound, this._damping);\n                for (var k = i + 1; k < len; k++) {\n                    if (i !== k) {\n                        var p2 = this._particles[k];\n                        p.collide(p2, this._damping);\n                    }\n                }\n                if (this._drawParticles) this._drawParticles(p, i);\n            }\n            this._lastTime = dt;\n        }\n    }, {\n        key: \"_updateBodies\",\n        value: function _updateBodies(dt) {\n            for (var i = 0, len = this._bodies.length; i < len; i++) {\n                var bds = this._bodies[i];\n                if (bds) {\n                    for (var k = 0, klen = bds.length; k < klen; k++) {\n                        var bk = bds[k];\n                        World.boundConstraint(bk, this._bound, this._damping);\n                        this.integrate(bk, dt, this._lastTime);\n                    }\n                    for (var _k = i + 1; _k < len; _k++) {\n                        bds.processBody(this._bodies[_k]);\n                    }\n                    for (var m = 0, mlen = this._particles.length; m < mlen; m++) {\n                        bds.processParticle(this._particles[m]);\n                    }\n                    bds.processEdges();\n                    if (this._drawBodies) this._drawBodies(bds, i);\n                }\n            }\n        }\n    }, {\n        key: \"gravity\",\n        get: function get() {\n            return this._gravity;\n        },\n        set: function set(g) {\n            this._gravity = g;\n        }\n    }, {\n        key: \"friction\",\n        get: function get() {\n            return this._friction;\n        },\n        set: function set(f) {\n            this._friction = f;\n        }\n    }, {\n        key: \"damping\",\n        get: function get() {\n            return this._damping;\n        },\n        set: function set(f) {\n            this._damping = f;\n        }\n    }, {\n        key: \"bodyCount\",\n        get: function get() {\n            return this._bodies.length;\n        }\n    }, {\n        key: \"particleCount\",\n        get: function get() {\n            return this._particles.length;\n        }\n    }], [{\n        key: \"edgeConstraint\",\n        value: function edgeConstraint(p1, p2, dist) {\n            var stiff = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n            var precise = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            var m1 = 1 / (p1.mass || 1);\n            var m2 = 1 / (p2.mass || 1);\n            var mm = m1 + m2;\n            var delta = p2.$subtract(p1);\n            var distSq = dist * dist;\n            var d = precise ? dist / delta.magnitude() - 1 : distSq / (delta.dot(delta) + distSq) - 0.5;\n            var f = delta.$multiply(d * stiff);\n            p1.subtract(f.$multiply(m1 / mm));\n            p2.add(f.$multiply(m2 / mm));\n            return p1;\n        }\n    }, {\n        key: \"boundConstraint\",\n        value: function boundConstraint(p, rect) {\n            var damping = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.75;\n\n            var bound = rect.boundingBox();\n            var np = p.$min(bound[1].subtract(p.radius)).$max(bound[0].add(p.radius));\n            if (np[0] === bound[0][0] || np[0] === bound[1][0]) {\n                var c = p.changed.$multiply(damping);\n                p.previous = np.$subtract(new Pt_1.Pt(-c[0], c[1]));\n            } else if (np[1] === bound[0][1] || np[1] === bound[1][1]) {\n                var _c = p.changed.$multiply(damping);\n                p.previous = np.$subtract(new Pt_1.Pt(_c[0], -_c[1]));\n            }\n            p.to(np);\n        }\n    }]);\n\n    return World;\n}();\n\nexports.World = World;\n\nvar Particle = function (_Pt_1$Pt) {\n    _inherits(Particle, _Pt_1$Pt);\n\n    function Particle() {\n        var _ref;\n\n        _classCallCheck(this, Particle);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Particle.__proto__ || Object.getPrototypeOf(Particle)).call.apply(_ref, [this].concat(args)));\n\n        _this._mass = 1;\n        _this._radius = 0;\n        _this._force = new Pt_1.Pt();\n        _this._prev = new Pt_1.Pt();\n        _this._lock = false;\n        _this._prev = _this.clone();\n        return _this;\n    }\n\n    _createClass(Particle, [{\n        key: \"size\",\n        value: function size(r) {\n            this._mass = r;\n            this._radius = r;\n            return this;\n        }\n    }, {\n        key: \"addForce\",\n        value: function addForce() {\n            var _force;\n\n            (_force = this._force).add.apply(_force, arguments);\n            return this._force;\n        }\n    }, {\n        key: \"verlet\",\n        value: function verlet(dt, friction, lastDt) {\n            if (this._lock) {\n                this.to(this._lockPt);\n            } else {\n                var lt = lastDt ? lastDt : dt;\n                var a = this._force.multiply(dt * (dt + lt) / 2);\n                var v = this.changed.multiply(friction * dt / lt).add(a);\n                this._prev = this.clone();\n                this.add(v);\n                this._force = new Pt_1.Pt();\n            }\n            return this;\n        }\n    }, {\n        key: \"hit\",\n        value: function hit() {\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n\n            this._prev.subtract(new (Function.prototype.bind.apply(Pt_1.Pt, [null].concat(args)))().$divide(Math.sqrt(this._mass)));\n            return this;\n        }\n    }, {\n        key: \"collide\",\n        value: function collide(p2) {\n            var damp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var p1 = this;\n            var dp = p1.$subtract(p2);\n            var distSq = dp.magnitudeSq();\n            var dr = p1.radius + p2.radius;\n            if (distSq < dr * dr) {\n                var c1 = p1.changed;\n                var c2 = p2.changed;\n                var dist = Math.sqrt(distSq);\n                var d = dp.$multiply((dist - dr) / dist / 2);\n                var np1 = p1.$subtract(d);\n                var np2 = p2.$add(d);\n                p1.to(np1);\n                p2.to(np2);\n                var f1 = damp * dp.dot(c1) / distSq;\n                var f2 = damp * dp.dot(c2) / distSq;\n                var dm1 = p1.mass / (p1.mass + p2.mass);\n                var dm2 = p2.mass / (p1.mass + p2.mass);\n                c1.add(new Pt_1.Pt(f2 * dp[0] - f1 * dp[0], f2 * dp[1] - f1 * dp[1]).$multiply(dm2));\n                c2.add(new Pt_1.Pt(f1 * dp[0] - f2 * dp[0], f1 * dp[1] - f2 * dp[1]).$multiply(dm1));\n                p1.previous = p1.$subtract(c1);\n                p2.previous = p2.$subtract(c2);\n            }\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            return \"Particle: \" + this[0] + \" \" + this[1] + \" | previous \" + this._prev[0] + \" \" + this._prev[1] + \" | mass \" + this._mass;\n        }\n    }, {\n        key: \"mass\",\n        get: function get() {\n            return this._mass;\n        },\n        set: function set(m) {\n            this._mass = m;\n        }\n    }, {\n        key: \"radius\",\n        get: function get() {\n            return this._radius;\n        },\n        set: function set(f) {\n            this._radius = f;\n        }\n    }, {\n        key: \"previous\",\n        get: function get() {\n            return this._prev;\n        },\n        set: function set(p) {\n            this._prev = p;\n        }\n    }, {\n        key: \"force\",\n        get: function get() {\n            return this._force;\n        },\n        set: function set(g) {\n            this._force = g;\n        }\n    }, {\n        key: \"body\",\n        get: function get() {\n            return this._body;\n        },\n        set: function set(b) {\n            this._body = b;\n        }\n    }, {\n        key: \"lock\",\n        get: function get() {\n            return this._lock;\n        },\n        set: function set(b) {\n            this._lock = b;\n            this._lockPt = new Pt_1.Pt(this);\n        }\n    }, {\n        key: \"changed\",\n        get: function get() {\n            return this.$subtract(this._prev);\n        }\n    }, {\n        key: \"position\",\n        set: function set(p) {\n            this.previous.to(this);\n            if (this._lock) this._lockPt = p;\n            this.to(p);\n        }\n    }]);\n\n    return Particle;\n}(Pt_1.Pt);\n\nexports.Particle = Particle;\n\nvar Body = function (_Pt_1$Group) {\n    _inherits(Body, _Pt_1$Group);\n\n    function Body() {\n        _classCallCheck(this, Body);\n\n        var _this2 = _possibleConstructorReturn(this, (Body.__proto__ || Object.getPrototypeOf(Body)).call(this));\n\n        _this2._cs = [];\n        _this2._stiff = 1;\n        _this2._locks = {};\n        _this2._mass = 1;\n        return _this2;\n    }\n\n    _createClass(Body, [{\n        key: \"init\",\n        value: function init(list) {\n            var stiff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var c = new Pt_1.Pt();\n            for (var i = 0, len = list.length; i < len; i++) {\n                var p = new Particle(list[i]);\n                p.body = this;\n                c.add(list[i]);\n                this.push(p);\n            }\n            this._stiff = stiff;\n            return this;\n        }\n    }, {\n        key: \"autoMass\",\n        value: function autoMass() {\n            this.mass = Math.sqrt(Op_1.Polygon.area(this)) / 10;\n            return this;\n        }\n    }, {\n        key: \"link\",\n        value: function link(index1, index2, stiff) {\n            if (index1 < 0 || index1 >= this.length) throw new Error(\"index1 is not in the Group's indices\");\n            if (index2 < 0 || index2 >= this.length) throw new Error(\"index1 is not in the Group's indices\");\n            var d = this[index1].$subtract(this[index2]).magnitude();\n            this._cs.push([index1, index2, d, stiff || this._stiff]);\n            return this;\n        }\n    }, {\n        key: \"linkAll\",\n        value: function linkAll(stiff) {\n            var half = this.length / 2;\n            for (var i = 0, len = this.length; i < len; i++) {\n                var n = i >= len - 1 ? 0 : i + 1;\n                this.link(i, n, stiff);\n                if (len > 4) {\n                    var nd = Math.floor(half / 2) + 1;\n                    var n2 = i >= len - nd ? i % len : i + nd;\n                    this.link(i, n2, stiff);\n                }\n                if (i <= half - 1) {\n                    this.link(i, Math.min(this.length - 1, i + Math.floor(half)));\n                }\n            }\n        }\n    }, {\n        key: \"linksToLines\",\n        value: function linksToLines() {\n            var gs = [];\n            for (var i = 0, len = this._cs.length; i < len; i++) {\n                var ln = this._cs[i];\n                gs.push(new Pt_1.Group(this[ln[0]], this[ln[1]]));\n            }\n            return gs;\n        }\n    }, {\n        key: \"processEdges\",\n        value: function processEdges() {\n            for (var i = 0, len = this._cs.length; i < len; i++) {\n                var _cs$i = _slicedToArray(this._cs[i], 4),\n                    m = _cs$i[0],\n                    n = _cs$i[1],\n                    d = _cs$i[2],\n                    s = _cs$i[3];\n\n                World.edgeConstraint(this[m], this[n], d, s);\n            }\n        }\n    }, {\n        key: \"processBody\",\n        value: function processBody(b) {\n            var b1 = this;\n            var b2 = b;\n            var hit = Op_1.Polygon.hasIntersectPolygon(b1, b2);\n            if (hit) {\n                var cv = hit.normal.$multiply(hit.dist);\n                var t = void 0;\n                var eg = hit.edge;\n                if (Math.abs(eg[0][0] - eg[1][0]) > Math.abs(eg[0][1] - eg[1][1])) {\n                    t = (hit.vertex[0] - cv[0] - eg[0][0]) / (eg[1][0] - eg[0][0]);\n                } else {\n                    t = (hit.vertex[1] - cv[1] - eg[0][1]) / (eg[1][1] - eg[0][1]);\n                }\n                var lambda = 1 / (t * t + (1 - t) * (1 - t));\n                var m0 = hit.vertex.body.mass || 1;\n                var m1 = hit.edge[0].body.mass || 1;\n                var mr0 = m0 / (m0 + m1);\n                var mr1 = m1 / (m0 + m1);\n                eg[0].subtract(cv.$multiply(mr0 * (1 - t) * lambda / 2));\n                eg[1].subtract(cv.$multiply(mr0 * t * lambda / 2));\n                hit.vertex.add(cv.$multiply(mr1));\n            }\n        }\n    }, {\n        key: \"processParticle\",\n        value: function processParticle(b) {\n            var b1 = this;\n            var b2 = b;\n            var hit = Op_1.Polygon.hasIntersectCircle(b1, Op_1.Circle.fromCenter(b, b.radius));\n            if (hit) {\n                var cv = hit.normal.$multiply(hit.dist);\n                var t = void 0;\n                var eg = hit.edge;\n                if (Math.abs(eg[0][0] - eg[1][0]) > Math.abs(eg[0][1] - eg[1][1])) {\n                    t = (hit.vertex[0] - cv[0] - eg[0][0]) / (eg[1][0] - eg[0][0]);\n                } else {\n                    t = (hit.vertex[1] - cv[1] - eg[0][1]) / (eg[1][1] - eg[0][1]);\n                }\n                var lambda = 1 / (t * t + (1 - t) * (1 - t));\n                var m0 = hit.vertex.mass || b2.mass || 1;\n                var m1 = hit.edge[0].body.mass || 1;\n                var mr0 = m0 / (m0 + m1);\n                var mr1 = m1 / (m0 + m1);\n                eg[0].subtract(cv.$multiply(mr0 * (1 - t) * lambda / 2));\n                eg[1].subtract(cv.$multiply(mr0 * t * lambda / 2));\n                var c1 = b.changed.add(cv.$multiply(mr1));\n                b.previous = b.$subtract(c1);\n            }\n        }\n    }, {\n        key: \"mass\",\n        get: function get() {\n            return this._mass;\n        },\n        set: function set(m) {\n            this._mass = m;\n            for (var i = 0, len = this.length; i < len; i++) {\n                this[i].mass = this._mass;\n            }\n        }\n    }], [{\n        key: \"fromGroup\",\n        value: function fromGroup(list) {\n            var stiff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var autoLink = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n            var autoMass = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            var b = new Body().init(list);\n            if (autoLink) b.linkAll(stiff);\n            if (autoMass) b.autoMass();\n            return b;\n        }\n    }]);\n\n    return Body;\n}(Pt_1.Group);\n\nexports.Body = Body;\n\n/***/ }),\n\n/***/ \"./src/Pt.ts\":\n/*!*******************!*\\\n  !*** ./src/Pt.ts ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _extendableBuiltin3(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nvar Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nvar LinearAlgebra_1 = __webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\");\n\nvar Pt = function (_extendableBuiltin2) {\n    _inherits(Pt, _extendableBuiltin2);\n\n    function Pt() {\n        _classCallCheck(this, Pt);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        if (args.length === 1 && typeof args[0] == \"number\") {\n            var _this = _possibleConstructorReturn(this, (Pt.__proto__ || Object.getPrototypeOf(Pt)).call(this, args[0]));\n        } else {\n            var _this = _possibleConstructorReturn(this, (Pt.__proto__ || Object.getPrototypeOf(Pt)).call(this, args.length > 0 ? Util_1.Util.getArgs(args) : [0, 0]));\n        }\n        return _possibleConstructorReturn(_this);\n    }\n\n    _createClass(Pt, [{\n        key: \"clone\",\n        value: function clone() {\n            return new Pt(this);\n        }\n    }, {\n        key: \"equals\",\n        value: function equals(p) {\n            var threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.000001;\n\n            for (var i = 0, len = this.length; i < len; i++) {\n                if (Math.abs(this[i] - p[i]) > threshold) return false;\n            }\n            return true;\n        }\n    }, {\n        key: \"to\",\n        value: function to() {\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n\n            var p = Util_1.Util.getArgs(args);\n            for (var i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n                this[i] = p[i];\n            }\n            return this;\n        }\n    }, {\n        key: \"$to\",\n        value: function $to() {\n            var _clone;\n\n            return (_clone = this.clone()).to.apply(_clone, arguments);\n        }\n    }, {\n        key: \"toAngle\",\n        value: function toAngle(radian, magnitude) {\n            var anchorFromPt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var m = magnitude != undefined ? magnitude : this.magnitude();\n            var change = [Math.cos(radian) * m, Math.sin(radian) * m];\n            return anchorFromPt ? this.add(change) : this.to(change);\n        }\n    }, {\n        key: \"op\",\n        value: function op(fn) {\n            var self = this;\n            return function () {\n                for (var _len3 = arguments.length, params = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                    params[_key3] = arguments[_key3];\n                }\n\n                return fn.apply(undefined, [self].concat(params));\n            };\n        }\n    }, {\n        key: \"ops\",\n        value: function ops(fns) {\n            var _ops = [];\n            for (var i = 0, len = fns.length; i < len; i++) {\n                _ops.push(this.op(fns[i]));\n            }\n            return _ops;\n        }\n    }, {\n        key: \"$take\",\n        value: function $take(axis) {\n            var p = [];\n            for (var i = 0, len = axis.length; i < len; i++) {\n                p.push(this[axis[i]] || 0);\n            }\n            return new Pt(p);\n        }\n    }, {\n        key: \"$concat\",\n        value: function $concat() {\n            for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n            }\n\n            return new Pt(this.toArray().concat(Util_1.Util.getArgs(args)));\n        }\n    }, {\n        key: \"add\",\n        value: function add() {\n            for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n                args[_key5] = arguments[_key5];\n            }\n\n            args.length === 1 && typeof args[0] == \"number\" ? LinearAlgebra_1.Vec.add(this, args[0]) : LinearAlgebra_1.Vec.add(this, Util_1.Util.getArgs(args));\n            return this;\n        }\n    }, {\n        key: \"$add\",\n        value: function $add() {\n            var _clone2;\n\n            return (_clone2 = this.clone()).add.apply(_clone2, arguments);\n        }\n    }, {\n        key: \"subtract\",\n        value: function subtract() {\n            for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n                args[_key6] = arguments[_key6];\n            }\n\n            args.length === 1 && typeof args[0] == \"number\" ? LinearAlgebra_1.Vec.subtract(this, args[0]) : LinearAlgebra_1.Vec.subtract(this, Util_1.Util.getArgs(args));\n            return this;\n        }\n    }, {\n        key: \"$subtract\",\n        value: function $subtract() {\n            var _clone3;\n\n            return (_clone3 = this.clone()).subtract.apply(_clone3, arguments);\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply() {\n            for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n                args[_key7] = arguments[_key7];\n            }\n\n            args.length === 1 && typeof args[0] == \"number\" ? LinearAlgebra_1.Vec.multiply(this, args[0]) : LinearAlgebra_1.Vec.multiply(this, Util_1.Util.getArgs(args));\n            return this;\n        }\n    }, {\n        key: \"$multiply\",\n        value: function $multiply() {\n            var _clone4;\n\n            return (_clone4 = this.clone()).multiply.apply(_clone4, arguments);\n        }\n    }, {\n        key: \"divide\",\n        value: function divide() {\n            for (var _len8 = arguments.length, args = Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n                args[_key8] = arguments[_key8];\n            }\n\n            args.length === 1 && typeof args[0] == \"number\" ? LinearAlgebra_1.Vec.divide(this, args[0]) : LinearAlgebra_1.Vec.divide(this, Util_1.Util.getArgs(args));\n            return this;\n        }\n    }, {\n        key: \"$divide\",\n        value: function $divide() {\n            var _clone5;\n\n            return (_clone5 = this.clone()).divide.apply(_clone5, arguments);\n        }\n    }, {\n        key: \"magnitudeSq\",\n        value: function magnitudeSq() {\n            return LinearAlgebra_1.Vec.dot(this, this);\n        }\n    }, {\n        key: \"magnitude\",\n        value: function magnitude() {\n            return LinearAlgebra_1.Vec.magnitude(this);\n        }\n    }, {\n        key: \"unit\",\n        value: function unit() {\n            var magnitude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n            LinearAlgebra_1.Vec.unit(this, magnitude);\n            return this;\n        }\n    }, {\n        key: \"$unit\",\n        value: function $unit() {\n            var magnitude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n            return this.clone().unit(magnitude);\n        }\n    }, {\n        key: \"dot\",\n        value: function dot() {\n            for (var _len9 = arguments.length, args = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n                args[_key9] = arguments[_key9];\n            }\n\n            return LinearAlgebra_1.Vec.dot(this, Util_1.Util.getArgs(args));\n        }\n    }, {\n        key: \"$cross2D\",\n        value: function $cross2D() {\n            for (var _len10 = arguments.length, args = Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n                args[_key10] = arguments[_key10];\n            }\n\n            return LinearAlgebra_1.Vec.cross2D(this, Util_1.Util.getArgs(args));\n        }\n    }, {\n        key: \"$cross\",\n        value: function $cross() {\n            for (var _len11 = arguments.length, args = Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n                args[_key11] = arguments[_key11];\n            }\n\n            return LinearAlgebra_1.Vec.cross(this, Util_1.Util.getArgs(args));\n        }\n    }, {\n        key: \"$project\",\n        value: function $project() {\n            return this.$multiply(this.dot.apply(this, arguments) / this.magnitudeSq());\n        }\n    }, {\n        key: \"projectScalar\",\n        value: function projectScalar() {\n            return this.dot.apply(this, arguments) / this.magnitude();\n        }\n    }, {\n        key: \"abs\",\n        value: function abs() {\n            LinearAlgebra_1.Vec.abs(this);\n            return this;\n        }\n    }, {\n        key: \"$abs\",\n        value: function $abs() {\n            return this.clone().abs();\n        }\n    }, {\n        key: \"floor\",\n        value: function floor() {\n            LinearAlgebra_1.Vec.floor(this);\n            return this;\n        }\n    }, {\n        key: \"$floor\",\n        value: function $floor() {\n            return this.clone().floor();\n        }\n    }, {\n        key: \"ceil\",\n        value: function ceil() {\n            LinearAlgebra_1.Vec.ceil(this);\n            return this;\n        }\n    }, {\n        key: \"$ceil\",\n        value: function $ceil() {\n            return this.clone().ceil();\n        }\n    }, {\n        key: \"round\",\n        value: function round() {\n            LinearAlgebra_1.Vec.round(this);\n            return this;\n        }\n    }, {\n        key: \"$round\",\n        value: function $round() {\n            return this.clone().round();\n        }\n    }, {\n        key: \"minValue\",\n        value: function minValue() {\n            return LinearAlgebra_1.Vec.min(this);\n        }\n    }, {\n        key: \"maxValue\",\n        value: function maxValue() {\n            return LinearAlgebra_1.Vec.max(this);\n        }\n    }, {\n        key: \"$min\",\n        value: function $min() {\n            for (var _len12 = arguments.length, args = Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n                args[_key12] = arguments[_key12];\n            }\n\n            var p = Util_1.Util.getArgs(args);\n            var m = this.clone();\n            for (var i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n                m[i] = Math.min(this[i], p[i]);\n            }\n            return m;\n        }\n    }, {\n        key: \"$max\",\n        value: function $max() {\n            for (var _len13 = arguments.length, args = Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n                args[_key13] = arguments[_key13];\n            }\n\n            var p = Util_1.Util.getArgs(args);\n            var m = this.clone();\n            for (var i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n                m[i] = Math.max(this[i], p[i]);\n            }\n            return m;\n        }\n    }, {\n        key: \"angle\",\n        value: function angle() {\n            var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Util_1.Const.xy;\n\n            return Math.atan2(this[axis[1]], this[axis[0]]);\n        }\n    }, {\n        key: \"angleBetween\",\n        value: function angleBetween(p) {\n            var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Util_1.Const.xy;\n\n            return Num_1.Geom.boundRadian(this.angle(axis)) - Num_1.Geom.boundRadian(p.angle(axis));\n        }\n    }, {\n        key: \"scale\",\n        value: function scale(_scale, anchor) {\n            Num_1.Geom.scale(this, _scale, anchor || Pt.make(this.length, 0));\n            return this;\n        }\n    }, {\n        key: \"rotate2D\",\n        value: function rotate2D(angle, anchor, axis) {\n            Num_1.Geom.rotate2D(this, angle, anchor || Pt.make(this.length, 0), axis);\n            return this;\n        }\n    }, {\n        key: \"shear2D\",\n        value: function shear2D(scale, anchor, axis) {\n            Num_1.Geom.shear2D(this, scale, anchor || Pt.make(this.length, 0), axis);\n            return this;\n        }\n    }, {\n        key: \"reflect2D\",\n        value: function reflect2D(line, axis) {\n            Num_1.Geom.reflect2D(this, line, axis);\n            return this;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            return \"Pt(\" + this.join(\", \") + \")\";\n        }\n    }, {\n        key: \"toArray\",\n        value: function toArray() {\n            return [].slice.call(this);\n        }\n    }, {\n        key: \"id\",\n        get: function get() {\n            return this._id;\n        },\n        set: function set(s) {\n            this._id = s;\n        }\n    }, {\n        key: \"x\",\n        get: function get() {\n            return this[0];\n        },\n        set: function set(n) {\n            this[0] = n;\n        }\n    }, {\n        key: \"y\",\n        get: function get() {\n            return this[1];\n        },\n        set: function set(n) {\n            this[1] = n;\n        }\n    }, {\n        key: \"z\",\n        get: function get() {\n            return this[2];\n        },\n        set: function set(n) {\n            this[2] = n;\n        }\n    }, {\n        key: \"w\",\n        get: function get() {\n            return this[3];\n        },\n        set: function set(n) {\n            this[3] = n;\n        }\n    }], [{\n        key: \"make\",\n        value: function make(dimensions) {\n            var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var randomize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var p = new Float32Array(dimensions);\n            if (defaultValue) p.fill(defaultValue);\n            if (randomize) {\n                for (var i = 0, len = p.length; i < len; i++) {\n                    p[i] = p[i] * Math.random();\n                }\n            }\n            return new Pt(p);\n        }\n    }]);\n\n    return Pt;\n}(_extendableBuiltin(Float32Array));\n\nexports.Pt = Pt;\n\nvar Group = function (_extendableBuiltin4) {\n    _inherits(Group, _extendableBuiltin4);\n\n    function Group() {\n        var _ref;\n\n        _classCallCheck(this, Group);\n\n        for (var _len14 = arguments.length, args = Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n            args[_key14] = arguments[_key14];\n        }\n\n        return _possibleConstructorReturn(this, (_ref = Group.__proto__ || Object.getPrototypeOf(Group)).call.apply(_ref, [this].concat(args)));\n    }\n\n    _createClass(Group, [{\n        key: \"clone\",\n        value: function clone() {\n            var group = new Group();\n            for (var i = 0, len = this.length; i < len; i++) {\n                group.push(this[i].clone());\n            }\n            return group;\n        }\n    }, {\n        key: \"split\",\n        value: function split(chunkSize, stride) {\n            var loopBack = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var sp = Util_1.Util.split(this, chunkSize, stride, loopBack);\n            return sp;\n        }\n    }, {\n        key: \"insert\",\n        value: function insert(pts) {\n            var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            Group.prototype.splice.apply(this, [index, 0].concat(_toConsumableArray(pts)));\n            return this;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove() {\n            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var param = index < 0 ? [index * -1 - 1, count] : [index, count];\n            return Group.prototype.splice.apply(this, param);\n        }\n    }, {\n        key: \"segments\",\n        value: function segments() {\n            var pts_per_segment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n            var stride = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var loopBack = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            return this.split(pts_per_segment, stride, loopBack);\n        }\n    }, {\n        key: \"lines\",\n        value: function lines() {\n            return this.segments(2, 1);\n        }\n    }, {\n        key: \"centroid\",\n        value: function centroid() {\n            return Num_1.Geom.centroid(this);\n        }\n    }, {\n        key: \"boundingBox\",\n        value: function boundingBox() {\n            return Num_1.Geom.boundingBox(this);\n        }\n    }, {\n        key: \"anchorTo\",\n        value: function anchorTo() {\n            var ptOrIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            Num_1.Geom.anchor(this, ptOrIndex, \"to\");\n        }\n    }, {\n        key: \"anchorFrom\",\n        value: function anchorFrom() {\n            var ptOrIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            Num_1.Geom.anchor(this, ptOrIndex, \"from\");\n        }\n    }, {\n        key: \"op\",\n        value: function op(fn) {\n            var self = this;\n            return function () {\n                for (var _len15 = arguments.length, params = Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n                    params[_key15] = arguments[_key15];\n                }\n\n                return fn.apply(undefined, [self].concat(params));\n            };\n        }\n    }, {\n        key: \"ops\",\n        value: function ops(fns) {\n            var _ops = [];\n            for (var i = 0, len = fns.length; i < len; i++) {\n                _ops.push(this.op(fns[i]));\n            }\n            return _ops;\n        }\n    }, {\n        key: \"interpolate\",\n        value: function interpolate(t) {\n            t = Num_1.Num.clamp(t, 0, 1);\n            var chunk = this.length - 1;\n            var tc = 1 / (this.length - 1);\n            var idx = Math.floor(t / tc);\n            return Num_1.Geom.interpolate(this[idx], this[Math.min(this.length - 1, idx + 1)], (t - idx * tc) * chunk);\n        }\n    }, {\n        key: \"moveBy\",\n        value: function moveBy() {\n            return this.add.apply(this, arguments);\n        }\n    }, {\n        key: \"moveTo\",\n        value: function moveTo() {\n            for (var _len16 = arguments.length, args = Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n                args[_key16] = arguments[_key16];\n            }\n\n            var d = new Pt(Util_1.Util.getArgs(args)).subtract(this[0]);\n            this.moveBy(d);\n            return this;\n        }\n    }, {\n        key: \"scale\",\n        value: function scale(_scale2, anchor) {\n            for (var i = 0, len = this.length; i < len; i++) {\n                Num_1.Geom.scale(this[i], _scale2, anchor || this[0]);\n            }\n            return this;\n        }\n    }, {\n        key: \"rotate2D\",\n        value: function rotate2D(angle, anchor, axis) {\n            for (var i = 0, len = this.length; i < len; i++) {\n                Num_1.Geom.rotate2D(this[i], angle, anchor || this[0], axis);\n            }\n            return this;\n        }\n    }, {\n        key: \"shear2D\",\n        value: function shear2D(scale, anchor, axis) {\n            for (var i = 0, len = this.length; i < len; i++) {\n                Num_1.Geom.shear2D(this[i], scale, anchor || this[0], axis);\n            }\n            return this;\n        }\n    }, {\n        key: \"reflect2D\",\n        value: function reflect2D(line, axis) {\n            for (var i = 0, len = this.length; i < len; i++) {\n                Num_1.Geom.reflect2D(this[i], line, axis);\n            }\n            return this;\n        }\n    }, {\n        key: \"sortByDimension\",\n        value: function sortByDimension(dim) {\n            var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            return this.sort(function (a, b) {\n                return desc ? b[dim] - a[dim] : a[dim] - b[dim];\n            });\n        }\n    }, {\n        key: \"forEachPt\",\n        value: function forEachPt(ptFn) {\n            if (!this[0][ptFn]) {\n                Util_1.Util.warn(ptFn + \" is not a function of Pt\");\n                return this;\n            }\n\n            for (var _len17 = arguments.length, args = Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {\n                args[_key17 - 1] = arguments[_key17];\n            }\n\n            for (var i = 0, len = this.length; i < len; i++) {\n                var _i;\n\n                this[i] = (_i = this[i])[ptFn].apply(_i, args);\n            }\n            return this;\n        }\n    }, {\n        key: \"add\",\n        value: function add() {\n            for (var _len18 = arguments.length, args = Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n                args[_key18] = arguments[_key18];\n            }\n\n            return this.forEachPt.apply(this, [\"add\"].concat(args));\n        }\n    }, {\n        key: \"subtract\",\n        value: function subtract() {\n            for (var _len19 = arguments.length, args = Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n                args[_key19] = arguments[_key19];\n            }\n\n            return this.forEachPt.apply(this, [\"subtract\"].concat(args));\n        }\n    }, {\n        key: \"multiply\",\n        value: function multiply() {\n            for (var _len20 = arguments.length, args = Array(_len20), _key20 = 0; _key20 < _len20; _key20++) {\n                args[_key20] = arguments[_key20];\n            }\n\n            return this.forEachPt.apply(this, [\"multiply\"].concat(args));\n        }\n    }, {\n        key: \"divide\",\n        value: function divide() {\n            for (var _len21 = arguments.length, args = Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {\n                args[_key21] = arguments[_key21];\n            }\n\n            return this.forEachPt.apply(this, [\"divide\"].concat(args));\n        }\n    }, {\n        key: \"$matrixAdd\",\n        value: function $matrixAdd(g) {\n            return LinearAlgebra_1.Mat.add(this, g);\n        }\n    }, {\n        key: \"$matrixMultiply\",\n        value: function $matrixMultiply(g) {\n            var transposed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var elementwise = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            return LinearAlgebra_1.Mat.multiply(this, g, transposed, elementwise);\n        }\n    }, {\n        key: \"zipSlice\",\n        value: function zipSlice(index) {\n            var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            return LinearAlgebra_1.Mat.zipSlice(this, index, defaultValue);\n        }\n    }, {\n        key: \"$zip\",\n        value: function $zip() {\n            var defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n            var useLongest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            return LinearAlgebra_1.Mat.zip(this, defaultValue, useLongest);\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            return \"Group[ \" + this.reduce(function (p, c) {\n                return p + c.toString() + \" \";\n            }, \"\") + \" ]\";\n        }\n    }, {\n        key: \"id\",\n        get: function get() {\n            return this._id;\n        },\n        set: function set(s) {\n            this._id = s;\n        }\n    }, {\n        key: \"p1\",\n        get: function get() {\n            return this[0];\n        }\n    }, {\n        key: \"p2\",\n        get: function get() {\n            return this[1];\n        }\n    }, {\n        key: \"p3\",\n        get: function get() {\n            return this[2];\n        }\n    }, {\n        key: \"p4\",\n        get: function get() {\n            return this[3];\n        }\n    }, {\n        key: \"q1\",\n        get: function get() {\n            return this[this.length - 1];\n        }\n    }, {\n        key: \"q2\",\n        get: function get() {\n            return this[this.length - 2];\n        }\n    }, {\n        key: \"q3\",\n        get: function get() {\n            return this[this.length - 3];\n        }\n    }, {\n        key: \"q4\",\n        get: function get() {\n            return this[this.length - 4];\n        }\n    }], [{\n        key: \"fromArray\",\n        value: function fromArray(list) {\n            var g = new Group();\n            for (var i = 0, len = list.length; i < len; i++) {\n                var p = list[i] instanceof Pt ? list[i] : new Pt(list[i]);\n                g.push(p);\n            }\n            return g;\n        }\n    }, {\n        key: \"fromPtArray\",\n        value: function fromPtArray(list) {\n            return Group.from(list);\n        }\n    }]);\n\n    return Group;\n}(_extendableBuiltin3(Array));\n\nexports.Group = Group;\n\nvar Bound = function (_Group) {\n    _inherits(Bound, _Group);\n\n    function Bound() {\n        var _ref2;\n\n        _classCallCheck(this, Bound);\n\n        for (var _len22 = arguments.length, args = Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {\n            args[_key22] = arguments[_key22];\n        }\n\n        var _this3 = _possibleConstructorReturn(this, (_ref2 = Bound.__proto__ || Object.getPrototypeOf(Bound)).call.apply(_ref2, [this].concat(args)));\n\n        _this3._center = new Pt();\n        _this3._size = new Pt();\n        _this3._topLeft = new Pt();\n        _this3._bottomRight = new Pt();\n        _this3._inited = false;\n        _this3.init();\n        return _this3;\n    }\n\n    _createClass(Bound, [{\n        key: \"init\",\n        value: function init() {\n            if (this.p1) {\n                this._size = this.p1.clone();\n                this._inited = true;\n            }\n            if (this.p1 && this.p2) {\n                var a = this.p1;\n                var b = this.p2;\n                this.topLeft = a.$min(b);\n                this._bottomRight = a.$max(b);\n                this._updateSize();\n                this._inited = true;\n            }\n        }\n    }, {\n        key: \"clone\",\n        value: function clone() {\n            return new Bound(this._topLeft.clone(), this._bottomRight.clone());\n        }\n    }, {\n        key: \"_updateSize\",\n        value: function _updateSize() {\n            this._size = this._bottomRight.$subtract(this._topLeft).abs();\n            this._updateCenter();\n        }\n    }, {\n        key: \"_updateCenter\",\n        value: function _updateCenter() {\n            this._center = this._size.$multiply(0.5).add(this._topLeft);\n        }\n    }, {\n        key: \"_updatePosFromTop\",\n        value: function _updatePosFromTop() {\n            this._bottomRight = this._topLeft.$add(this._size);\n            this._updateCenter();\n        }\n    }, {\n        key: \"_updatePosFromBottom\",\n        value: function _updatePosFromBottom() {\n            this._topLeft = this._bottomRight.$subtract(this._size);\n            this._updateCenter();\n        }\n    }, {\n        key: \"_updatePosFromCenter\",\n        value: function _updatePosFromCenter() {\n            var half = this._size.$multiply(0.5);\n            this._topLeft = this._center.$subtract(half);\n            this._bottomRight = this._center.$add(half);\n        }\n    }, {\n        key: \"update\",\n        value: function update() {\n            this._topLeft = this[0];\n            this._bottomRight = this[1];\n            this._updateSize();\n            return this;\n        }\n    }, {\n        key: \"size\",\n        get: function get() {\n            return new Pt(this._size);\n        },\n        set: function set(p) {\n            this._size = new Pt(p);\n            this._updatePosFromTop();\n        }\n    }, {\n        key: \"center\",\n        get: function get() {\n            return new Pt(this._center);\n        },\n        set: function set(p) {\n            this._center = new Pt(p);\n            this._updatePosFromCenter();\n        }\n    }, {\n        key: \"topLeft\",\n        get: function get() {\n            return new Pt(this._topLeft);\n        },\n        set: function set(p) {\n            this._topLeft = new Pt(p);\n            this[0] = this._topLeft;\n            this._updateSize();\n        }\n    }, {\n        key: \"bottomRight\",\n        get: function get() {\n            return new Pt(this._bottomRight);\n        },\n        set: function set(p) {\n            this._bottomRight = new Pt(p);\n            this[1] = this._bottomRight;\n            this._updateSize();\n        }\n    }, {\n        key: \"width\",\n        get: function get() {\n            return this._size.length > 0 ? this._size.x : 0;\n        },\n        set: function set(w) {\n            this._size.x = w;\n            this._updatePosFromTop();\n        }\n    }, {\n        key: \"height\",\n        get: function get() {\n            return this._size.length > 1 ? this._size.y : 0;\n        },\n        set: function set(h) {\n            this._size.y = h;\n            this._updatePosFromTop();\n        }\n    }, {\n        key: \"depth\",\n        get: function get() {\n            return this._size.length > 2 ? this._size.z : 0;\n        },\n        set: function set(d) {\n            this._size.z = d;\n            this._updatePosFromTop();\n        }\n    }, {\n        key: \"x\",\n        get: function get() {\n            return this.topLeft.x;\n        }\n    }, {\n        key: \"y\",\n        get: function get() {\n            return this.topLeft.y;\n        }\n    }, {\n        key: \"z\",\n        get: function get() {\n            return this.topLeft.z;\n        }\n    }, {\n        key: \"inited\",\n        get: function get() {\n            return this._inited;\n        }\n    }], [{\n        key: \"fromBoundingRect\",\n        value: function fromBoundingRect(rect) {\n            var b = new Bound(new Pt(rect.left || 0, rect.top || 0), new Pt(rect.right || 0, rect.bottom || 0));\n            if (rect.width && rect.height) b.size = new Pt(rect.width, rect.height);\n            return b;\n        }\n    }, {\n        key: \"fromGroup\",\n        value: function fromGroup(g) {\n            if (g.length < 2) throw new Error(\"Cannot create a Bound from a group that has less than 2 Pt\");\n            return new Bound(g[0], g[g.length - 1]);\n        }\n    }]);\n\n    return Bound;\n}(Group);\n\nexports.Bound = Bound;\n\n/***/ }),\n\n/***/ \"./src/Space.ts\":\n/*!**********************!*\\\n  !*** ./src/Space.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nvar UI_1 = __webpack_require__(/*! ./UI */ \"./src/UI.ts\");\n\nvar Space = function () {\n    function Space() {\n        _classCallCheck(this, Space);\n\n        this.id = \"space\";\n        this.bound = new Pt_1.Bound();\n        this._time = { prev: 0, diff: 0, end: -1 };\n        this.players = {};\n        this.playerCount = 0;\n        this._animID = -1;\n        this._pause = false;\n        this._refresh = undefined;\n        this._pointer = new Pt_1.Pt();\n        this._isReady = false;\n        this._playing = false;\n    }\n\n    _createClass(Space, [{\n        key: \"refresh\",\n        value: function refresh(b) {\n            this._refresh = b;\n            return this;\n        }\n    }, {\n        key: \"add\",\n        value: function add(p) {\n            var player = typeof p == \"function\" ? { animate: p } : p;\n            var k = this.playerCount++;\n            var pid = this.id + k;\n            this.players[pid] = player;\n            player.animateID = pid;\n            if (player.resize && this.bound.inited) player.resize(this.bound);\n            if (this._refresh === undefined) this._refresh = true;\n            return this;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(player) {\n            delete this.players[player.animateID];\n            return this;\n        }\n    }, {\n        key: \"removeAll\",\n        value: function removeAll() {\n            this.players = {};\n            return this;\n        }\n    }, {\n        key: \"play\",\n        value: function play() {\n            var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n            this._animID = requestAnimationFrame(this.play.bind(this));\n            if (this._pause) return this;\n            this._time.diff = time - this._time.prev;\n            this._time.prev = time;\n            try {\n                this.playItems(time);\n            } catch (err) {\n                cancelAnimationFrame(this._animID);\n                this._playing = false;\n                throw err;\n            }\n            return this;\n        }\n    }, {\n        key: \"replay\",\n        value: function replay() {\n            this._time.end = -1;\n            this.play();\n        }\n    }, {\n        key: \"playItems\",\n        value: function playItems(time) {\n            this._playing = true;\n            if (this._refresh) this.clear();\n            if (this._isReady) {\n                for (var k in this.players) {\n                    if (this.players[k].animate) this.players[k].animate(time, this._time.diff, this);\n                }\n            }\n            if (this._time.end >= 0 && time > this._time.end) {\n                cancelAnimationFrame(this._animID);\n                this._playing = false;\n            }\n        }\n    }, {\n        key: \"pause\",\n        value: function pause() {\n            var toggle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            this._pause = toggle ? !this._pause : true;\n            return this;\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            this._pause = false;\n            return this;\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n            this._time.end = t;\n            return this;\n        }\n    }, {\n        key: \"playOnce\",\n        value: function playOnce() {\n            var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5000;\n\n            this.play();\n            this.stop(duration);\n            return this;\n        }\n    }, {\n        key: \"render\",\n        value: function render(context) {\n            if (this._renderFunc) this._renderFunc(context, this);\n            return this;\n        }\n    }, {\n        key: \"customRendering\",\n        set: function set(f) {\n            this._renderFunc = f;\n        },\n        get: function get() {\n            return this._renderFunc;\n        }\n    }, {\n        key: \"isPlaying\",\n        get: function get() {\n            return this._playing;\n        }\n    }, {\n        key: \"outerBound\",\n        get: function get() {\n            return this.bound.clone();\n        }\n    }, {\n        key: \"innerBound\",\n        get: function get() {\n            return new Pt_1.Bound(Pt_1.Pt.make(this.size.length, 0), this.size.clone());\n        }\n    }, {\n        key: \"size\",\n        get: function get() {\n            return this.bound.size.clone();\n        }\n    }, {\n        key: \"center\",\n        get: function get() {\n            return this.size.divide(2);\n        }\n    }, {\n        key: \"width\",\n        get: function get() {\n            return this.bound.width;\n        }\n    }, {\n        key: \"height\",\n        get: function get() {\n            return this.bound.height;\n        }\n    }]);\n\n    return Space;\n}();\n\nexports.Space = Space;\n\nvar MultiTouchSpace = function (_Space) {\n    _inherits(MultiTouchSpace, _Space);\n\n    function MultiTouchSpace() {\n        _classCallCheck(this, MultiTouchSpace);\n\n        var _this = _possibleConstructorReturn(this, (MultiTouchSpace.__proto__ || Object.getPrototypeOf(MultiTouchSpace)).apply(this, arguments));\n\n        _this._pressed = false;\n        _this._dragged = false;\n        _this._hasMouse = false;\n        _this._hasTouch = false;\n        return _this;\n    }\n\n    _createClass(MultiTouchSpace, [{\n        key: \"bindCanvas\",\n        value: function bindCanvas(evt, callback) {\n            this._canvas.addEventListener(evt, callback);\n        }\n    }, {\n        key: \"unbindCanvas\",\n        value: function unbindCanvas(evt, callback) {\n            this._canvas.removeEventListener(evt, callback);\n        }\n    }, {\n        key: \"bindMouse\",\n        value: function bindMouse() {\n            var _bind = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            if (_bind) {\n                this.bindCanvas(\"mousedown\", this._mouseDown.bind(this));\n                this.bindCanvas(\"mouseup\", this._mouseUp.bind(this));\n                this.bindCanvas(\"mouseover\", this._mouseOver.bind(this));\n                this.bindCanvas(\"mouseout\", this._mouseOut.bind(this));\n                this.bindCanvas(\"mousemove\", this._mouseMove.bind(this));\n                this._hasMouse = true;\n            } else {\n                this.unbindCanvas(\"mousedown\", this._mouseDown.bind(this));\n                this.unbindCanvas(\"mouseup\", this._mouseUp.bind(this));\n                this.unbindCanvas(\"mouseover\", this._mouseOver.bind(this));\n                this.unbindCanvas(\"mouseout\", this._mouseOut.bind(this));\n                this.unbindCanvas(\"mousemove\", this._mouseMove.bind(this));\n                this._hasMouse = false;\n            }\n            return this;\n        }\n    }, {\n        key: \"bindTouch\",\n        value: function bindTouch() {\n            var _bind = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            if (_bind) {\n                this.bindCanvas(\"touchstart\", this._mouseDown.bind(this));\n                this.bindCanvas(\"touchend\", this._mouseUp.bind(this));\n                this.bindCanvas(\"touchmove\", this._touchMove.bind(this));\n                this.bindCanvas(\"touchcancel\", this._mouseOut.bind(this));\n                this._hasTouch = true;\n            } else {\n                this.unbindCanvas(\"touchstart\", this._mouseDown.bind(this));\n                this.unbindCanvas(\"touchend\", this._mouseUp.bind(this));\n                this.unbindCanvas(\"touchmove\", this._touchMove.bind(this));\n                this.unbindCanvas(\"touchcancel\", this._mouseOut.bind(this));\n                this._hasTouch = false;\n            }\n            return this;\n        }\n    }, {\n        key: \"touchesToPoints\",\n        value: function touchesToPoints(evt) {\n            var which = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"touches\";\n\n            if (!evt || !evt[which]) return [];\n            var ts = [];\n            for (var i = 0; i < evt[which].length; i++) {\n                var t = evt[which].item(i);\n                ts.push(new Pt_1.Pt(t.pageX - this.bound.topLeft.x, t.pageY - this.bound.topLeft.y));\n            }\n            return ts;\n        }\n    }, {\n        key: \"_mouseAction\",\n        value: function _mouseAction(type, evt) {\n            var px = 0,\n                py = 0;\n            if (evt instanceof MouseEvent) {\n                for (var k in this.players) {\n                    if (this.players.hasOwnProperty(k)) {\n                        var v = this.players[k];\n                        px = evt.pageX - this.outerBound.x;\n                        py = evt.pageY - this.outerBound.y;\n                        if (v.action) v.action(type, px, py, evt);\n                    }\n                }\n            } else {\n                for (var _k in this.players) {\n                    if (this.players.hasOwnProperty(_k)) {\n                        var _v = this.players[_k];\n                        var c = evt.changedTouches && evt.changedTouches.length > 0;\n                        var touch = evt.changedTouches.item(0);\n                        px = c ? touch.pageX - this.outerBound.x : 0;\n                        py = c ? touch.pageY - this.outerBound.y : 0;\n                        if (_v.action) _v.action(type, px, py, evt);\n                    }\n                }\n            }\n            if (type) {\n                this._pointer.to(px, py);\n                this._pointer.id = type;\n            }\n        }\n    }, {\n        key: \"_mouseDown\",\n        value: function _mouseDown(evt) {\n            this._mouseAction(UI_1.UIPointerActions.down, evt);\n            this._pressed = true;\n            return false;\n        }\n    }, {\n        key: \"_mouseUp\",\n        value: function _mouseUp(evt) {\n            this._mouseAction(UI_1.UIPointerActions.up, evt);\n            if (this._dragged) this._mouseAction(UI_1.UIPointerActions.drop, evt);\n            this._pressed = false;\n            this._dragged = false;\n            return false;\n        }\n    }, {\n        key: \"_mouseMove\",\n        value: function _mouseMove(evt) {\n            this._mouseAction(UI_1.UIPointerActions.move, evt);\n            if (this._pressed) {\n                this._dragged = true;\n                this._mouseAction(UI_1.UIPointerActions.drag, evt);\n            }\n            return false;\n        }\n    }, {\n        key: \"_mouseOver\",\n        value: function _mouseOver(evt) {\n            this._mouseAction(UI_1.UIPointerActions.over, evt);\n            return false;\n        }\n    }, {\n        key: \"_mouseOut\",\n        value: function _mouseOut(evt) {\n            this._mouseAction(UI_1.UIPointerActions.out, evt);\n            if (this._dragged) this._mouseAction(UI_1.UIPointerActions.drop, evt);\n            this._dragged = false;\n            return false;\n        }\n    }, {\n        key: \"_touchMove\",\n        value: function _touchMove(evt) {\n            this._mouseMove(evt);\n            evt.preventDefault();\n            return false;\n        }\n    }, {\n        key: \"pointer\",\n        get: function get() {\n            var p = this._pointer.clone();\n            p.id = this._pointer.id;\n            return p;\n        }\n    }]);\n\n    return MultiTouchSpace;\n}(Space);\n\nexports.MultiTouchSpace = MultiTouchSpace;\n\n/***/ }),\n\n/***/ \"./src/Svg.ts\":\n/*!********************!*\\\n  !*** ./src/Svg.ts ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Form_1 = __webpack_require__(/*! ./Form */ \"./src/Form.ts\");\nvar Num_1 = __webpack_require__(/*! ./Num */ \"./src/Num.ts\");\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./src/Util.ts\");\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nvar Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nvar Dom_1 = __webpack_require__(/*! ./Dom */ \"./src/Dom.ts\");\n\nvar SVGSpace = function (_Dom_1$DOMSpace) {\n    _inherits(SVGSpace, _Dom_1$DOMSpace);\n\n    function SVGSpace(elem, callback) {\n        _classCallCheck(this, SVGSpace);\n\n        var _this = _possibleConstructorReturn(this, (SVGSpace.__proto__ || Object.getPrototypeOf(SVGSpace)).call(this, elem, callback));\n\n        _this.id = \"svgspace\";\n        _this._bgcolor = \"#999\";\n        if (_this._canvas.nodeName.toLowerCase() != \"svg\") {\n            var s = SVGSpace.svgElement(_this._canvas, \"svg\", _this.id + \"_svg\");\n            _this._container = _this._canvas;\n            _this._canvas = s;\n        }\n        return _this;\n    }\n\n    _createClass(SVGSpace, [{\n        key: \"getForm\",\n        value: function getForm() {\n            return new SVGForm(this);\n        }\n    }, {\n        key: \"resize\",\n        value: function resize(b, evt) {\n            _get(SVGSpace.prototype.__proto__ || Object.getPrototypeOf(SVGSpace.prototype), \"resize\", this).call(this, b, evt);\n            SVGSpace.setAttr(this.element, {\n                \"viewBox\": \"0 0 \" + this.bound.width + \" \" + this.bound.height,\n                \"width\": \"\" + this.bound.width,\n                \"height\": \"\" + this.bound.height,\n                \"xmlns\": \"http://www.w3.org/2000/svg\",\n                \"version\": \"1.1\"\n            });\n            return this;\n        }\n    }, {\n        key: \"remove\",\n        value: function remove(player) {\n            var temp = this._container.querySelectorAll(\".\" + SVGForm.scopeID(player));\n            temp.forEach(function (el) {\n                el.parentNode.removeChild(el);\n            });\n            return _get(SVGSpace.prototype.__proto__ || Object.getPrototypeOf(SVGSpace.prototype), \"remove\", this).call(this, player);\n        }\n    }, {\n        key: \"removeAll\",\n        value: function removeAll() {\n            this._container.innerHTML = \"\";\n            return _get(SVGSpace.prototype.__proto__ || Object.getPrototypeOf(SVGSpace.prototype), \"removeAll\", this).call(this);\n        }\n    }, {\n        key: \"element\",\n        get: function get() {\n            return this._canvas;\n        }\n    }], [{\n        key: \"svgElement\",\n        value: function svgElement(parent, name, id) {\n            if (!parent || !parent.appendChild) throw new Error(\"parent is not a valid DOM element\");\n            var elem = document.querySelector(\"#\" + id);\n            if (!elem) {\n                elem = document.createElementNS(\"http://www.w3.org/2000/svg\", name);\n                elem.setAttribute(\"id\", id);\n                parent.appendChild(elem);\n            }\n            return elem;\n        }\n    }]);\n\n    return SVGSpace;\n}(Dom_1.DOMSpace);\n\nexports.SVGSpace = SVGSpace;\n\nvar SVGForm = function (_Form_1$VisualForm) {\n    _inherits(SVGForm, _Form_1$VisualForm);\n\n    function SVGForm(space) {\n        _classCallCheck(this, SVGForm);\n\n        var _this2 = _possibleConstructorReturn(this, (SVGForm.__proto__ || Object.getPrototypeOf(SVGForm)).call(this));\n\n        _this2._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {\n                \"filled\": true,\n                \"stroked\": true,\n                \"fill\": \"#f03\",\n                \"stroke\": \"#fff\",\n                \"stroke-width\": 1,\n                \"stroke-linejoin\": \"bevel\",\n                \"stroke-linecap\": \"sqaure\"\n            },\n            font: \"11px sans-serif\",\n            fontSize: 11,\n            fontFamily: \"sans-serif\"\n        };\n        _this2._ready = false;\n        _this2._space = space;\n        _this2._space.add({ start: function start() {\n                _this2._ctx.group = _this2._space.element;\n                _this2._ctx.groupID = \"pts_svg_\" + SVGForm.groupID++;\n                _this2._ready = true;\n            } });\n        return _this2;\n    }\n\n    _createClass(SVGForm, [{\n        key: \"styleTo\",\n        value: function styleTo(k, v) {\n            if (this._ctx.style[k] === undefined) throw new Error(k + \" style property doesn't exist\");\n            this._ctx.style[k] = v;\n        }\n    }, {\n        key: \"fill\",\n        value: function fill(c) {\n            if (typeof c == \"boolean\") {\n                this.styleTo(\"filled\", c);\n            } else {\n                this.styleTo(\"filled\", true);\n                this.styleTo(\"fill\", c);\n            }\n            return this;\n        }\n    }, {\n        key: \"stroke\",\n        value: function stroke(c, width, linejoin, linecap) {\n            if (typeof c == \"boolean\") {\n                this.styleTo(\"stroked\", c);\n            } else {\n                this.styleTo(\"stroked\", true);\n                this.styleTo(\"stroke\", c);\n                if (width) this.styleTo(\"stroke-width\", width);\n                if (linejoin) this.styleTo(\"stroke-linejoin\", linejoin);\n                if (linecap) this.styleTo(\"stroke-linecap\", linecap);\n            }\n            return this;\n        }\n    }, {\n        key: \"cls\",\n        value: function cls(c) {\n            if (typeof c == \"boolean\") {\n                this._ctx.currentClass = \"\";\n            } else {\n                this._ctx.currentClass = c;\n            }\n            return this;\n        }\n    }, {\n        key: \"font\",\n        value: function font(sizeOrFont, weight, style, lineHeight, family) {\n            if (typeof sizeOrFont == \"number\") {\n                this._font.size = sizeOrFont;\n                if (family) this._font.face = family;\n                if (weight) this._font.weight = weight;\n                if (style) this._font.style = style;\n                if (lineHeight) this._font.lineHeight = lineHeight;\n                this._ctx.font = this._font.value;\n            } else {\n                this._font = sizeOrFont;\n            }\n            return this;\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this._ctx.style = {\n                \"filled\": true, \"stroked\": true,\n                \"fill\": \"#f03\", \"stroke\": \"#fff\",\n                \"stroke-width\": 1,\n                \"stroke-linejoin\": \"bevel\",\n                \"stroke-linecap\": \"sqaure\"\n            };\n            this._font = new Form_1.Font(14, \"sans-serif\");\n            this._ctx.font = this._font.value;\n            return this;\n        }\n    }, {\n        key: \"updateScope\",\n        value: function updateScope(group_id, group) {\n            this._ctx.group = group;\n            this._ctx.groupID = group_id;\n            this._ctx.groupCount = 0;\n            this.nextID();\n            return this._ctx;\n        }\n    }, {\n        key: \"scope\",\n        value: function scope(item) {\n            if (!item || item.animateID == null) throw new Error(\"item not defined or not yet added to Space\");\n            return this.updateScope(SVGForm.scopeID(item), this.space.element);\n        }\n    }, {\n        key: \"nextID\",\n        value: function nextID() {\n            this._ctx.groupCount++;\n            this._ctx.currentID = this._ctx.groupID + \"-\" + this._ctx.groupCount;\n            return this._ctx.currentID;\n        }\n    }, {\n        key: \"point\",\n        value: function point(pt) {\n            var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n            var shape = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"square\";\n\n            this.nextID();\n            SVGForm.point(this._ctx, pt, radius, shape);\n            return this;\n        }\n    }, {\n        key: \"circle\",\n        value: function circle(pts) {\n            this.nextID();\n            SVGForm.circle(this._ctx, pts[0], pts[1][0]);\n            return this;\n        }\n    }, {\n        key: \"arc\",\n        value: function arc(pt, radius, startAngle, endAngle, cc) {\n            this.nextID();\n            SVGForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n            return this;\n        }\n    }, {\n        key: \"square\",\n        value: function square(pt, halfsize) {\n            this.nextID();\n            SVGForm.square(this._ctx, pt, halfsize);\n            return this;\n        }\n    }, {\n        key: \"line\",\n        value: function line(pts) {\n            this.nextID();\n            SVGForm.line(this._ctx, pts);\n            return this;\n        }\n    }, {\n        key: \"polygon\",\n        value: function polygon(pts) {\n            this.nextID();\n            SVGForm.polygon(this._ctx, pts);\n            return this;\n        }\n    }, {\n        key: \"rect\",\n        value: function rect(pts) {\n            this.nextID();\n            SVGForm.rect(this._ctx, pts);\n            return this;\n        }\n    }, {\n        key: \"text\",\n        value: function text(pt, txt) {\n            this.nextID();\n            SVGForm.text(this._ctx, pt, txt);\n            return this;\n        }\n    }, {\n        key: \"log\",\n        value: function log(txt) {\n            this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n            return this;\n        }\n    }, {\n        key: \"space\",\n        get: function get() {\n            return this._space;\n        }\n    }], [{\n        key: \"getID\",\n        value: function getID(ctx) {\n            return ctx.currentID || \"p-\" + SVGForm.domID++;\n        }\n    }, {\n        key: \"scopeID\",\n        value: function scopeID(item) {\n            return \"item-\" + item.animateID;\n        }\n    }, {\n        key: \"style\",\n        value: function style(elem, styles) {\n            var st = [];\n            if (!styles[\"filled\"]) st.push(\"fill: none\");\n            if (!styles[\"stroked\"]) st.push(\"stroke: none\");\n            for (var k in styles) {\n                if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                    var v = styles[k];\n                    if (v) {\n                        if (!styles[\"filled\"] && k.indexOf('fill') === 0) {\n                            continue;\n                        } else if (!styles[\"stroked\"] && k.indexOf('stroke') === 0) {\n                            continue;\n                        } else {\n                            st.push(k + \": \" + v);\n                        }\n                    }\n                }\n            }\n            return Dom_1.DOMSpace.setAttr(elem, { style: st.join(\";\") });\n        }\n    }, {\n        key: \"point\",\n        value: function point(ctx, pt) {\n            var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n            var shape = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"square\";\n\n            if (shape === \"circle\") {\n                return SVGForm.circle(ctx, pt, radius);\n            } else {\n                return SVGForm.square(ctx, pt, radius);\n            }\n        }\n    }, {\n        key: \"circle\",\n        value: function circle(ctx, pt) {\n            var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n\n            var elem = SVGSpace.svgElement(ctx.group, \"circle\", SVGForm.getID(ctx));\n            Dom_1.DOMSpace.setAttr(elem, {\n                cx: pt[0],\n                cy: pt[1],\n                r: radius,\n                'class': \"pts-svgform pts-circle \" + ctx.currentClass\n            });\n            SVGForm.style(elem, ctx.style);\n            return elem;\n        }\n    }, {\n        key: \"arc\",\n        value: function arc(ctx, pt, radius, startAngle, endAngle, cc) {\n            var elem = SVGSpace.svgElement(ctx.group, \"path\", SVGForm.getID(ctx));\n            var start = new Pt_1.Pt(pt).toAngle(startAngle, radius, true);\n            var end = new Pt_1.Pt(pt).toAngle(endAngle, radius, true);\n            var diff = Num_1.Geom.boundAngle(endAngle) - Num_1.Geom.boundAngle(startAngle);\n            var largeArc = diff > Util_1.Const.pi ? true : false;\n            if (cc) largeArc = !largeArc;\n            var sweep = cc ? \"0\" : \"1\";\n            var d = \"M \" + start[0] + \" \" + start[1] + \" A \" + radius + \" \" + radius + \" 0 \" + (largeArc ? \"1\" : \"0\") + \" \" + sweep + \" \" + end[0] + \" \" + end[1];\n            Dom_1.DOMSpace.setAttr(elem, {\n                d: d,\n                'class': \"pts-svgform pts-arc \" + ctx.currentClass\n            });\n            SVGForm.style(elem, ctx.style);\n            return elem;\n        }\n    }, {\n        key: \"square\",\n        value: function square(ctx, pt, halfsize) {\n            var elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n            Dom_1.DOMSpace.setAttr(elem, {\n                x: pt[0] - halfsize,\n                y: pt[1] - halfsize,\n                width: halfsize * 2,\n                height: halfsize * 2,\n                'class': \"pts-svgform pts-square \" + ctx.currentClass\n            });\n            SVGForm.style(elem, ctx.style);\n            return elem;\n        }\n    }, {\n        key: \"line\",\n        value: function line(ctx, pts) {\n            if (!this._checkSize(pts)) return;\n            if (pts.length > 2) return SVGForm._poly(ctx, pts, false);\n            var elem = SVGSpace.svgElement(ctx.group, \"line\", SVGForm.getID(ctx));\n            Dom_1.DOMSpace.setAttr(elem, {\n                x1: pts[0][0],\n                y1: pts[0][1],\n                x2: pts[1][0],\n                y2: pts[1][1],\n                'class': \"pts-svgform pts-line \" + ctx.currentClass\n            });\n            SVGForm.style(elem, ctx.style);\n            return elem;\n        }\n    }, {\n        key: \"_poly\",\n        value: function _poly(ctx, pts) {\n            var closePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            if (!this._checkSize(pts)) return;\n            var elem = SVGSpace.svgElement(ctx.group, closePath ? \"polygon\" : \"polyline\", SVGForm.getID(ctx));\n            var points = pts.reduce(function (a, p) {\n                return a + (p[0] + \",\" + p[1] + \" \");\n            }, \"\");\n            Dom_1.DOMSpace.setAttr(elem, {\n                points: points,\n                'class': \"pts-svgform pts-polygon \" + ctx.currentClass\n            });\n            SVGForm.style(elem, ctx.style);\n            return elem;\n        }\n    }, {\n        key: \"polygon\",\n        value: function polygon(ctx, pts) {\n            return SVGForm._poly(ctx, pts, true);\n        }\n    }, {\n        key: \"rect\",\n        value: function rect(ctx, pts) {\n            if (!this._checkSize(pts)) return;\n            var elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n            var bound = Pt_1.Group.fromArray(pts).boundingBox();\n            var size = Op_1.Rectangle.size(bound);\n            Dom_1.DOMSpace.setAttr(elem, {\n                x: bound[0][0],\n                y: bound[0][1],\n                width: size[0],\n                height: size[1],\n                'class': \"pts-svgform pts-rect \" + ctx.currentClass\n            });\n            SVGForm.style(elem, ctx.style);\n            return elem;\n        }\n    }, {\n        key: \"text\",\n        value: function text(ctx, pt, txt) {\n            var elem = SVGSpace.svgElement(ctx.group, \"text\", SVGForm.getID(ctx));\n            Dom_1.DOMSpace.setAttr(elem, {\n                \"pointer-events\": \"none\",\n                x: pt[0],\n                y: pt[1],\n                dx: 0, dy: 0,\n                'class': \"pts-svgform pts-text \" + ctx.currentClass\n            });\n            elem.textContent = txt;\n            SVGForm.style(elem, ctx.style);\n            return elem;\n        }\n    }]);\n\n    return SVGForm;\n}(Form_1.VisualForm);\n\nSVGForm.groupID = 0;\nSVGForm.domID = 0;\nexports.SVGForm = SVGForm;\n\n/***/ }),\n\n/***/ \"./src/Typography.ts\":\n/*!***************************!*\\\n  !*** ./src/Typography.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\n\nvar Typography = function () {\n    function Typography() {\n        _classCallCheck(this, Typography);\n    }\n\n    _createClass(Typography, null, [{\n        key: \"textWidthEstimator\",\n        value: function textWidthEstimator(fn) {\n            var samples = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [\"M\", \"n\", \".\"];\n            var distribution = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0.06, 0.8, 0.14];\n\n            var m = samples.map(fn);\n            var avg = new Pt_1.Pt(distribution).dot(m);\n            return function (str) {\n                return str.length * avg;\n            };\n        }\n    }, {\n        key: \"truncate\",\n        value: function truncate(fn, str, width) {\n            var tail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n\n            var trim = Math.floor(str.length * Math.min(1, width / fn(str)));\n            if (trim < str.length) {\n                trim = Math.max(0, trim - tail.length);\n                return [str.substr(0, trim) + tail, trim];\n            } else {\n                return [str, str.length];\n            }\n        }\n    }, {\n        key: \"fontSizeToBox\",\n        value: function fontSizeToBox(box) {\n            var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var byHeight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var i = byHeight ? 1 : 0;\n            var h = box[1][i] - box[0][i];\n            var f = ratio * h;\n            return function (b) {\n                var nh = (b[1][i] - b[0][i]) / h;\n                return f * nh;\n            };\n        }\n    }, {\n        key: \"fontSizeToThreshold\",\n        value: function fontSizeToThreshold(threshold) {\n            var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            return function (defaultSize, val) {\n                var d = defaultSize * val / threshold;\n                if (direction < 0) return Math.min(d, defaultSize);\n                if (direction > 0) return Math.max(d, defaultSize);\n                return d;\n            };\n        }\n    }]);\n\n    return Typography;\n}();\n\nexports.Typography = Typography;\n\n/***/ }),\n\n/***/ \"./src/UI.ts\":\n/*!*******************!*\\\n  !*** ./src/UI.ts ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nvar Op_1 = __webpack_require__(/*! ./Op */ \"./src/Op.ts\");\nexports.UIShape = {\n    rectangle: \"rectangle\", circle: \"circle\", polygon: \"polygon\", polyline: \"polyline\", line: \"line\"\n};\nexports.UIPointerActions = {\n    up: \"up\", down: \"down\", move: \"move\", drag: \"drag\", uidrag: \"uidrag\", drop: \"drop\", over: \"over\", out: \"out\", enter: \"enter\", leave: \"leave\", all: \"all\"\n};\n\nvar UI = function () {\n    function UI(group, shape) {\n        var states = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var id = arguments[3];\n\n        _classCallCheck(this, UI);\n\n        this._holds = [];\n        this._group = Pt_1.Group.fromArray(group);\n        this._shape = shape;\n        this._id = id === undefined ? \"ui_\" + UI._counter++ : id;\n        this._states = states;\n        this._actions = {};\n    }\n\n    _createClass(UI, [{\n        key: \"state\",\n        value: function state(key, value) {\n            if (!key) return null;\n            if (value !== undefined) {\n                this._states[key] = value;\n                return this;\n            }\n            return this._states[key];\n        }\n    }, {\n        key: \"on\",\n        value: function on(key, fn) {\n            if (!this._actions[key]) this._actions[key] = [];\n            return UI._addHandler(this._actions[key], fn);\n        }\n    }, {\n        key: \"off\",\n        value: function off(key, which) {\n            if (!this._actions[key]) return false;\n            if (which === undefined) {\n                delete this._actions[key];\n                return true;\n            } else {\n                return UI._removeHandler(this._actions[key], which);\n            }\n        }\n    }, {\n        key: \"listen\",\n        value: function listen(key, p) {\n            if (this._actions[key] !== undefined) {\n                if (this._within(p) || this._holds.indexOf(key) >= 0) {\n                    UI._trigger(this._actions[key], this, p, key);\n                    return true;\n                } else if (this._actions['all']) {\n                    UI._trigger(this._actions['all'], this, p, key);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }, {\n        key: \"hold\",\n        value: function hold(key) {\n            this._holds.push(key);\n            return this._holds.length - 1;\n        }\n    }, {\n        key: \"unhold\",\n        value: function unhold(id) {\n            if (id !== undefined) {\n                this._holds = this._holds.splice(id, 1);\n            } else {\n                this._holds = [];\n            }\n        }\n    }, {\n        key: \"render\",\n        value: function render(fn) {\n            fn(this._group, this._states);\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            return \"UI \" + this.group.toString;\n        }\n    }, {\n        key: \"_within\",\n        value: function _within(p) {\n            var fn = null;\n            if (this._shape === exports.UIShape.rectangle) {\n                fn = Op_1.Rectangle.withinBound;\n            } else if (this._shape === exports.UIShape.circle) {\n                fn = Op_1.Circle.withinBound;\n            } else if (this._shape === exports.UIShape.polygon) {\n                fn = Op_1.Polygon.hasIntersectPoint;\n            } else {\n                return false;\n            }\n            return fn(this._group, p);\n        }\n    }, {\n        key: \"id\",\n        get: function get() {\n            return this._id;\n        },\n        set: function set(d) {\n            this._id = d;\n        }\n    }, {\n        key: \"group\",\n        get: function get() {\n            return this._group;\n        },\n        set: function set(d) {\n            this._group = d;\n        }\n    }, {\n        key: \"shape\",\n        get: function get() {\n            return this._shape;\n        },\n        set: function set(d) {\n            this._shape = d;\n        }\n    }], [{\n        key: \"fromRectangle\",\n        value: function fromRectangle(group, states, id) {\n            return new this(group, exports.UIShape.rectangle, states, id);\n        }\n    }, {\n        key: \"fromCircle\",\n        value: function fromCircle(group, states, id) {\n            return new this(group, exports.UIShape.circle, states, id);\n        }\n    }, {\n        key: \"fromPolygon\",\n        value: function fromPolygon(group, states, id) {\n            return new this(group, exports.UIShape.polygon, states, id);\n        }\n    }, {\n        key: \"fromUI\",\n        value: function fromUI(ui, states, id) {\n            return new this(ui.group, ui.shape, states || ui._states, id);\n        }\n    }, {\n        key: \"track\",\n        value: function track(uis, key, p) {\n            for (var i = 0, len = uis.length; i < len; i++) {\n                uis[i].listen(key, p);\n            }\n        }\n    }, {\n        key: \"_trigger\",\n        value: function _trigger(fns, target, pt, type) {\n            if (fns) {\n                for (var i = 0, len = fns.length; i < len; i++) {\n                    if (fns[i]) fns[i](target, pt, type);\n                }\n            }\n        }\n    }, {\n        key: \"_addHandler\",\n        value: function _addHandler(fns, fn) {\n            if (fn) {\n                fns.push(fn);\n                return fns.length - 1;\n            } else {\n                return -1;\n            }\n        }\n    }, {\n        key: \"_removeHandler\",\n        value: function _removeHandler(fns, index) {\n            if (index >= 0 && index < fns.length) {\n                var temp = fns.length;\n                fns.splice(index, 1);\n                return temp > fns.length;\n            } else {\n                return false;\n            }\n        }\n    }]);\n\n    return UI;\n}();\n\nUI._counter = 0;\nexports.UI = UI;\n\nvar UIButton = function (_UI) {\n    _inherits(UIButton, _UI);\n\n    function UIButton(group, shape) {\n        var states = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var id = arguments[3];\n\n        _classCallCheck(this, UIButton);\n\n        var _this = _possibleConstructorReturn(this, (UIButton.__proto__ || Object.getPrototypeOf(UIButton)).call(this, group, shape, states, id));\n\n        _this._hoverID = -1;\n        if (states.hover === undefined) _this._states['hover'] = false;\n        if (states.clicks === undefined) _this._states['clicks'] = 0;\n        var UA = exports.UIPointerActions;\n        _this.on(UA.up, function (target, pt, type) {\n            _this.state('clicks', _this._states.clicks + 1);\n        });\n        _this.on(UA.move, function (target, pt, type) {\n            var hover = _this._within(pt);\n            if (hover && !_this._states.hover) {\n                _this.state('hover', true);\n                UI._trigger(_this._actions[UA.enter], _this, pt, UA.enter);\n                var _capID = _this.hold(UA.move);\n                _this._hoverID = _this.on(UA.move, function (t, p) {\n                    if (!_this._within(p) && !_this.state('dragging')) {\n                        _this.state('hover', false);\n                        UI._trigger(_this._actions[UA.leave], _this, pt, UA.leave);\n                        _this.off(UA.move, _this._hoverID);\n                        _this.unhold(_capID);\n                    }\n                });\n            }\n        });\n        return _this;\n    }\n\n    _createClass(UIButton, [{\n        key: \"onClick\",\n        value: function onClick(fn) {\n            return this.on(exports.UIPointerActions.up, fn);\n        }\n    }, {\n        key: \"offClick\",\n        value: function offClick(id) {\n            return this.off(exports.UIPointerActions.up, id);\n        }\n    }, {\n        key: \"onHover\",\n        value: function onHover(enter, leave) {\n            var ids = [undefined, undefined];\n            if (enter) ids[0] = this.on(exports.UIPointerActions.enter, enter);\n            if (leave) ids[1] = this.on(exports.UIPointerActions.leave, leave);\n            return ids;\n        }\n    }, {\n        key: \"offHover\",\n        value: function offHover(enterID, leaveID) {\n            var s = [false, false];\n            if (enterID === undefined || enterID >= 0) s[0] = this.off(exports.UIPointerActions.enter, enterID);\n            if (leaveID === undefined || leaveID >= 0) s[1] = this.off(exports.UIPointerActions.leave, leaveID);\n            return s;\n        }\n    }]);\n\n    return UIButton;\n}(UI);\n\nexports.UIButton = UIButton;\n\nvar UIDragger = function (_UIButton) {\n    _inherits(UIDragger, _UIButton);\n\n    function UIDragger(group, shape) {\n        var states = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var id = arguments[3];\n\n        _classCallCheck(this, UIDragger);\n\n        var _this2 = _possibleConstructorReturn(this, (UIDragger.__proto__ || Object.getPrototypeOf(UIDragger)).call(this, group, shape, states, id));\n\n        _this2._draggingID = -1;\n        _this2._moveHoldID = -1;\n        if (states.dragging === undefined) _this2._states['dragging'] = false;\n        if (states.offset === undefined) _this2._states['offset'] = new Pt_1.Pt();\n        var UA = exports.UIPointerActions;\n        _this2.on(UA.down, function (target, pt, type) {\n            _this2.state('dragging', true);\n            _this2.state('offset', new Pt_1.Pt(pt).subtract(target.group[0]));\n            _this2._moveHoldID = _this2.hold(UA.move);\n            _this2._draggingID = _this2.on(UA.move, function (t, p) {\n                if (_this2.state('dragging')) {\n                    UI._trigger(_this2._actions[UA.uidrag], t, p, UA.uidrag);\n                }\n            });\n        });\n        _this2.on(UA.up, function (target, pt, type) {\n            _this2.state('dragging', false);\n            _this2.off(UA.move, _this2._draggingID);\n            _this2.unhold(_this2._moveHoldID);\n            UI._trigger(_this2._actions[UA.drop], target, pt, type);\n        });\n        return _this2;\n    }\n\n    _createClass(UIDragger, [{\n        key: \"onDrag\",\n        value: function onDrag(fn) {\n            return this.on(exports.UIPointerActions.uidrag, fn);\n        }\n    }, {\n        key: \"offDrag\",\n        value: function offDrag(id) {\n            return this.off(exports.UIPointerActions.uidrag, id);\n        }\n    }, {\n        key: \"onDrop\",\n        value: function onDrop(fn) {\n            return this.on(exports.UIPointerActions.drop, fn);\n        }\n    }, {\n        key: \"offDrop\",\n        value: function offDrop(id) {\n            return this.off(exports.UIPointerActions.drop, id);\n        }\n    }]);\n\n    return UIDragger;\n}(UIButton);\n\nexports.UIDragger = UIDragger;\n\n/***/ }),\n\n/***/ \"./src/Util.ts\":\n/*!*********************!*\\\n  !*** ./src/Util.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pt_1 = __webpack_require__(/*! ./Pt */ \"./src/Pt.ts\");\nexports.Const = {\n    xy: \"xy\",\n    yz: \"yz\",\n    xz: \"xz\",\n    xyz: \"xyz\",\n    horizontal: 0,\n    vertical: 1,\n    identical: 0,\n    right: 4,\n    bottom_right: 5,\n    bottom: 6,\n    bottom_left: 7,\n    left: 8,\n    top_left: 1,\n    top: 2,\n    top_right: 3,\n    epsilon: 0.0001,\n    max: Number.MAX_VALUE,\n    min: Number.MIN_VALUE,\n    pi: Math.PI,\n    two_pi: 6.283185307179586,\n    half_pi: 1.5707963267948966,\n    quarter_pi: 0.7853981633974483,\n    one_degree: 0.017453292519943295,\n    rad_to_deg: 57.29577951308232,\n    deg_to_rad: 0.017453292519943295,\n    gravity: 9.81,\n    newton: 0.10197,\n    gaussian: 0.3989422804014327\n};\n\nvar Util = function () {\n    function Util() {\n        _classCallCheck(this, Util);\n    }\n\n    _createClass(Util, null, [{\n        key: \"warnLevel\",\n        value: function warnLevel(lv) {\n            if (lv) {\n                Util._warnLevel = lv;\n            }\n            return Util._warnLevel;\n        }\n    }, {\n        key: \"getArgs\",\n        value: function getArgs(args) {\n            if (args.length < 1) return [];\n            var pos = [];\n            var isArray = Array.isArray(args[0]) || ArrayBuffer.isView(args[0]);\n            if (typeof args[0] === 'number') {\n                pos = Array.prototype.slice.call(args);\n            } else if (_typeof(args[0]) === 'object' && !isArray) {\n                var a = [\"x\", \"y\", \"z\", \"w\"];\n                var p = args[0];\n                for (var i = 0; i < a.length; i++) {\n                    if (p.length && i >= p.length || !(a[i] in p)) break;\n                    pos.push(p[a[i]]);\n                }\n            } else if (isArray) {\n                pos = [].slice.call(args[0]);\n            }\n            return pos;\n        }\n    }, {\n        key: \"warn\",\n        value: function warn() {\n            var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"error\";\n            var defaultReturn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n            if (Util.warnLevel() == \"error\") {\n                throw new Error(message);\n            } else if (Util.warnLevel() == \"warn\") {\n                console.warn(message);\n            }\n            return defaultReturn;\n        }\n    }, {\n        key: \"randomInt\",\n        value: function randomInt(range) {\n            var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            return Math.floor(Math.random() * range) + start;\n        }\n    }, {\n        key: \"split\",\n        value: function split(pts, size, stride) {\n            var loopBack = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            var st = stride || size;\n            var chunks = [];\n            for (var i = 0; i < pts.length; i++) {\n                if (i * st + size > pts.length) {\n                    if (loopBack) {\n                        var g = pts.slice(i * st);\n                        g = g.concat(pts.slice(0, (i * st + size) % size));\n                        chunks.push(g);\n                    } else {\n                        break;\n                    }\n                } else {\n                    chunks.push(pts.slice(i * st, i * st + size));\n                }\n            }\n            return chunks;\n        }\n    }, {\n        key: \"flatten\",\n        value: function flatten(pts) {\n            var flattenAsGroup = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var arr = flattenAsGroup ? new Pt_1.Group() : new Array();\n            return arr.concat.apply(arr, pts);\n        }\n    }, {\n        key: \"combine\",\n        value: function combine(a, b, op) {\n            var result = [];\n            for (var i = 0, len = a.length; i < len; i++) {\n                for (var k = 0, lenB = b.length; k < lenB; k++) {\n                    result.push(op(a[i], b[k]));\n                }\n            }\n            return result;\n        }\n    }, {\n        key: \"zip\",\n        value: function zip(arrays) {\n            var z = [];\n            for (var i = 0, len = arrays[0].length; i < len; i++) {\n                var p = [];\n                for (var k = 0; k < arrays.length; k++) {\n                    p.push(arrays[k][i]);\n                }\n                z.push(p);\n            }\n            return z;\n        }\n    }, {\n        key: \"stepper\",\n        value: function stepper(max) {\n            var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n            var callback = arguments[3];\n\n            var c = min;\n            return function () {\n                c += stride;\n                if (c >= max) {\n                    c = min + (c - max);\n                }\n                if (callback) callback(c);\n                return c;\n            };\n        }\n    }, {\n        key: \"forRange\",\n        value: function forRange(fn, range) {\n            var start = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            var step = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n            var temp = [];\n            for (var i = start, len = range; i < len; i += step) {\n                temp[i] = fn(i);\n            }\n            return temp;\n        }\n    }, {\n        key: \"load\",\n        value: function load(url, callback) {\n            var request = new XMLHttpRequest();\n            request.open('GET', url, true);\n            request.onload = function () {\n                if (request.status >= 200 && request.status < 400) {\n                    callback(request.responseText, true);\n                } else {\n                    callback(\"Server error (\" + request.status + \") when loading \\\"\" + url + \"\\\"\", false);\n                }\n            };\n            request.onerror = function () {\n                callback(\"Unknown network error\", false);\n            };\n            request.send();\n        }\n    }]);\n\n    return Util;\n}();\n\nUtil._warnLevel = \"mute\";\nexports.Util = Util;\n\n/***/ }),\n\n/***/ \"./src/_module.ts\":\n/*!************************!*\\\n  !*** ./src/_module.ts ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction __export(m) {\n    for (var p in m) {\n        if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./Canvas */ \"./src/Canvas.ts\"));\n__export(__webpack_require__(/*! ./Create */ \"./src/Create.ts\"));\n__export(__webpack_require__(/*! ./Form */ \"./src/Form.ts\"));\n__export(__webpack_require__(/*! ./LinearAlgebra */ \"./src/LinearAlgebra.ts\"));\n__export(__webpack_require__(/*! ./Num */ \"./src/Num.ts\"));\n__export(__webpack_require__(/*! ./Op */ \"./src/Op.ts\"));\n__export(__webpack_require__(/*! ./Pt */ \"./src/Pt.ts\"));\n__export(__webpack_require__(/*! ./Space */ \"./src/Space.ts\"));\n__export(__webpack_require__(/*! ./Color */ \"./src/Color.ts\"));\n__export(__webpack_require__(/*! ./Util */ \"./src/Util.ts\"));\n__export(__webpack_require__(/*! ./Dom */ \"./src/Dom.ts\"));\n__export(__webpack_require__(/*! ./Svg */ \"./src/Svg.ts\"));\n__export(__webpack_require__(/*! ./Typography */ \"./src/Typography.ts\"));\n__export(__webpack_require__(/*! ./Physics */ \"./src/Physics.ts\"));\n__export(__webpack_require__(/*! ./UI */ \"./src/UI.ts\"));\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=es5.js.map","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}