{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/objectDestructuringEmpty.js","webpack:///./node_modules/pts/dist/es2015/Util.js","webpack:///./node_modules/pts/dist/es2015/LinearAlgebra.js","webpack:///./node_modules/pts/dist/es2015/Op.js","webpack:///./node_modules/pts/dist/es2015/Num.js","webpack:///./node_modules/pts/dist/es2015/Pt.js","webpack:///./node_modules/pts/dist/es2015/UI.js","webpack:///./node_modules/pts/dist/es2015/Space.js","webpack:///./node_modules/pts/dist/es2015/Form.js","webpack:///./node_modules/pts/dist/es2015/Typography.js","webpack:///./node_modules/pts/dist/es2015/Canvas.js","webpack:///./node_modules/pts/dist/es2015/Create.js","webpack:///./node_modules/pts/dist/es2015/Color.js","webpack:///./node_modules/pts/dist/es2015/Dom.js","webpack:///./node_modules/pts/dist/es2015/Svg.js","webpack:///./node_modules/pts/dist/es2015/_module.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/react-tippy/dist/react-tippy.js","webpack:///./node_modules/popper.js/dist/esm/popper.js"],"names":["module","exports","obj","TypeError","Const","xy","yz","xz","xyz","horizontal","vertical","identical","right","bottom_right","bottom","bottom_left","left","top_left","top","top_right","epsilon","max","Number","MAX_VALUE","min","MIN_VALUE","pi","Math","PI","two_pi","half_pi","quarter_pi","one_degree","rad_to_deg","deg_to_rad","gravity","newton","gaussian","Util_Util","[object Object]","lv","_warnLevel","args","length","pos","isArray","Array","ArrayBuffer","isView","prototype","slice","call","a","p","i","push","message","defaultReturn","warnLevel","Error","range","start","floor","random","pts","size","stride","loopBack","st","chunks","g","concat","flattenAsGroup","arr","Pt_Group","apply","b","op","result","len","k","lenB","arrays","z","callback","c","fn","step","temp","url","request","XMLHttpRequest","open","onload","status","responseText","onerror","send","LinearAlgebra_Vec","toString","d","Pt_Pt","sqrt","dot","magnitude","m","undefined","divide","map","abs","ceil","round","index","value","s","LinearAlgebra_Mat","isNum","$add","transposed","elementwise","ai","alen","$multiply","transpose","make","bi","blen","defaultValue","useLongest","ps","reduce","zipSlice","zip","pt","x","y","cosA","sinA","tanX","tanY","sx","sy","at","scale2DMatrix","rotate2DMatrix","shear2DMatrix","p1","p2","intercept","Op_Line","yi","ang2","atan","slope","cos","sin","_errorLength","param","warn","_errorOutofBound","anchor","angle","toAngle","xi","line","p3","threshold","to","$subtract","$cross","equals","magnitudeSq","asProjection","proj","$project","perpendicularFromPt","la","lb","pa","pb","y1","px","py","intersectRay2D","Num_Geom","withinBound","ray","lineOrRay","poly","sourceIsRay","intersectLineWithRay2D","intersectLine2D","next","lines1","lines2","isRay","group","lenk","_ip","gridPt","t","subtract","intersectGridWithRay2D","gg","rect","box","boundingBox","fromPtArray","Op_Rectangle","hasIntersectRect2D","intersectLines2D","sides","num","interpolate","cropAsCircle","ls","unit","multiply","fromCenter","sideIdx","graphic","atTail","perpendicular","add","$min","$max","topLeft","widthOrSize","height","fromTopLeft","center","half","within","Op_Circle","fromRect","enclose","maxValue","minValue","p0","corners","rects","merged","flatten","_center","ratio","asRows","mid","Num_Num","lerp","rect1","rect2","resetBoundingBox","r","Op_Triangle","circumcircle","incircle","radius","f","disc","discSqrt","t1","t2","circle","dv","dr2","dr","ar","br","ar2","br2","clone","h","ang","inc","toTriangle","fromCircle","Op_Polygon","midpoints","opp","oppositeSide","altitude","bisector","incenter","area","perimeter","total","md","medial","circumcenter","centroid","idx","closePath","sp","split","lines","gs","adjacentSides","mag","segments","det","sorted","sort","dq","bot","hull","originIndex","_near","_item","unitAxis","n","poly1","poly2","projectAxis","ln","lineAt","info","which","dist","normal","edge","vertex","minDist","MAX_SAFE_INTEGER","axis","_axisOverlap","plen","b1","b2","c1","c2","smallest","lp","ins","intersectPolygon2D","polys","boxes","unshift","val","sum","currA","currB","targetA","targetB","normalizeValue","boundValue","radian","minPt","maxPt","average","ptOrIndex","direction","method","boundPt1","boundPt2","bounds","da","db","$cross2D","scale","scs","lenP","rotateAt2DMatrix","$take","transform2D","shearAt2DMatrix","tanx","tan","tany","mat","reflectAt2DMatrix","Float64Array","table","rad","boundAngle","toDegree","Float32Array","super","getArgs","dimensions","randomize","fill","id","this","_id","w","anchorFromPt","change","self","params","fns","_ops","toArray","cross2D","cross","atan2","boundRadian","rotate2D","shear2D","reflect2D","join","p4","q1","q2","q3","q4","list","from","chunkSize","splice","count","pts_per_segment","clamp","chunk","tc","moveBy","dim","desc","ptFn","forEachPt","Bound","_size","_topLeft","_bottomRight","_inited","init","width","_updateSize","_updateCenter","_updatePosFromTop","_updatePosFromCenter","bottomRight","depth","inited","UIShape","rectangle","polygon","polyline","UIPointerActions","up","down","move","drag","uidrag","drop","over","out","enter","leave","all","UI_UI","shape","states","_holds","_group","fromArray","_shape","_counter","_states","_actions","ui","key","_addHandler","_removeHandler","_within","indexOf","_trigger","uis","listen","hasIntersectPoint","target","type","Space_Space","bound","_time","prev","diff","end","players","playerCount","_animID","_pause","_refresh","_pointer","_isReady","_playing","player","animate","pid","animateID","resize","time","requestAnimationFrame","play","bind","playItems","err","cancelAnimationFrame","clear","toggle","duration","stop","context","_renderFunc","customRendering","isPlaying","outerBound","innerBound","Space_MultiTouchSpace","arguments","_pressed","_dragged","_hasMouse","_hasTouch","pointer","evt","_canvas","addEventListener","removeEventListener","_bind","bindCanvas","_mouseDown","_mouseUp","_mouseOver","_mouseOut","_mouseMove","unbindCanvas","_touchMove","ts","item","pageX","pageY","MouseEvent","hasOwnProperty","v","action","changedTouches","touch","_mouseAction","preventDefault","Form_Form","_ready","ready","required","VisualForm","_filled","_stroked","_font","Font","filled","stroked","currentFont","groups","rest","stroke","linejoin","linecap","point","_multiple","face","weight","style","lineHeight","Typography_Typography","samples","distribution","avg","str","tail","trim","substr","byHeight","nh","defaultSize","Canvas_CanvasSpace","elem","_pixelScale","_autoResize","_bgcolor","_offscreen","_initialResize","_selector","Element","document","querySelector","nodeName","toLowerCase","_container","_createElement","appendChild","parentElement","body","setTimeout","_ctx","getContext","createElement","setAttribute","_resizeHandler","dispatchEvent","Event","opt","bgcolor","autoResize","retina","r1","window","devicePixelRatio","r2","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","offscreen","_offCanvas","_offCtx","auto","translate","render","playOnce","getBoundingClientRect","fromBoundingRect","pageXOffset","pageYOffset","background","bg","pixelScale","hasOffscreen","offscreenCtx","offscreenCanvas","Canvas_CanvasForm","element","parent","ctx","lastColor","fillStyle","fillRect","clearRect","save","restore","space","_style","strokeStyle","lineWidth","lineJoin","lineCap","_space","font","off","clearOffscreen","offset","drawImage","sizeOrFont","family","_estimateTextWidth","fontWidthEstimate","estimate","textWidthEstimator","measureText","truncate","getTextWidth","textAlign","_paint","beginPath","arc","startAngle","endAngle","cc","halfsize","x1","x2","y2","moveTo","lineTo","square","img","orig","original","image","txt","maxWidth","fillText","text","verticalAlign","overrideBaseline","textBaseline","_textTruncate","_textAlign","crop","lstep","nextLine","sub","buffer","newln","dt","lastIndexOf","lsize","lbox","lpad","alignment","baseline","Create_Create","subpoints","columns","rows","orientation","$divide","dx","dy","seed","np","Create_Noise","initNoise","Create_Delaunay","grad3","permTable","perm","_n","j","n00","n01","n10","n11","_fade","tx","_mesh","triangleOnly","indices","_superTriangle","opened","_circum","closed","tris","edges","circum","triangle","_dedupe","o","_cache","vs","neighborPts","cs","sortEdges","dmax","tri","_triangle","Color_Color","_mode","_isNorm","hex","alpha","substring","hexVal","parseInt","toMode","mode","ranges","rgb","rgba","convert","fname","toUpperCase","l","u","normalized","toNorm","mapToRange","normalize","format","_hex","normalizedInput","normalizedOutput","$normalize","hsl","q","sc","hsb","XYZtoLAB","RGBtoXYZ","lab","XYZtoRGB","LABtoXYZ","LABtoLCH","RGBtoLAB","lch","LABtoRGB","LCHtoLAB","XYZtoLUV","luv","LUVtoXYZ","pow","D65","cy","nnn","refU","refV","L","cubeY","toRadian","Dom_DOMSpace","_css","appendTo","refresh","styles","innerHTML","backgroundColor","update","data","HTMLSpace","Dom_HTMLForm","name","autoClass","querySelectorAll","scopeID","forEach","el","parentNode","removeChild","remove","removeAll","groupID","groupCount","currentID","currentClass","border-color","color","border-width","border-radius","border-style","position","fontSize","fontFamily","styleTo","group_id","nextID","updateScope","domID","setAttr","htmlElement","getID","class","rectStyle","_checkSize","textContent","Svg_SVGSpace","svgElement","Svg_SVGForm","viewBox","xmlns","version","createElementNS","stroke-width","stroke-linejoin","stroke-linecap","cx","largeArc","sweep","_poly","points","pointer-events","__webpack_require__","__webpack_exports__","dP","FProto","Function","nameRE","configurable","get","match","e","factory","__WEBPACK_EXTERNAL_MODULE_13__","__WEBPACK_EXTERNAL_MODULE_38__","__WEBPACK_EXTERNAL_MODULE_39__","modules","installedModules","moduleId","getter","Object","defineProperty","enumerable","__esModule","object","property","Browser","SUPPORTED","SUPPORTS_TOUCH","dynamicInputDetection","iOS","test","navigator","userAgent","MSStream","Store","Selectors","POPPER","TOOLTIP","CONTENT","CIRCLE","ARROW","TOOLTIPPED_EL","CONTROLLER","Defaults","html","animation","animateFill","arrow","arrowSize","delay","trigger","interactive","interactiveBorder","theme","distance","hideOnClick","multiple","followCursor","inertia","flipDuration","sticky","stickyDuration","zIndex","touchHold","performance","dynamicTitle","useContext","reactInstance","popperOptions","onRequestClose","DefaultsKeys","keys","default","prefixes","upperProp","charAt","_prefix","prefixedProp","checkFn","find","filter","placement","replace","parentSelector","closest","selector","_matches","matches","popper","tooltip","_globals","content","visibility","defaultMatchSelector","ownerDocument","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","_extends","assign","source","_createClass","defineProperties","props","descriptor","writable","Constructor","protoProps","staticProps","_react","_react2","_interopRequireDefault","_tippy2","defaultProps","hideDelay","hideDuration","onShow","onShown","onHide","onHidden","disabled","className","unmountHTMLWhenHide","propKeys","Tooltip","_Component","instance","_classCallCheck","_this","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","initTippy","_initTippy","destroyTippy","_destroyTippy","updateTippy","_updateTippy","updateReactDom","_updateReactDom","showTooltip","_showTooltip","hideTooltip","_hideTooltip","updateSettings","_updateSettings","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","prevProps","_this2","title","detectPropsChanged","tippy","getPopperElement","tooltipDOM","show","hide","updateForReact","reactDOM","rawTemplate","destroy","_this3","ref","tabIndex","display","children","refData","_find2","settings","_getCorePlacement2","getAttribute","halfPopperWidth","offsetWidth","halfPopperHeight","offsetHeight","pageWidth","documentElement","isRightOverflowing","isLeftOverflowing","_prefix2","removeAttribute","_component2","options","_ref","_objectWithoutProperties","withTooltip","_hoc2","touchHandler","classList","mousemoveHandler","now","event","_hideAllPoppers2","_closest2","_ref$settings","activeElement","blur","maxTouchPoints","msMaxTouchPoints","_arrow","templateId","getElementById","_getOffsetDistanceInPx2","_data$settings","_getInnerElements3","config","modifiers","flip","padding","onUpdate","MutationObserver","observer","popperInstance","_defer2","observe","childList","subtree","characterData","_mutationObserver","_popper2","els","idCounter","_evaluateSettings2","_getIndividualSettings2","_removeTitle2","_createPopperElement2","handlers","_getEventListenerHandlers2","listeners","_createTrigger2","tippyInstance","handleTrigger","handler","handleMouseleave","handleBlur","showDelay","touchWait","clearTimeouts","clearTimeout","_show","_isVisible2","_delay","mouseenterTouch","isClick","isNotPersistent","callbacks","wait","click","handleMousemove","triggerHide","closestTooltippedEl","isOverPopper","isOverEl","isClickTriggered","_cursorIsOutsideInteractiveBorder2","relatedTarget","instanceSettings","acc","isFinite","isNaN","parseFloat","JSON","parse","exclude","_refData$settings","contains","isHideOnClick","isNotCurrentRef","done","_bindEventListeners2","_bindEventListeners","updatePosition","scheduleUpdate","enableEventListeners","_createPopperInstance2","_followCursorHandler2","disableEventListeners","transitionendFired","listenerCallback","_transitionendTimeout","_getInnerElements2","_reactDom2","_init2","_findIndex2","_elementIsInViewport2","_triggerReflow2","_modifyClassList2","_getInnerElements5","_applyTransitionDuration2","_noop2","_getArrayOfElements2","_onTransitionEnd2","_mountPopper2","_makeSticky2","_createTooltips2","Tippy","state","destroyed","shown","hidden","store","newSettings","_defineProperty","updatedContent","tooltipContent","unstable_renderSubtreeIntoContainer","customDuration","_getInnerElements","_data$settings2","_duration","opacity","_onShownFired","focus","isUnmount","_data$settings3","getComputedStyle","unmountComponentAtNode","_isLast","listener","disconnect","_this4","storeLength","disableDynamicInputDetection","enableDynamicInputDetection","isContent","clientX","clientY","corePosition","borderWithDistance","exceeds","_getCorePlacement","innerHeight","clientHeight","innerWidth","clientWidth","findIndex","_find","global","isBrowser","longerTimeoutBrowsers","timeoutDuration","debounce","Promise","called","resolve","then","scheduled","isFunction","functionToCheck","getStyleComputedProperty","nodeType","css","getParentNode","host","getScrollParent","_getStyleComputedProp","overflow","overflowX","overflowY","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","getOffsetParent","noOffsetParent","offsetParent","nextElementSibling","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","createRange","setStart","setEnd","commonAncestorContainer","firstElementChild","element1root","getScroll","upperSide","scrollingElement","getBordersSize","sideA","sideB","getSize","computedStyle","getWindowSizes","classCallCheck","createClass","getClientRect","offsets","scrollTop","scrollLeft","sizes","horizScrollbar","vertScrollbar","getOffsetRectRelativeToArbitraryNode","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","modifier","includeScroll","getFixedPositionOffsetParent","getBoundaries","reference","boundariesElement","boundaries","excludeScroll","relativeOffset","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","refRect","sortedAreas","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","getOuterSizes","marginBottom","marginRight","getOppositePlacement","hash","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","check","runModifiers","ends","prop","cur","enabled","isModifierEnabled","modifierName","some","getSupportedPropertyName","prefix","toCheck","getWindow","defaultView","setupEventListeners","updateBound","passive","scrollElement","attachToScrollParents","scrollParents","isBody","eventsEnabled","isNumeric","setStyles","isModifierRequired","requestingName","requestedName","requesting","isRequired","placements","validPlacements","clockwise","counter","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","parseOffset","basePlacement","useHeight","fragments","frag","divider","search","splitRegex","ops","mergeWithPrevious","toValue","index2","positionFixed","removeOnDestroy","onCreate","shift","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","keepTogether","opSide","_data$offsets$arrow","arrowElement","sideCapitalized","altSide","arrowElementSize","popperMarginSide","popperBorderSide","sideValue","flipped","originalPlacement","placementOpposite","flipOrder","behavior","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","getOppositeVariation","inner","subtractLength","attributes","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","onLoad","modifierOptions","Popper","isDestroyed","isCreated","jquery","Utils","PopperUtils"],"mappings":"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","file":"12-78d9a139e330b71f26a7.js","sourcesContent":["function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}\n\nmodule.exports = _objectDestructuringEmpty;","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Group } from \"./Pt\";\nexport const Const = {\n    xy: \"xy\",\n    yz: \"yz\",\n    xz: \"xz\",\n    xyz: \"xyz\",\n    horizontal: 0,\n    vertical: 1,\n    identical: 0,\n    right: 4,\n    bottom_right: 5,\n    bottom: 6,\n    bottom_left: 7,\n    left: 8,\n    top_left: 1,\n    top: 2,\n    top_right: 3,\n    epsilon: 0.0001,\n    max: Number.MAX_VALUE,\n    min: Number.MIN_VALUE,\n    pi: Math.PI,\n    two_pi: 6.283185307179586,\n    half_pi: 1.5707963267948966,\n    quarter_pi: 0.7853981633974483,\n    one_degree: 0.017453292519943295,\n    rad_to_deg: 57.29577951308232,\n    deg_to_rad: 0.017453292519943295,\n    gravity: 9.81,\n    newton: 0.10197,\n    gaussian: 0.3989422804014327\n};\nexport class Util {\n    static warnLevel(lv) {\n        if (lv) {\n            Util._warnLevel = lv;\n        }\n        return Util._warnLevel;\n    }\n    static getArgs(args) {\n        if (args.length < 1)\n            return [];\n        let pos = [];\n        let isArray = Array.isArray(args[0]) || ArrayBuffer.isView(args[0]);\n        if (typeof args[0] === 'number') {\n            pos = Array.prototype.slice.call(args);\n        }\n        else if (typeof args[0] === 'object' && !isArray) {\n            let a = [\"x\", \"y\", \"z\", \"w\"];\n            let p = args[0];\n            for (let i = 0; i < a.length; i++) {\n                if ((p.length && i >= p.length) || !(a[i] in p))\n                    break;\n                pos.push(p[a[i]]);\n            }\n        }\n        else if (isArray) {\n            pos = [].slice.call(args[0]);\n        }\n        return pos;\n    }\n    static warn(message = \"error\", defaultReturn = undefined) {\n        if (Util.warnLevel() == \"error\") {\n            throw new Error(message);\n        }\n        else if (Util.warnLevel() == \"warn\") {\n            console.warn(message);\n        }\n        return defaultReturn;\n    }\n    static randomInt(range, start = 0) {\n        return Math.floor(Math.random() * range) + start;\n    }\n    static split(pts, size, stride, loopBack = false) {\n        let st = stride || size;\n        let chunks = [];\n        for (let i = 0; i < pts.length; i++) {\n            if (i * st + size > pts.length) {\n                if (loopBack) {\n                    let g = pts.slice(i * st);\n                    g = g.concat(pts.slice(0, (i * st + size) % size));\n                    chunks.push(g);\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                chunks.push(pts.slice(i * st, i * st + size));\n            }\n        }\n        return chunks;\n    }\n    static flatten(pts, flattenAsGroup = true) {\n        let arr = (flattenAsGroup) ? new Group() : new Array();\n        return arr.concat.apply(arr, pts);\n    }\n    static combine(a, b, op) {\n        let result = [];\n        for (let i = 0, len = a.length; i < len; i++) {\n            for (let k = 0, lenB = b.length; k < lenB; k++) {\n                result.push(op(a[i], b[k]));\n            }\n        }\n        return result;\n    }\n    static zip(arrays) {\n        let z = [];\n        for (let i = 0, len = arrays[0].length; i < len; i++) {\n            let p = [];\n            for (let k = 0; k < arrays.length; k++) {\n                p.push(arrays[k][i]);\n            }\n            z.push(p);\n        }\n        return z;\n    }\n    static stepper(max, min = 0, stride = 1, callback) {\n        let c = min;\n        return function () {\n            c += stride;\n            if (c >= max) {\n                c = min + (c - max);\n            }\n            if (callback)\n                callback(c);\n            return c;\n        };\n    }\n    static forRange(fn, range, start = 0, step = 1) {\n        let temp = [];\n        for (let i = start, len = range; i < len; i += step) {\n            temp[i] = fn(i);\n        }\n        return temp;\n    }\n    static load(url, callback) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.onload = function () {\n            if (request.status >= 200 && request.status < 400) {\n                callback(request.responseText, true);\n            }\n            else {\n                callback(`Server error (${request.status}) when loading \"${url}\"`, false);\n            }\n        };\n        request.onerror = function () {\n            callback(`Unknown network error`, false);\n        };\n        request.send();\n    }\n}\nUtil._warnLevel = \"mute\";\n//# sourceMappingURL=Util.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Pt, Group } from \"./Pt\";\nimport { Line } from \"./Op\";\nexport class Vec {\n    static add(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] += b;\n        }\n        else {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] += b[i] || 0;\n        }\n        return a;\n    }\n    static subtract(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] -= b;\n        }\n        else {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] -= b[i] || 0;\n        }\n        return a;\n    }\n    static multiply(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] *= b;\n        }\n        else {\n            if (a.length != b.length) {\n                throw new Error(`Cannot do element-wise multiply since the array lengths don't match: ${a.toString()} multiply-with ${b.toString()}`);\n            }\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] *= b[i];\n        }\n        return a;\n    }\n    static divide(a, b) {\n        if (typeof b == \"number\") {\n            if (b === 0)\n                throw new Error(\"Cannot divide by zero\");\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] /= b;\n        }\n        else {\n            if (a.length != b.length) {\n                throw new Error(`Cannot do element-wise divide since the array lengths don't match. ${a.toString()} divide-by ${b.toString()}`);\n            }\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] /= b[i];\n        }\n        return a;\n    }\n    static dot(a, b) {\n        if (a.length != b.length)\n            throw new Error(\"Array lengths don't match\");\n        let d = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            d += a[i] * b[i];\n        }\n        return d;\n    }\n    static cross2D(a, b) {\n        return a[0] * b[1] - a[1] * b[0];\n    }\n    static cross(a, b) {\n        return new Pt((a[1] * b[2] - a[2] * b[1]), (a[2] * b[0] - a[0] * b[2]), (a[0] * b[1] - a[1] * b[0]));\n    }\n    static magnitude(a) {\n        return Math.sqrt(Vec.dot(a, a));\n    }\n    static unit(a, magnitude = undefined) {\n        let m = (magnitude === undefined) ? Vec.magnitude(a) : magnitude;\n        if (m === 0)\n            throw new Error(\"Cannot calculate unit vector because magnitude is 0\");\n        return Vec.divide(a, m);\n    }\n    static abs(a) {\n        return Vec.map(a, Math.abs);\n    }\n    static floor(a) {\n        return Vec.map(a, Math.floor);\n    }\n    static ceil(a) {\n        return Vec.map(a, Math.ceil);\n    }\n    static round(a) {\n        return Vec.map(a, Math.round);\n    }\n    static max(a) {\n        let m = Number.MIN_VALUE;\n        let index = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            m = Math.max(m, a[i]);\n            if (m === a[i])\n                index = i;\n        }\n        return { value: m, index: index };\n    }\n    static min(a) {\n        let m = Number.MAX_VALUE;\n        let index = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            m = Math.min(m, a[i]);\n            if (m === a[i])\n                index = i;\n        }\n        return { value: m, index: index };\n    }\n    static sum(a) {\n        let s = 0;\n        for (let i = 0, len = a.length; i < len; i++)\n            s += a[i];\n        return s;\n    }\n    static map(a, fn) {\n        for (let i = 0, len = a.length; i < len; i++) {\n            a[i] = fn(a[i], i, a);\n        }\n        return a;\n    }\n}\nexport class Mat {\n    static add(a, b) {\n        if (typeof b != \"number\") {\n            if (a[0].length != b[0].length)\n                throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n            if (a.length != b.length)\n                throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n        }\n        let g = new Group();\n        let isNum = typeof b == \"number\";\n        for (let i = 0, len = a.length; i < len; i++) {\n            g.push(a[i].$add((isNum) ? b : b[i]));\n        }\n        return g;\n    }\n    static multiply(a, b, transposed = false, elementwise = false) {\n        let g = new Group();\n        if (typeof b != \"number\") {\n            if (elementwise) {\n                if (a.length != b.length)\n                    throw new Error(\"Cannot multiply matrix element-wise because the matrices' sizes don't match.\");\n                for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                    g.push(a[ai].$multiply(b[ai]));\n                }\n            }\n            else {\n                if (!transposed && a[0].length != b.length)\n                    throw new Error(\"Cannot multiply matrix if rows in matrix-a don't match columns in matrix-b.\");\n                if (transposed && a[0].length != b[0].length)\n                    throw new Error(\"Cannot multiply matrix if transposed and the columns in both matrices don't match.\");\n                if (!transposed)\n                    b = Mat.transpose(b);\n                for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                    let p = Pt.make(b.length, 0);\n                    for (let bi = 0, blen = b.length; bi < blen; bi++) {\n                        p[bi] = Vec.dot(a[ai], b[bi]);\n                    }\n                    g.push(p);\n                }\n            }\n        }\n        else {\n            for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                g.push(a[ai].$multiply(b));\n            }\n        }\n        return g;\n    }\n    static zipSlice(g, index, defaultValue = false) {\n        let z = [];\n        for (let i = 0, len = g.length; i < len; i++) {\n            if (g[i].length - 1 < index && defaultValue === false)\n                throw `Index ${index} is out of bounds`;\n            z.push(g[i][index] || defaultValue);\n        }\n        return new Pt(z);\n    }\n    static zip(g, defaultValue = false, useLongest = false) {\n        let ps = new Group();\n        let len = (useLongest) ? g.reduce((a, b) => Math.max(a, b.length), 0) : g[0].length;\n        for (let i = 0; i < len; i++) {\n            ps.push(Mat.zipSlice(g, i, defaultValue));\n        }\n        return ps;\n    }\n    static transpose(g, defaultValue = false, useLongest = false) {\n        return Mat.zip(g, defaultValue, useLongest);\n    }\n    static transform2D(pt, m) {\n        let x = pt[0] * m[0][0] + pt[1] * m[1][0] + m[2][0];\n        let y = pt[0] * m[0][1] + pt[1] * m[1][1] + m[2][1];\n        return new Pt(x, y);\n    }\n    static scale2DMatrix(x, y) {\n        return new Group(new Pt(x, 0, 0), new Pt(0, y, 0), new Pt(0, 0, 1));\n    }\n    static rotate2DMatrix(cosA, sinA) {\n        return new Group(new Pt(cosA, sinA, 0), new Pt(-sinA, cosA, 0), new Pt(0, 0, 1));\n    }\n    static shear2DMatrix(tanX, tanY) {\n        return new Group(new Pt(1, tanX, 0), new Pt(tanY, 1, 0), new Pt(0, 0, 1));\n    }\n    static translate2DMatrix(x, y) {\n        return new Group(new Pt(1, 0, 0), new Pt(0, 1, 0), new Pt(x, y, 1));\n    }\n    static scaleAt2DMatrix(sx, sy, at) {\n        let m = Mat.scale2DMatrix(sx, sy);\n        m[2][0] = -at[0] * sx + at[0];\n        m[2][1] = -at[1] * sy + at[1];\n        return m;\n    }\n    static rotateAt2DMatrix(cosA, sinA, at) {\n        let m = Mat.rotate2DMatrix(cosA, sinA);\n        m[2][0] = at[0] * (1 - cosA) + at[1] * sinA;\n        m[2][1] = at[1] * (1 - cosA) - at[0] * sinA;\n        return m;\n    }\n    static shearAt2DMatrix(tanX, tanY, at) {\n        let m = Mat.shear2DMatrix(tanX, tanY);\n        m[2][0] = -at[1] * tanY;\n        m[2][1] = -at[0] * tanX;\n        return m;\n    }\n    static reflectAt2DMatrix(p1, p2) {\n        let intercept = Line.intercept(p1, p2);\n        if (intercept == undefined) {\n            return [\n                new Pt([-1, 0, 0]),\n                new Pt([0, 1, 0]),\n                new Pt([p1[0] + p2[0], 0, 1])\n            ];\n        }\n        else {\n            let yi = intercept.yi;\n            let ang2 = Math.atan(intercept.slope) * 2;\n            let cosA = Math.cos(ang2);\n            let sinA = Math.sin(ang2);\n            return [\n                new Pt([cosA, sinA, 0]),\n                new Pt([sinA, -cosA, 0]),\n                new Pt([-yi * sinA, yi + yi * cosA, 1])\n            ];\n        }\n    }\n}\n//# sourceMappingURL=LinearAlgebra.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Util } from \"./Util\";\nimport { Geom, Num } from \"./Num\";\nimport { Pt, Group } from \"./Pt\";\nimport { Mat } from \"./LinearAlgebra\";\nlet _errorLength = (obj, param = \"expected\") => Util.warn(\"Group's length is less than \" + param, obj);\nlet _errorOutofBound = (obj, param = \"\") => Util.warn(`Index ${param} is out of bound in Group`, obj);\nexport class Line {\n    static fromAngle(anchor, angle, magnitude) {\n        let g = new Group(new Pt(anchor), new Pt(anchor));\n        g[1].toAngle(angle, magnitude, true);\n        return g;\n    }\n    static slope(p1, p2) {\n        return (p2[0] - p1[0] === 0) ? undefined : (p2[1] - p1[1]) / (p2[0] - p1[0]);\n    }\n    static intercept(p1, p2) {\n        if (p2[0] - p1[0] === 0) {\n            return undefined;\n        }\n        else {\n            let m = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n            let c = p1[1] - m * p1[0];\n            return { slope: m, yi: c, xi: (m === 0) ? undefined : -c / m };\n        }\n    }\n    static sideOfPt2D(line, pt) {\n        return (line[1][0] - line[0][0]) * (pt[1] - line[0][1]) - (pt[0] - line[0][0]) * (line[1][1] - line[0][1]);\n    }\n    static collinear(p1, p2, p3, threshold = 0.01) {\n        let a = new Pt(0, 0, 0).to(p1).$subtract(p2);\n        let b = new Pt(0, 0, 0).to(p1).$subtract(p3);\n        return a.$cross(b).divide(1000).equals(new Pt(0, 0, 0), threshold);\n    }\n    static magnitude(line) {\n        return (line.length >= 2) ? line[1].$subtract(line[0]).magnitude() : 0;\n    }\n    static magnitudeSq(line) {\n        return (line.length >= 2) ? line[1].$subtract(line[0]).magnitudeSq() : 0;\n    }\n    static perpendicularFromPt(line, pt, asProjection = false) {\n        if (line[0].equals(line[1]))\n            return undefined;\n        let a = line[0].$subtract(line[1]);\n        let b = line[1].$subtract(pt);\n        let proj = b.$subtract(a.$project(b));\n        return (asProjection) ? proj : proj.$add(pt);\n    }\n    static distanceFromPt(line, pt) {\n        return Line.perpendicularFromPt(line, pt, true).magnitude();\n    }\n    static intersectRay2D(la, lb) {\n        let a = Line.intercept(la[0], la[1]);\n        let b = Line.intercept(lb[0], lb[1]);\n        let pa = la[0];\n        let pb = lb[0];\n        if (a == undefined) {\n            if (b == undefined)\n                return undefined;\n            let y1 = -b.slope * (pb[0] - pa[0]) + pb[1];\n            return new Pt(pa[0], y1);\n        }\n        else {\n            if (b == undefined) {\n                let y1 = -a.slope * (pa[0] - pb[0]) + pa[1];\n                return new Pt(pb[0], y1);\n            }\n            else if (b.slope != a.slope) {\n                let px = (a.slope * pa[0] - b.slope * pb[0] + pb[1] - pa[1]) / (a.slope - b.slope);\n                let py = a.slope * (px - pa[0]) + pa[1];\n                return new Pt(px, py);\n            }\n            else {\n                if (a.yi == b.yi) {\n                    return new Pt(pa[0], pa[1]);\n                }\n                else {\n                    return undefined;\n                }\n            }\n        }\n    }\n    static intersectLine2D(la, lb) {\n        let pt = Line.intersectRay2D(la, lb);\n        return (pt && Geom.withinBound(pt, la[0], la[1]) && Geom.withinBound(pt, lb[0], lb[1])) ? pt : undefined;\n    }\n    static intersectLineWithRay2D(line, ray) {\n        let pt = Line.intersectRay2D(line, ray);\n        return (pt && Geom.withinBound(pt, line[0], line[1])) ? pt : undefined;\n    }\n    static intersectPolygon2D(lineOrRay, poly, sourceIsRay = false) {\n        let fn = sourceIsRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n        let pts = new Group();\n        for (let i = 0, len = poly.length; i < len; i++) {\n            let next = (i === len - 1) ? 0 : i + 1;\n            let d = fn([poly[i], poly[next]], lineOrRay);\n            if (d)\n                pts.push(d);\n        }\n        return (pts.length > 0) ? pts : undefined;\n    }\n    static intersectLines2D(lines1, lines2, isRay = false) {\n        let group = new Group();\n        let fn = isRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n        for (let i = 0, len = lines1.length; i < len; i++) {\n            for (let k = 0, lenk = lines2.length; k < lenk; k++) {\n                let _ip = fn(lines1[i], lines2[k]);\n                if (_ip)\n                    group.push(_ip);\n            }\n        }\n        return group;\n    }\n    static intersectGridWithRay2D(ray, gridPt) {\n        let t = Line.intercept(new Pt(ray[0]).subtract(gridPt), new Pt(ray[1]).subtract(gridPt));\n        let g = new Group();\n        if (t && t.xi)\n            g.push(new Pt(gridPt[0] + t.xi, gridPt[1]));\n        if (t && t.yi)\n            g.push(new Pt(gridPt[0], gridPt[1] + t.yi));\n        return g;\n    }\n    static intersectGridWithLine2D(line, gridPt) {\n        let g = Line.intersectGridWithRay2D(line, gridPt);\n        let gg = new Group();\n        for (let i = 0, len = g.length; i < len; i++) {\n            if (Geom.withinBound(g[i], line[0], line[1]))\n                gg.push(g[i]);\n        }\n        return gg;\n    }\n    static intersectRect2D(line, rect) {\n        let box = Geom.boundingBox(Group.fromPtArray(line));\n        if (!Rectangle.hasIntersectRect2D(box, rect))\n            return new Group();\n        return Line.intersectLines2D([line], Rectangle.sides(rect));\n    }\n    static subpoints(line, num) {\n        let pts = new Group();\n        for (let i = 1; i <= num; i++) {\n            pts.push(Geom.interpolate(line[0], line[1], i / (num + 1)));\n        }\n        return pts;\n    }\n    static crop(line, size, index = 0, cropAsCircle = true) {\n        let tdx = (index === 0) ? 1 : 0;\n        let ls = line[tdx].$subtract(line[index]);\n        if (ls[0] === 0 || size[0] === 0)\n            return line[index];\n        if (cropAsCircle) {\n            let d = ls.unit().multiply(size[1]);\n            return line[index].$add(d);\n        }\n        else {\n            let rect = Rectangle.fromCenter(line[index], size);\n            let sides = Rectangle.sides(rect);\n            let sideIdx = 0;\n            if (Math.abs(ls[1] / ls[0]) > Math.abs(size[1] / size[0])) {\n                sideIdx = (ls[1] < 0) ? 0 : 2;\n            }\n            else {\n                sideIdx = (ls[0] < 0) ? 3 : 1;\n            }\n            return Line.intersectRay2D(sides[sideIdx], line);\n        }\n    }\n    static marker(line, size, graphic = (\"arrow\" || \"line\"), atTail = true) {\n        let h = atTail ? 0 : 1;\n        let t = atTail ? 1 : 0;\n        let unit = line[h].$subtract(line[t]);\n        if (unit.magnitudeSq() === 0)\n            return new Group();\n        unit.unit();\n        let ps = Geom.perpendicular(unit).multiply(size[0]).add(line[t]);\n        if (graphic == \"arrow\") {\n            ps.add(unit.$multiply(size[1]));\n            return new Group(line[t], ps[0], ps[1]);\n        }\n        else {\n            return new Group(ps[0], ps[1]);\n        }\n    }\n    static toRect(line) {\n        return new Group(line[0].$min(line[1]), line[0].$max(line[1]));\n    }\n}\nexport class Rectangle {\n    static from(topLeft, widthOrSize, height) {\n        return Rectangle.fromTopLeft(topLeft, widthOrSize, height);\n    }\n    static fromTopLeft(topLeft, widthOrSize, height) {\n        let size = (typeof widthOrSize == \"number\") ? [widthOrSize, (height || widthOrSize)] : widthOrSize;\n        return new Group(new Pt(topLeft), new Pt(topLeft).add(size));\n    }\n    static fromCenter(center, widthOrSize, height) {\n        let half = (typeof widthOrSize == \"number\") ? [widthOrSize / 2, (height || widthOrSize) / 2] : new Pt(widthOrSize).divide(2);\n        return new Group(new Pt(center).subtract(half), new Pt(center).add(half));\n    }\n    static toCircle(pts, within = true) {\n        return Circle.fromRect(pts, within);\n    }\n    static toSquare(pts, enclose = false) {\n        let s = Rectangle.size(pts);\n        let m = (enclose) ? s.maxValue().value : s.minValue().value;\n        return Rectangle.fromCenter(Rectangle.center(pts), m, m);\n    }\n    static size(pts) {\n        return pts[0].$max(pts[1]).subtract(pts[0].$min(pts[1]));\n    }\n    static center(pts) {\n        let min = pts[0].$min(pts[1]);\n        let max = pts[0].$max(pts[1]);\n        return min.add(max.$subtract(min).divide(2));\n    }\n    static corners(rect) {\n        let p0 = rect[0].$min(rect[1]);\n        let p2 = rect[0].$max(rect[1]);\n        return new Group(p0, new Pt(p2.x, p0.y), p2, new Pt(p0.x, p2.y));\n    }\n    static sides(rect) {\n        let [p0, p1, p2, p3] = Rectangle.corners(rect);\n        return [\n            new Group(p0, p1), new Group(p1, p2),\n            new Group(p2, p3), new Group(p3, p0)\n        ];\n    }\n    static boundingBox(rects) {\n        let merged = Util.flatten(rects, false);\n        let min = Pt.make(2, Number.MAX_VALUE);\n        let max = Pt.make(2, Number.MIN_VALUE);\n        for (let i = 0, len = merged.length; i < len; i++) {\n            for (let k = 0; k < 2; k++) {\n                min[k] = Math.min(min[k], merged[i][k]);\n                max[k] = Math.max(max[k], merged[i][k]);\n            }\n        }\n        return new Group(min, max);\n    }\n    static polygon(rect) {\n        return Rectangle.corners(rect);\n    }\n    static quadrants(rect, center) {\n        let corners = Rectangle.corners(rect);\n        let _center = (center != undefined) ? new Pt(center) : Rectangle.center(rect);\n        return corners.map((c) => new Group(c, _center).boundingBox());\n    }\n    static halves(rect, ratio = 0.5, asRows = false) {\n        let min = rect[0].$min(rect[1]);\n        let max = rect[0].$max(rect[1]);\n        let mid = (asRows) ? Num.lerp(min[1], max[1], ratio) : Num.lerp(min[0], max[0], ratio);\n        return (asRows)\n            ? [new Group(min, new Pt(max[0], mid)), new Group(new Pt(min[0], mid), max)]\n            : [new Group(min, new Pt(mid, max[1])), new Group(new Pt(mid, min[1]), max)];\n    }\n    static withinBound(rect, pt) {\n        return Geom.withinBound(pt, rect[0], rect[1]);\n    }\n    static hasIntersectRect2D(rect1, rect2, resetBoundingBox = false) {\n        if (resetBoundingBox) {\n            rect1 = Geom.boundingBox(rect1);\n            rect2 = Geom.boundingBox(rect2);\n        }\n        if (rect1[0][0] > rect2[1][0] || rect2[0][0] > rect1[1][0])\n            return false;\n        if (rect1[0][1] > rect2[1][1] || rect2[0][1] > rect1[1][1])\n            return false;\n        return true;\n    }\n    static intersectRect2D(rect1, rect2) {\n        if (!Rectangle.hasIntersectRect2D(rect1, rect2))\n            return new Group();\n        return Line.intersectLines2D(Rectangle.sides(rect1), Rectangle.sides(rect2));\n    }\n}\nexport class Circle {\n    static fromRect(pts, enclose = false) {\n        let r = 0;\n        let min = r = Rectangle.size(pts).minValue().value / 2;\n        if (enclose) {\n            let max = Rectangle.size(pts).maxValue().value / 2;\n            r = Math.sqrt(min * min + max * max);\n        }\n        else {\n            r = min;\n        }\n        return new Group(Rectangle.center(pts), new Pt(r, r));\n    }\n    static fromTriangle(pts, enclose = false) {\n        if (enclose) {\n            return Triangle.circumcircle(pts);\n        }\n        else {\n            return Triangle.incircle(pts);\n        }\n    }\n    static fromCenter(pt, radius) {\n        return new Group(new Pt(pt), new Pt(radius, radius));\n    }\n    static withinBound(pts, pt, threshold = 0) {\n        let d = pts[0].$subtract(pt);\n        return d.dot(d) + threshold < pts[1].x * pts[1].x;\n    }\n    static intersectRay2D(pts, ray) {\n        let d = ray[0].$subtract(ray[1]);\n        let f = pts[0].$subtract(ray[0]);\n        let a = d.dot(d);\n        let b = f.dot(d);\n        let c = f.dot(f) - pts[1].x * pts[1].x;\n        let p = b / a;\n        let q = c / a;\n        let disc = p * p - q;\n        if (disc < 0) {\n            return new Group();\n        }\n        else {\n            let discSqrt = Math.sqrt(disc);\n            let t1 = -p + discSqrt;\n            let p1 = ray[0].$subtract(d.$multiply(t1));\n            if (disc === 0)\n                return new Group(p1);\n            let t2 = -p - discSqrt;\n            let p2 = ray[0].$subtract(d.$multiply(t2));\n            return new Group(p1, p2);\n        }\n    }\n    static intersectLine2D(pts, line) {\n        let ps = Circle.intersectRay2D(pts, line);\n        let g = new Group();\n        if (ps.length > 0) {\n            for (let i = 0, len = ps.length; i < len; i++) {\n                if (Rectangle.withinBound(line, ps[i]))\n                    g.push(ps[i]);\n            }\n        }\n        return g;\n    }\n    static intersectCircle2D(pts, circle) {\n        let dv = circle[0].$subtract(pts[0]);\n        let dr2 = dv.magnitudeSq();\n        let dr = Math.sqrt(dr2);\n        let ar = pts[1].x;\n        let br = circle[1].x;\n        let ar2 = ar * ar;\n        let br2 = br * br;\n        if (dr > ar + br) {\n            return new Group();\n        }\n        else if (dr < Math.abs(ar - br)) {\n            return new Group(pts[0].clone());\n        }\n        else {\n            let a = (ar2 - br2 + dr2) / (2 * dr);\n            let h = Math.sqrt(ar2 - a * a);\n            let p = dv.$multiply(a / dr).add(pts[0]);\n            return new Group(new Pt(p.x + h * dv.y / dr, p.y - h * dv.x / dr), new Pt(p.x - h * dv.y / dr, p.y + h * dv.x / dr));\n        }\n    }\n    static intersectRect2D(pts, rect) {\n        let sides = Rectangle.sides(rect);\n        let g = [];\n        for (let i = 0, len = sides.length; i < len; i++) {\n            let ps = Circle.intersectLine2D(pts, sides[i]);\n            if (ps.length > 0)\n                g.push(ps);\n        }\n        return Util.flatten(g);\n    }\n    static toRect(pts, within = false) {\n        let r = pts[1][0];\n        if (within) {\n            let half = Math.sqrt(r * r) / 2;\n            return new Group(pts[0].$subtract(half), pts[0].$add(half));\n        }\n        else {\n            return new Group(pts[0].$subtract(r), pts[0].$add(r));\n        }\n    }\n    static toTriangle(pts, within = true) {\n        if (within) {\n            let ang = -Math.PI / 2;\n            let inc = Math.PI * 2 / 3;\n            let g = new Group();\n            for (let i = 0; i < 3; i++) {\n                g.push(pts[0].clone().toAngle(ang, pts[1][0], true));\n                ang += inc;\n            }\n            return g;\n        }\n        else {\n            return Triangle.fromCenter(pts[0], pts[1][0]);\n        }\n    }\n}\nexport class Triangle {\n    static fromRect(rect) {\n        let top = rect[0].$add(rect[1]).divide(2);\n        top.y = rect[0][1];\n        let left = rect[1].clone();\n        left.x = rect[0][0];\n        return new Group(top, rect[1].clone(), left);\n    }\n    static fromCircle(circle) {\n        return Circle.toTriangle(circle, true);\n    }\n    static fromCenter(pt, size) {\n        return Triangle.fromCircle(Circle.fromCenter(pt, size));\n    }\n    static medial(pts) {\n        if (pts.length < 3)\n            return _errorLength(new Group(), 3);\n        return Polygon.midpoints(pts, true);\n    }\n    static oppositeSide(pts, index) {\n        if (pts.length < 3)\n            return _errorLength(new Group(), 3);\n        if (index === 0) {\n            return Group.fromPtArray([pts[1], pts[2]]);\n        }\n        else if (index === 1) {\n            return Group.fromPtArray([pts[0], pts[2]]);\n        }\n        else {\n            return Group.fromPtArray([pts[0], pts[1]]);\n        }\n    }\n    static altitude(pts, index) {\n        let opp = Triangle.oppositeSide(pts, index);\n        if (opp.length > 1) {\n            return new Group(pts[index], Line.perpendicularFromPt(opp, pts[index]));\n        }\n        else {\n            return new Group();\n        }\n    }\n    static orthocenter(pts) {\n        if (pts.length < 3)\n            return _errorLength(undefined, 3);\n        let a = Triangle.altitude(pts, 0);\n        let b = Triangle.altitude(pts, 1);\n        return Line.intersectRay2D(a, b);\n    }\n    static incenter(pts) {\n        if (pts.length < 3)\n            return _errorLength(undefined, 3);\n        let a = Polygon.bisector(pts, 0).add(pts[0]);\n        let b = Polygon.bisector(pts, 1).add(pts[1]);\n        return Line.intersectRay2D(new Group(pts[0], a), new Group(pts[1], b));\n    }\n    static incircle(pts, center) {\n        let c = (center) ? center : Triangle.incenter(pts);\n        let area = Polygon.area(pts);\n        let perim = Polygon.perimeter(pts, true);\n        let r = 2 * area / perim.total;\n        return Circle.fromCenter(c, r);\n    }\n    static circumcenter(pts) {\n        let md = Triangle.medial(pts);\n        let a = [md[0], Geom.perpendicular(pts[0].$subtract(md[0])).p1.$add(md[0])];\n        let b = [md[1], Geom.perpendicular(pts[1].$subtract(md[1])).p1.$add(md[1])];\n        return Line.intersectRay2D(a, b);\n    }\n    static circumcircle(pts, center) {\n        let c = (center) ? center : Triangle.circumcenter(pts);\n        let r = pts[0].$subtract(c).magnitude();\n        return Circle.fromCenter(c, r);\n    }\n}\nexport class Polygon {\n    static centroid(pts) {\n        return Geom.centroid(pts);\n    }\n    static rectangle(center, widthOrSize, height) {\n        return Rectangle.corners(Rectangle.fromCenter(center, widthOrSize, height));\n    }\n    static fromCenter(center, radius, sides) {\n        let g = new Group();\n        for (let i = 0; i < sides; i++) {\n            let ang = Math.PI * 2 * i / sides;\n            g.push(new Pt(Math.cos(ang) * radius, Math.sin(ang) * radius).add(center));\n        }\n        return g;\n    }\n    static lineAt(pts, idx) {\n        if (idx < 0 || idx >= pts.length)\n            throw new Error(\"index out of the Polygon's range\");\n        return new Group(pts[idx], (idx === pts.length - 1) ? pts[0] : pts[idx + 1]);\n    }\n    static lines(pts, closePath = true) {\n        if (pts.length < 2)\n            return _errorLength(new Group(), 2);\n        let sp = Util.split(pts, 2, 1);\n        if (closePath)\n            sp.push(new Group(pts[pts.length - 1], pts[0]));\n        return sp.map((g) => g);\n    }\n    static midpoints(pts, closePath = false, t = 0.5) {\n        if (pts.length < 2)\n            return _errorLength(new Group(), 2);\n        let sides = Polygon.lines(pts, closePath);\n        let mids = sides.map((s) => Geom.interpolate(s[0], s[1], t));\n        return mids;\n    }\n    static adjacentSides(pts, index, closePath = false) {\n        if (pts.length < 2)\n            return _errorLength(new Group(), 2);\n        if (index < 0 || index >= pts.length)\n            return _errorOutofBound(new Group(), index);\n        let gs = [];\n        let left = index - 1;\n        if (closePath && left < 0)\n            left = pts.length - 1;\n        if (left >= 0)\n            gs.push(new Group(pts[index], pts[left]));\n        let right = index + 1;\n        if (closePath && right > pts.length - 1)\n            right = 0;\n        if (right <= pts.length - 1)\n            gs.push(new Group(pts[index], pts[right]));\n        return gs;\n    }\n    static bisector(pts, index) {\n        let sides = Polygon.adjacentSides(pts, index, true);\n        if (sides.length >= 2) {\n            let a = sides[0][1].$subtract(sides[0][0]).unit();\n            let b = sides[1][1].$subtract(sides[1][0]).unit();\n            return a.add(b).divide(2);\n        }\n        else {\n            return undefined;\n        }\n    }\n    static perimeter(pts, closePath = false) {\n        if (pts.length < 2)\n            return _errorLength(new Group(), 2);\n        let lines = Polygon.lines(pts, closePath);\n        let mag = 0;\n        let p = Pt.make(lines.length, 0);\n        for (let i = 0, len = lines.length; i < len; i++) {\n            let m = Line.magnitude(lines[i]);\n            mag += m;\n            p[i] = m;\n        }\n        return {\n            total: mag,\n            segments: p\n        };\n    }\n    static area(pts) {\n        if (pts.length < 3)\n            return _errorLength(new Group(), 3);\n        let det = (a, b) => a[0] * b[1] - a[1] * b[0];\n        let area = 0;\n        for (let i = 0, len = pts.length; i < len; i++) {\n            if (i < pts.length - 1) {\n                area += det(pts[i], pts[i + 1]);\n            }\n            else {\n                area += det(pts[i], pts[0]);\n            }\n        }\n        return Math.abs(area / 2);\n    }\n    static convexHull(pts, sorted = false) {\n        if (pts.length < 3)\n            return _errorLength(new Group(), 3);\n        if (!sorted) {\n            pts = pts.slice();\n            pts.sort((a, b) => a[0] - b[0]);\n        }\n        let left = (a, b, c) => {\n            return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]) > 0;\n        };\n        let dq = [];\n        let bot = pts.length - 2;\n        let top = bot + 3;\n        dq[bot] = pts[2];\n        dq[top] = pts[2];\n        if (left(pts[0], pts[1], pts[2])) {\n            dq[bot + 1] = pts[0];\n            dq[bot + 2] = pts[1];\n        }\n        else {\n            dq[bot + 1] = pts[1];\n            dq[bot + 2] = pts[0];\n        }\n        for (let i = 3, len = pts.length; i < len; i++) {\n            let pt = pts[i];\n            if (left(dq[bot], dq[bot + 1], pt) && left(dq[top - 1], dq[top], pt)) {\n                continue;\n            }\n            while (!left(dq[bot], dq[bot + 1], pt)) {\n                bot += 1;\n            }\n            bot -= 1;\n            dq[bot] = pt;\n            while (!left(dq[top - 1], dq[top], pt)) {\n                top -= 1;\n            }\n            top += 1;\n            dq[top] = pt;\n        }\n        let hull = new Group();\n        for (let h = 0; h < (top - bot); h++) {\n            hull.push(dq[bot + h]);\n        }\n        return hull;\n    }\n    static network(pts, originIndex = 0) {\n        let g = [];\n        for (let i = 0, len = pts.length; i < len; i++) {\n            if (i != originIndex)\n                g.push(new Group(pts[originIndex], pts[i]));\n        }\n        return g;\n    }\n    static nearestPt(pts, pt) {\n        let _near = Number.MAX_VALUE;\n        let _item = -1;\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let d = pts[i].$subtract(pt).magnitudeSq();\n            if (d < _near) {\n                _near = d;\n                _item = i;\n            }\n        }\n        return _item;\n    }\n    static projectAxis(poly, unitAxis) {\n        let dot = unitAxis.dot(poly[0]);\n        let d = new Pt(dot, dot);\n        for (let n = 1, len = poly.length; n < len; n++) {\n            dot = unitAxis.dot(poly[n]);\n            d = new Pt(Math.min(dot, d[0]), Math.max(dot, d[1]));\n        }\n        return d;\n    }\n    static _axisOverlap(poly1, poly2, unitAxis) {\n        let pa = Polygon.projectAxis(poly1, unitAxis);\n        let pb = Polygon.projectAxis(poly2, unitAxis);\n        return (pa[0] < pb[0]) ? pb[0] - pa[1] : pa[0] - pb[1];\n    }\n    static hasIntersectPoint(poly, pt) {\n        let c = false;\n        for (let i = 0, len = poly.length; i < len; i++) {\n            let ln = Polygon.lineAt(poly, i);\n            if (((ln[0][1] > pt[1]) != (ln[1][1] > pt[1])) &&\n                (pt[0] < (ln[1][0] - ln[0][0]) * (pt[1] - ln[0][1]) / (ln[1][1] - ln[0][1]) + ln[0][0])) {\n                c = !c;\n            }\n        }\n        return c;\n    }\n    static hasIntersectCircle(poly, circle) {\n        let info = {\n            which: -1,\n            dist: 0,\n            normal: null,\n            edge: null,\n            vertex: null,\n        };\n        let c = circle[0];\n        let r = circle[1][0];\n        let minDist = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, len = poly.length; i < len; i++) {\n            let edge = Polygon.lineAt(poly, i);\n            let axis = new Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n            let poly2 = new Group(c.$add(axis.$multiply(r)), c.$subtract(axis.$multiply(r)));\n            let dist = Polygon._axisOverlap(poly, poly2, axis);\n            if (dist > 0) {\n                return null;\n            }\n            else if (Math.abs(dist) < minDist) {\n                let check = Rectangle.withinBound(edge, Line.perpendicularFromPt(edge, c)) || Circle.intersectLine2D(circle, edge).length > 0;\n                if (check) {\n                    info.edge = edge;\n                    info.normal = axis;\n                    minDist = Math.abs(dist);\n                    info.which = i;\n                }\n            }\n        }\n        if (!info.edge)\n            return null;\n        let dir = c.$subtract(Polygon.centroid(poly)).dot(info.normal);\n        if (dir < 0)\n            info.normal.multiply(-1);\n        info.dist = minDist;\n        info.vertex = c;\n        return info;\n    }\n    static hasIntersectPolygon(poly1, poly2) {\n        let info = {\n            which: -1,\n            dist: 0,\n            normal: new Pt(),\n            edge: new Group(),\n            vertex: new Pt()\n        };\n        let minDist = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, plen = (poly1.length + poly2.length); i < plen; i++) {\n            let edge = (i < poly1.length) ? Polygon.lineAt(poly1, i) : Polygon.lineAt(poly2, i - poly1.length);\n            let axis = new Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n            let dist = Polygon._axisOverlap(poly1, poly2, axis);\n            if (dist > 0) {\n                return null;\n            }\n            else if (Math.abs(dist) < minDist) {\n                info.edge = edge;\n                info.normal = axis;\n                minDist = Math.abs(dist);\n                info.which = (i < poly1.length) ? 0 : 1;\n            }\n        }\n        info.dist = minDist;\n        let b1 = (info.which === 0) ? poly2 : poly1;\n        let b2 = (info.which === 0) ? poly1 : poly2;\n        let c1 = Polygon.centroid(b1);\n        let c2 = Polygon.centroid(b2);\n        let dir = c1.$subtract(c2).dot(info.normal);\n        if (dir < 0)\n            info.normal.multiply(-1);\n        let smallest = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, len = b1.length; i < len; i++) {\n            let d = info.normal.dot(b1[i].$subtract(c2));\n            if (d < smallest) {\n                smallest = d;\n                info.vertex = b1[i];\n            }\n        }\n        return info;\n    }\n    static intersectPolygon2D(poly1, poly2) {\n        let lp = Polygon.lines(poly1);\n        let g = [];\n        for (let i = 0, len = lp.length; i < len; i++) {\n            let ins = Line.intersectPolygon2D(lp[i], poly2, false);\n            if (ins)\n                g.push(ins);\n        }\n        return Util.flatten(g, true);\n    }\n    static toRects(polys) {\n        let boxes = polys.map((g) => Geom.boundingBox(g));\n        let merged = Util.flatten(boxes, false);\n        boxes.unshift(Geom.boundingBox(merged));\n        return boxes;\n    }\n}\nexport class Curve {\n    static getSteps(steps) {\n        let ts = new Group();\n        for (let i = 0; i <= steps; i++) {\n            let t = i / steps;\n            ts.push(new Pt(t * t * t, t * t, t, 1));\n        }\n        return ts;\n    }\n    static controlPoints(pts, index = 0, copyStart = false) {\n        if (index > pts.length - 1)\n            return new Group();\n        let _index = (i) => (i < pts.length - 1) ? i : pts.length - 1;\n        let p0 = pts[index];\n        index = (copyStart) ? index : index + 1;\n        return new Group(p0, pts[_index(index++)], pts[_index(index++)], pts[_index(index++)]);\n    }\n    static _calcPt(ctrls, params) {\n        let x = ctrls.reduce((a, c, i) => a + c.x * params[i], 0);\n        let y = ctrls.reduce((a, c, i) => a + c.y * params[i], 0);\n        if (ctrls[0].length > 2) {\n            let z = ctrls.reduce((a, c, i) => a + c.z * params[i], 0);\n            return new Pt(x, y, z);\n        }\n        return new Pt(x, y);\n    }\n    static catmullRom(pts, steps = 10) {\n        if (pts.length < 2)\n            return new Group();\n        let ps = new Group();\n        let ts = Curve.getSteps(steps);\n        let c = Curve.controlPoints(pts, 0, true);\n        for (let i = 0; i <= steps; i++) {\n            ps.push(Curve.catmullRomStep(ts[i], c));\n        }\n        let k = 0;\n        while (k < pts.length - 2) {\n            let cp = Curve.controlPoints(pts, k);\n            if (cp.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.catmullRomStep(ts[i], cp));\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static catmullRomStep(step, ctrls) {\n        let m = new Group(new Pt(-0.5, 1, -0.5, 0), new Pt(1.5, -2.5, 0, 1), new Pt(-1.5, 2, 0.5, 0), new Pt(0.5, -0.5, 0, 0));\n        return Curve._calcPt(ctrls, Mat.multiply([step], m, true)[0]);\n    }\n    static cardinal(pts, steps = 10, tension = 0.5) {\n        if (pts.length < 2)\n            return new Group();\n        let ps = new Group();\n        let ts = Curve.getSteps(steps);\n        let c = Curve.controlPoints(pts, 0, true);\n        for (let i = 0; i <= steps; i++) {\n            ps.push(Curve.cardinalStep(ts[i], c, tension));\n        }\n        let k = 0;\n        while (k < pts.length - 2) {\n            let cp = Curve.controlPoints(pts, k);\n            if (cp.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.cardinalStep(ts[i], cp, tension));\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static cardinalStep(step, ctrls, tension = 0.5) {\n        let m = new Group(new Pt(-1, 2, -1, 0), new Pt(-1, 1, 0, 0), new Pt(1, -2, 1, 0), new Pt(1, -1, 0, 0));\n        let h = Mat.multiply([step], m, true)[0].multiply(tension);\n        let h2 = (2 * step[0] - 3 * step[1] + 1);\n        let h3 = -2 * step[0] + 3 * step[1];\n        let pt = Curve._calcPt(ctrls, h);\n        pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n        pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n        if (pt.length > 2)\n            pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n        return pt;\n    }\n    static bezier(pts, steps = 10) {\n        if (pts.length < 4)\n            return new Group();\n        let ps = new Group();\n        let ts = Curve.getSteps(steps);\n        let k = 0;\n        while (k < pts.length - 3) {\n            let c = Curve.controlPoints(pts, k);\n            if (c.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.bezierStep(ts[i], c));\n                }\n                k += 3;\n            }\n        }\n        return ps;\n    }\n    static bezierStep(step, ctrls) {\n        let m = new Group(new Pt(-1, 3, -3, 1), new Pt(3, -6, 3, 0), new Pt(-3, 3, 0, 0), new Pt(1, 0, 0, 0));\n        return Curve._calcPt(ctrls, Mat.multiply([step], m, true)[0]);\n    }\n    static bspline(pts, steps = 10, tension = 1) {\n        if (pts.length < 2)\n            return new Group();\n        let ps = new Group();\n        let ts = Curve.getSteps(steps);\n        let k = 0;\n        while (k < pts.length - 3) {\n            let c = Curve.controlPoints(pts, k);\n            if (c.length > 0) {\n                if (tension !== 1) {\n                    for (let i = 0; i <= steps; i++) {\n                        ps.push(Curve.bsplineTensionStep(ts[i], c, tension));\n                    }\n                }\n                else {\n                    for (let i = 0; i <= steps; i++) {\n                        ps.push(Curve.bsplineStep(ts[i], c));\n                    }\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static bsplineStep(step, ctrls) {\n        let m = new Group(new Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666), new Pt(0.5, -1, 0, 0.6666666666666666), new Pt(-0.5, 0.5, 0.5, 0.16666666666666666), new Pt(0.16666666666666666, 0, 0, 0));\n        return Curve._calcPt(ctrls, Mat.multiply([step], m, true)[0]);\n    }\n    static bsplineTensionStep(step, ctrls, tension = 1) {\n        let m = new Group(new Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666), new Pt(-1.5, 2, 0, -0.3333333333333333), new Pt(1.5, -2.5, 0.5, 0.16666666666666666), new Pt(0.16666666666666666, 0, 0, 0));\n        let h = Mat.multiply([step], m, true)[0].multiply(tension);\n        let h2 = (2 * step[0] - 3 * step[1] + 1);\n        let h3 = -2 * step[0] + 3 * step[1];\n        let pt = Curve._calcPt(ctrls, h);\n        pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n        pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n        if (pt.length > 2)\n            pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n        return pt;\n    }\n}\n//# sourceMappingURL=Op.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Const } from \"./Util\";\nimport { Curve } from \"./Op\";\nimport { Pt, Group } from \"./Pt\";\nimport { Vec, Mat } from \"./LinearAlgebra\";\nexport class Num {\n    static equals(a, b, threshold = 0.00001) {\n        return Math.abs(a - b) < threshold;\n    }\n    static lerp(a, b, t) {\n        return (1 - t) * a + t * b;\n    }\n    static clamp(val, min, max) {\n        return Math.max(min, Math.min(max, val));\n    }\n    static boundValue(val, min, max) {\n        let len = Math.abs(max - min);\n        let a = val % len;\n        if (a > max)\n            a -= len;\n        else if (a < min)\n            a += len;\n        return a;\n    }\n    static within(p, a, b) {\n        return p >= Math.min(a, b) && p <= Math.max(a, b);\n    }\n    static randomRange(a, b = 0) {\n        let r = (a > b) ? (a - b) : (b - a);\n        return a + Math.random() * r;\n    }\n    static normalizeValue(n, a, b) {\n        let min = Math.min(a, b);\n        let max = Math.max(a, b);\n        return (n - min) / (max - min);\n    }\n    static sum(pts) {\n        let c = new Pt(pts[0]);\n        for (let i = 1, len = pts.length; i < len; i++) {\n            Vec.add(c, pts[i]);\n        }\n        return c;\n    }\n    static average(pts) {\n        return Num.sum(pts).divide(pts.length);\n    }\n    static cycle(t) {\n        return (Math.sin(Math.PI * 2 * t) + 1) / 2;\n    }\n    static mapToRange(n, currA, currB, targetA, targetB) {\n        if (currA == currB)\n            throw new Error(\"[currMin, currMax] must define a range that is not zero\");\n        let min = Math.min(targetA, targetB);\n        let max = Math.max(targetA, targetB);\n        return Num.normalizeValue(n, currA, currB) * (max - min) + min;\n    }\n}\nexport class Geom {\n    static boundAngle(angle) {\n        return Num.boundValue(angle, 0, 360);\n    }\n    static boundRadian(radian) {\n        return Num.boundValue(radian, 0, Const.two_pi);\n    }\n    static toRadian(angle) {\n        return angle * Const.deg_to_rad;\n    }\n    static toDegree(radian) {\n        return radian * Const.rad_to_deg;\n    }\n    static boundingBox(pts) {\n        let minPt = pts.reduce((a, p) => a.$min(p));\n        let maxPt = pts.reduce((a, p) => a.$max(p));\n        return new Group(minPt, maxPt);\n    }\n    static centroid(pts) {\n        return Num.average(pts);\n    }\n    static anchor(pts, ptOrIndex = 0, direction = \"to\") {\n        let method = (direction == \"to\") ? \"subtract\" : \"add\";\n        for (let i = 0, len = pts.length; i < len; i++) {\n            if (typeof ptOrIndex == \"number\") {\n                if (ptOrIndex !== i)\n                    pts[i][method](pts[ptOrIndex]);\n            }\n            else {\n                pts[i][method](ptOrIndex);\n            }\n        }\n    }\n    static interpolate(a, b, t = 0.5) {\n        let len = Math.min(a.length, b.length);\n        let d = Pt.make(len);\n        for (let i = 0; i < len; i++) {\n            d[i] = a[i] * (1 - t) + b[i] * t;\n        }\n        return d;\n    }\n    static perpendicular(pt, axis = Const.xy) {\n        let y = axis[1];\n        let x = axis[0];\n        let p = new Pt(pt);\n        let pa = new Pt(p);\n        pa[x] = -p[y];\n        pa[y] = p[x];\n        let pb = new Pt(p);\n        pb[x] = p[y];\n        pb[y] = -p[x];\n        return new Group(pa, pb);\n    }\n    static isPerpendicular(p1, p2) {\n        return new Pt(p1).dot(p2) === 0;\n    }\n    static withinBound(pt, boundPt1, boundPt2) {\n        for (let i = 0, len = Math.min(pt.length, boundPt1.length, boundPt2.length); i < len; i++) {\n            if (!Num.within(pt[i], boundPt1[i], boundPt2[i]))\n                return false;\n        }\n        return true;\n    }\n    static sortEdges(pts) {\n        let bounds = Geom.boundingBox(pts);\n        let center = bounds[1].add(bounds[0]).divide(2);\n        let fn = (a, b) => {\n            if (a.length < 2 || b.length < 2)\n                throw new Error(\"Pt dimension cannot be less than 2\");\n            let da = a.$subtract(center);\n            let db = b.$subtract(center);\n            if (da[0] >= 0 && db[0] < 0)\n                return 1;\n            if (da[0] < 0 && db[0] >= 0)\n                return -1;\n            if (da[0] == 0 && db[0] == 0) {\n                if (da[1] >= 0 || db[1] >= 0)\n                    return (da[1] > db[1]) ? 1 : -1;\n                return (db[1] > da[1]) ? 1 : -1;\n            }\n            let det = da.$cross2D(db);\n            if (det < 0)\n                return 1;\n            if (det > 0)\n                return -1;\n            return (da[0] * da[0] + da[1] * da[1] > db[0] * db[0] + db[1] * db[1]) ? 1 : -1;\n        };\n        return pts.sort(fn);\n    }\n    static scale(ps, scale, anchor) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let scs = (typeof scale == \"number\") ? Pt.make(pts[0].length, scale) : scale;\n        if (!anchor)\n            anchor = Pt.make(pts[0].length, 0);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = pts[i];\n            for (let k = 0, lenP = p.length; k < lenP; k++) {\n                p[k] = (anchor && anchor[k]) ? anchor[k] + (p[k] - anchor[k]) * scs[k] : p[k] * scs[k];\n            }\n        }\n        return Geom;\n    }\n    static rotate2D(ps, angle, anchor, axis) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let fn = (anchor) ? Mat.rotateAt2DMatrix : Mat.rotate2DMatrix;\n        if (!anchor)\n            anchor = Pt.make(pts[0].length, 0);\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(Mat.transform2D(p, fn(cos, sin, anchor)));\n        }\n        return Geom;\n    }\n    static shear2D(ps, scale, anchor, axis) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let s = (typeof scale == \"number\") ? [scale, scale] : scale;\n        if (!anchor)\n            anchor = Pt.make(pts[0].length, 0);\n        let fn = (anchor) ? Mat.shearAt2DMatrix : Mat.shear2DMatrix;\n        let tanx = Math.tan(s[0]);\n        let tany = Math.tan(s[1]);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(Mat.transform2D(p, fn(tanx, tany, anchor)));\n        }\n        return Geom;\n    }\n    static reflect2D(ps, line, axis) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let mat = Mat.reflectAt2DMatrix(line[0], line[1]);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(Mat.transform2D(p, mat));\n        }\n        return Geom;\n    }\n    static cosTable() {\n        let cos = new Float64Array(360);\n        for (let i = 0; i < 360; i++)\n            cos[i] = Math.cos(i * Math.PI / 180);\n        let find = (rad) => cos[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n        return { table: cos, cos: find };\n    }\n    static sinTable() {\n        let sin = new Float64Array(360);\n        for (let i = 0; i < 360; i++)\n            sin[i] = Math.sin(i * Math.PI / 180);\n        let find = (rad) => sin[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n        return { table: sin, sin: find };\n    }\n}\nexport class Shaping {\n    static linear(t, c = 1) {\n        return c * t;\n    }\n    static quadraticIn(t, c = 1) {\n        return c * t * t;\n    }\n    static quadraticOut(t, c = 1) {\n        return -c * t * (t - 2);\n    }\n    static quadraticInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? c / 2 * t * t * 4 : -c / 2 * ((dt - 1) * (dt - 3) - 1);\n    }\n    static cubicIn(t, c = 1) {\n        return c * t * t * t;\n    }\n    static cubicOut(t, c = 1) {\n        let dt = t - 1;\n        return c * (dt * dt * dt + 1);\n    }\n    static cubicInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? c / 2 * dt * dt * dt : c / 2 * ((dt - 2) * (dt - 2) * (dt - 2) + 2);\n    }\n    static exponentialIn(t, c = 1, p = 0.25) {\n        return c * Math.pow(t, 1 / p);\n    }\n    static exponentialOut(t, c = 1, p = 0.25) {\n        return c * Math.pow(t, p);\n    }\n    static sineIn(t, c = 1) {\n        return -c * Math.cos(t * Const.half_pi) + c;\n    }\n    static sineOut(t, c = 1) {\n        return c * Math.sin(t * Const.half_pi);\n    }\n    static sineInOut(t, c = 1) {\n        return -c / 2 * (Math.cos(Math.PI * t) - 1);\n    }\n    static cosineApprox(t, c = 1) {\n        let t2 = t * t;\n        let t4 = t2 * t2;\n        let t6 = t4 * t2;\n        return c * (4 * t6 / 9 - 17 * t4 / 9 + 22 * t2 / 9);\n    }\n    static circularIn(t, c = 1) {\n        return -c * (Math.sqrt(1 - t * t) - 1);\n    }\n    static circularOut(t, c = 1) {\n        let dt = t - 1;\n        return c * Math.sqrt(1 - dt * dt);\n    }\n    static circularInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? -c / 2 * (Math.sqrt(1 - dt * dt) - 1) : c / 2 * (Math.sqrt(1 - (dt - 2) * (dt - 2)) + 1);\n    }\n    static elasticIn(t, c = 1, p = 0.7) {\n        let dt = t - 1;\n        let s = (p / Const.two_pi) * 1.5707963267948966;\n        return c * (-Math.pow(2, 10 * dt) * Math.sin((dt - s) * Const.two_pi / p));\n    }\n    static elasticOut(t, c = 1, p = 0.7) {\n        let s = (p / Const.two_pi) * 1.5707963267948966;\n        return c * (Math.pow(2, -10 * t) * Math.sin((t - s) * Const.two_pi / p)) + c;\n    }\n    static elasticInOut(t, c = 1, p = 0.6) {\n        let dt = t * 2;\n        let s = (p / Const.two_pi) * 1.5707963267948966;\n        if (t < 0.5) {\n            dt -= 1;\n            return c * (-0.5 * (Math.pow(2, 10 * dt) * Math.sin((dt - s) * Const.two_pi / p)));\n        }\n        else {\n            dt -= 1;\n            return c * (0.5 * (Math.pow(2, -10 * dt) * Math.sin((dt - s) * Const.two_pi / p))) + c;\n        }\n    }\n    static bounceIn(t, c = 1) {\n        return c - Shaping.bounceOut((1 - t), c);\n    }\n    static bounceOut(t, c = 1) {\n        if (t < (1 / 2.75)) {\n            return c * (7.5625 * t * t);\n        }\n        else if (t < (2 / 2.75)) {\n            t -= 1.5 / 2.75;\n            return c * (7.5625 * t * t + 0.75);\n        }\n        else if (t < (2.5 / 2.75)) {\n            t -= 2.25 / 2.75;\n            return c * (7.5625 * t * t + 0.9375);\n        }\n        else {\n            t -= 2.625 / 2.75;\n            return c * (7.5625 * t * t + 0.984375);\n        }\n    }\n    static bounceInOut(t, c = 1) {\n        return (t < 0.5) ? Shaping.bounceIn(t * 2, c) / 2 : Shaping.bounceOut(t * 2 - 1, c) / 2 + c / 2;\n    }\n    static sigmoid(t, c = 1, p = 10) {\n        let d = p * (t - 0.5);\n        return c / (1 + Math.exp(-d));\n    }\n    static logSigmoid(t, c = 1, p = 0.7) {\n        p = Math.max(Const.epsilon, Math.min(1 - Const.epsilon, p));\n        p = 1 / (1 - p);\n        let A = 1 / (1 + Math.exp(((t - 0.5) * p * -2)));\n        let B = 1 / (1 + Math.exp(p));\n        let C = 1 / (1 + Math.exp(-p));\n        return c * (A - B) / (C - B);\n    }\n    static seat(t, c = 1, p = 0.5) {\n        if ((t < 0.5)) {\n            return c * (Math.pow(2 * t, 1 - p)) / 2;\n        }\n        else {\n            return c * (1 - (Math.pow(2 * (1 - t), 1 - p)) / 2);\n        }\n    }\n    static quadraticBezier(t, c = 1, p = [0.05, 0.95]) {\n        let a = (typeof p != \"number\") ? p[0] : p;\n        let b = (typeof p != \"number\") ? p[1] : 0.5;\n        let om2a = 1 - 2 * a;\n        if (om2a === 0) {\n            om2a = Const.epsilon;\n        }\n        let d = (Math.sqrt(a * a + om2a * t) - a) / om2a;\n        return c * ((1 - 2 * b) * (d * d) + (2 * b) * d);\n    }\n    static cubicBezier(t, c = 1, p1 = [0.1, 0.7], p2 = [0.9, 0.2]) {\n        let curve = new Group(new Pt(0, 0), new Pt(p1), new Pt(p2), new Pt(1, 1));\n        return c * Curve.bezierStep(new Pt(t * t * t, t * t, t, 1), Curve.controlPoints(curve)).y;\n    }\n    static quadraticTarget(t, c = 1, p1 = [0.2, 0.35]) {\n        let a = Math.min(1 - Const.epsilon, Math.max(Const.epsilon, p1[0]));\n        let b = Math.min(1, Math.max(0, p1[1]));\n        let A = (1 - b) / (1 - a) - (b / a);\n        let B = (A * (a * a) - b) / a;\n        let y = A * (t * t) - B * t;\n        return c * Math.min(1, Math.max(0, y));\n    }\n    static cliff(t, c = 1, p = 0.5) {\n        return (t > p) ? c : 0;\n    }\n    static step(fn, steps, t, c, ...args) {\n        let s = 1 / steps;\n        let tt = Math.floor(t / s) * s;\n        return fn(tt, c, ...args);\n    }\n}\nexport class Range {\n    constructor(g) {\n        this._dims = 0;\n        this._source = Group.fromPtArray(g);\n        this.calc();\n    }\n    get max() { return this._max.clone(); }\n    get min() { return this._min.clone(); }\n    get magnitude() { return this._mag.clone(); }\n    calc() {\n        if (!this._source)\n            return;\n        let dims = this._source[0].length;\n        this._dims = dims;\n        let max = new Pt(dims);\n        let min = new Pt(dims);\n        let mag = new Pt(dims);\n        for (let i = 0; i < dims; i++) {\n            max[i] = Const.min;\n            min[i] = Const.max;\n            mag[i] = 0;\n            let s = this._source.zipSlice(i);\n            for (let k = 0, len = s.length; k < len; k++) {\n                max[i] = Math.max(max[i], s[k]);\n                min[i] = Math.min(min[i], s[k]);\n                mag[i] = max[i] - min[i];\n            }\n        }\n        this._max = max;\n        this._min = min;\n        this._mag = mag;\n        return this;\n    }\n    mapTo(min, max, exclude) {\n        let target = new Group();\n        for (let i = 0, len = this._source.length; i < len; i++) {\n            let g = this._source[i];\n            let n = new Pt(this._dims);\n            for (let k = 0; k < this._dims; k++) {\n                n[k] = (exclude && exclude[k]) ? g[k] : Num.mapToRange(g[k], this._min[k], this._max[k], min, max);\n            }\n            target.push(n);\n        }\n        return target;\n    }\n    append(g, update = true) {\n        if (g[0].length !== this._dims)\n            throw new Error(`Dimensions don't match. ${this._dims} dimensions in Range and ${g[0].length} provided in parameter. `);\n        this._source = this._source.concat(g);\n        if (update)\n            this.calc();\n        return this;\n    }\n    ticks(count) {\n        let g = new Group();\n        for (let i = 0; i <= count; i++) {\n            let p = new Pt(this._dims);\n            for (let k = 0, len = this._max.length; k < len; k++) {\n                p[k] = Num.lerp(this._min[k], this._max[k], i / count);\n            }\n            g.push(p);\n        }\n        return g;\n    }\n}\n//# sourceMappingURL=Num.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Util, Const } from \"./Util\";\nimport { Geom, Num } from \"./Num\";\nimport { Vec, Mat } from \"./LinearAlgebra\";\nexport class Pt extends Float32Array {\n    constructor(...args) {\n        if (args.length === 1 && typeof args[0] == \"number\") {\n            super(args[0]);\n        }\n        else {\n            super((args.length > 0) ? Util.getArgs(args) : [0, 0]);\n        }\n    }\n    static make(dimensions, defaultValue = 0, randomize = false) {\n        let p = new Float32Array(dimensions);\n        if (defaultValue)\n            p.fill(defaultValue);\n        if (randomize) {\n            for (let i = 0, len = p.length; i < len; i++) {\n                p[i] = p[i] * Math.random();\n            }\n        }\n        return new Pt(p);\n    }\n    get id() { return this._id; }\n    set id(s) { this._id = s; }\n    get x() { return this[0]; }\n    set x(n) { this[0] = n; }\n    get y() { return this[1]; }\n    set y(n) { this[1] = n; }\n    get z() { return this[2]; }\n    set z(n) { this[2] = n; }\n    get w() { return this[3]; }\n    set w(n) { this[3] = n; }\n    clone() {\n        return new Pt(this);\n    }\n    equals(p, threshold = 0.000001) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            if (Math.abs(this[i] - p[i]) > threshold)\n                return false;\n        }\n        return true;\n    }\n    to(...args) {\n        let p = Util.getArgs(args);\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            this[i] = p[i];\n        }\n        return this;\n    }\n    $to(...args) {\n        return this.clone().to(...args);\n    }\n    toAngle(radian, magnitude, anchorFromPt = false) {\n        let m = (magnitude != undefined) ? magnitude : this.magnitude();\n        let change = [Math.cos(radian) * m, Math.sin(radian) * m];\n        return (anchorFromPt) ? this.add(change) : this.to(change);\n    }\n    op(fn) {\n        let self = this;\n        return (...params) => {\n            return fn(self, ...params);\n        };\n    }\n    ops(fns) {\n        let _ops = [];\n        for (let i = 0, len = fns.length; i < len; i++) {\n            _ops.push(this.op(fns[i]));\n        }\n        return _ops;\n    }\n    $take(axis) {\n        let p = [];\n        for (let i = 0, len = axis.length; i < len; i++) {\n            p.push(this[axis[i]] || 0);\n        }\n        return new Pt(p);\n    }\n    $concat(...args) {\n        return new Pt(this.toArray().concat(Util.getArgs(args)));\n    }\n    add(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? Vec.add(this, args[0]) : Vec.add(this, Util.getArgs(args));\n        return this;\n    }\n    $add(...args) { return this.clone().add(...args); }\n    subtract(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? Vec.subtract(this, args[0]) : Vec.subtract(this, Util.getArgs(args));\n        return this;\n    }\n    $subtract(...args) { return this.clone().subtract(...args); }\n    multiply(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? Vec.multiply(this, args[0]) : Vec.multiply(this, Util.getArgs(args));\n        return this;\n    }\n    $multiply(...args) { return this.clone().multiply(...args); }\n    divide(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? Vec.divide(this, args[0]) : Vec.divide(this, Util.getArgs(args));\n        return this;\n    }\n    $divide(...args) { return this.clone().divide(...args); }\n    magnitudeSq() { return Vec.dot(this, this); }\n    magnitude() { return Vec.magnitude(this); }\n    unit(magnitude = undefined) {\n        Vec.unit(this, magnitude);\n        return this;\n    }\n    $unit(magnitude = undefined) { return this.clone().unit(magnitude); }\n    dot(...args) { return Vec.dot(this, Util.getArgs(args)); }\n    $cross2D(...args) { return Vec.cross2D(this, Util.getArgs(args)); }\n    $cross(...args) { return Vec.cross(this, Util.getArgs(args)); }\n    $project(...args) {\n        return this.$multiply(this.dot(...args) / this.magnitudeSq());\n    }\n    projectScalar(...args) {\n        return this.dot(...args) / this.magnitude();\n    }\n    abs() {\n        Vec.abs(this);\n        return this;\n    }\n    $abs() {\n        return this.clone().abs();\n    }\n    floor() {\n        Vec.floor(this);\n        return this;\n    }\n    $floor() {\n        return this.clone().floor();\n    }\n    ceil() {\n        Vec.ceil(this);\n        return this;\n    }\n    $ceil() {\n        return this.clone().ceil();\n    }\n    round() {\n        Vec.round(this);\n        return this;\n    }\n    $round() {\n        return this.clone().round();\n    }\n    minValue() {\n        return Vec.min(this);\n    }\n    maxValue() {\n        return Vec.max(this);\n    }\n    $min(...args) {\n        let p = Util.getArgs(args);\n        let m = this.clone();\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            m[i] = Math.min(this[i], p[i]);\n        }\n        return m;\n    }\n    $max(...args) {\n        let p = Util.getArgs(args);\n        let m = this.clone();\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            m[i] = Math.max(this[i], p[i]);\n        }\n        return m;\n    }\n    angle(axis = Const.xy) {\n        return Math.atan2(this[axis[1]], this[axis[0]]);\n    }\n    angleBetween(p, axis = Const.xy) {\n        return Geom.boundRadian(this.angle(axis)) - Geom.boundRadian(p.angle(axis));\n    }\n    scale(scale, anchor) {\n        Geom.scale(this, scale, anchor || Pt.make(this.length, 0));\n        return this;\n    }\n    rotate2D(angle, anchor, axis) {\n        Geom.rotate2D(this, angle, anchor || Pt.make(this.length, 0), axis);\n        return this;\n    }\n    shear2D(scale, anchor, axis) {\n        Geom.shear2D(this, scale, anchor || Pt.make(this.length, 0), axis);\n        return this;\n    }\n    reflect2D(line, axis) {\n        Geom.reflect2D(this, line, axis);\n        return this;\n    }\n    toString() {\n        return `Pt(${this.join(\", \")})`;\n    }\n    toArray() {\n        return [].slice.call(this);\n    }\n}\nexport class Group extends Array {\n    constructor(...args) {\n        super(...args);\n    }\n    get id() { return this._id; }\n    set id(s) { this._id = s; }\n    get p1() { return this[0]; }\n    get p2() { return this[1]; }\n    get p3() { return this[2]; }\n    get p4() { return this[3]; }\n    get q1() { return this[this.length - 1]; }\n    get q2() { return this[this.length - 2]; }\n    get q3() { return this[this.length - 3]; }\n    get q4() { return this[this.length - 4]; }\n    clone() {\n        let group = new Group();\n        for (let i = 0, len = this.length; i < len; i++) {\n            group.push(this[i].clone());\n        }\n        return group;\n    }\n    static fromArray(list) {\n        let g = new Group();\n        for (let i = 0, len = list.length; i < len; i++) {\n            let p = (list[i] instanceof Pt) ? list[i] : new Pt(list[i]);\n            g.push(p);\n        }\n        return g;\n    }\n    static fromPtArray(list) {\n        return Group.from(list);\n    }\n    split(chunkSize, stride, loopBack = false) {\n        let sp = Util.split(this, chunkSize, stride, loopBack);\n        return sp;\n    }\n    insert(pts, index = 0) {\n        Group.prototype.splice.apply(this, [index, 0, ...pts]);\n        return this;\n    }\n    remove(index = 0, count = 1) {\n        let param = (index < 0) ? [index * -1 - 1, count] : [index, count];\n        return Group.prototype.splice.apply(this, param);\n    }\n    segments(pts_per_segment = 2, stride = 1, loopBack = false) {\n        return this.split(pts_per_segment, stride, loopBack);\n    }\n    lines() { return this.segments(2, 1); }\n    centroid() {\n        return Geom.centroid(this);\n    }\n    boundingBox() {\n        return Geom.boundingBox(this);\n    }\n    anchorTo(ptOrIndex = 0) { Geom.anchor(this, ptOrIndex, \"to\"); }\n    anchorFrom(ptOrIndex = 0) { Geom.anchor(this, ptOrIndex, \"from\"); }\n    op(fn) {\n        let self = this;\n        return (...params) => {\n            return fn(self, ...params);\n        };\n    }\n    ops(fns) {\n        let _ops = [];\n        for (let i = 0, len = fns.length; i < len; i++) {\n            _ops.push(this.op(fns[i]));\n        }\n        return _ops;\n    }\n    interpolate(t) {\n        t = Num.clamp(t, 0, 1);\n        let chunk = this.length - 1;\n        let tc = 1 / (this.length - 1);\n        let idx = Math.floor(t / tc);\n        return Geom.interpolate(this[idx], this[Math.min(this.length - 1, idx + 1)], (t - idx * tc) * chunk);\n    }\n    moveBy(...args) {\n        return this.add(...args);\n    }\n    moveTo(...args) {\n        let d = new Pt(Util.getArgs(args)).subtract(this[0]);\n        this.moveBy(d);\n        return this;\n    }\n    scale(scale, anchor) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Geom.scale(this[i], scale, anchor || this[0]);\n        }\n        return this;\n    }\n    rotate2D(angle, anchor, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Geom.rotate2D(this[i], angle, anchor || this[0], axis);\n        }\n        return this;\n    }\n    shear2D(scale, anchor, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Geom.shear2D(this[i], scale, anchor || this[0], axis);\n        }\n        return this;\n    }\n    reflect2D(line, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Geom.reflect2D(this[i], line, axis);\n        }\n        return this;\n    }\n    sortByDimension(dim, desc = false) {\n        return this.sort((a, b) => (desc) ? b[dim] - a[dim] : a[dim] - b[dim]);\n    }\n    forEachPt(ptFn, ...args) {\n        if (!this[0][ptFn]) {\n            Util.warn(`${ptFn} is not a function of Pt`);\n            return this;\n        }\n        for (let i = 0, len = this.length; i < len; i++) {\n            this[i] = this[i][ptFn](...args);\n        }\n        return this;\n    }\n    add(...args) {\n        return this.forEachPt(\"add\", ...args);\n    }\n    subtract(...args) {\n        return this.forEachPt(\"subtract\", ...args);\n    }\n    multiply(...args) {\n        return this.forEachPt(\"multiply\", ...args);\n    }\n    divide(...args) {\n        return this.forEachPt(\"divide\", ...args);\n    }\n    $matrixAdd(g) {\n        return Mat.add(this, g);\n    }\n    $matrixMultiply(g, transposed = false, elementwise = false) {\n        return Mat.multiply(this, g, transposed, elementwise);\n    }\n    zipSlice(index, defaultValue = false) {\n        return Mat.zipSlice(this, index, defaultValue);\n    }\n    $zip(defaultValue = undefined, useLongest = false) {\n        return Mat.zip(this, defaultValue, useLongest);\n    }\n    toString() {\n        return \"Group[ \" + this.reduce((p, c) => p + c.toString() + \" \", \"\") + \" ]\";\n    }\n}\nexport class Bound extends Group {\n    constructor(...args) {\n        super(...args);\n        this._center = new Pt();\n        this._size = new Pt();\n        this._topLeft = new Pt();\n        this._bottomRight = new Pt();\n        this._inited = false;\n        this.init();\n    }\n    static fromBoundingRect(rect) {\n        let b = new Bound(new Pt(rect.left || 0, rect.top || 0), new Pt(rect.right || 0, rect.bottom || 0));\n        if (rect.width && rect.height)\n            b.size = new Pt(rect.width, rect.height);\n        return b;\n    }\n    static fromGroup(g) {\n        if (g.length < 2)\n            throw new Error(\"Cannot create a Bound from a group that has less than 2 Pt\");\n        return new Bound(g[0], g[g.length - 1]);\n    }\n    init() {\n        if (this.p1) {\n            this._size = this.p1.clone();\n            this._inited = true;\n        }\n        if (this.p1 && this.p2) {\n            let a = this.p1;\n            let b = this.p2;\n            this.topLeft = a.$min(b);\n            this._bottomRight = a.$max(b);\n            this._updateSize();\n            this._inited = true;\n        }\n    }\n    clone() {\n        return new Bound(this._topLeft.clone(), this._bottomRight.clone());\n    }\n    _updateSize() {\n        this._size = this._bottomRight.$subtract(this._topLeft).abs();\n        this._updateCenter();\n    }\n    _updateCenter() {\n        this._center = this._size.$multiply(0.5).add(this._topLeft);\n    }\n    _updatePosFromTop() {\n        this._bottomRight = this._topLeft.$add(this._size);\n        this._updateCenter();\n    }\n    _updatePosFromBottom() {\n        this._topLeft = this._bottomRight.$subtract(this._size);\n        this._updateCenter();\n    }\n    _updatePosFromCenter() {\n        let half = this._size.$multiply(0.5);\n        this._topLeft = this._center.$subtract(half);\n        this._bottomRight = this._center.$add(half);\n    }\n    get size() { return new Pt(this._size); }\n    set size(p) {\n        this._size = new Pt(p);\n        this._updatePosFromTop();\n    }\n    get center() { return new Pt(this._center); }\n    set center(p) {\n        this._center = new Pt(p);\n        this._updatePosFromCenter();\n    }\n    get topLeft() { return new Pt(this._topLeft); }\n    set topLeft(p) {\n        this._topLeft = new Pt(p);\n        this[0] = this._topLeft;\n        this._updateSize();\n    }\n    get bottomRight() { return new Pt(this._bottomRight); }\n    set bottomRight(p) {\n        this._bottomRight = new Pt(p);\n        this[1] = this._bottomRight;\n        this._updateSize();\n    }\n    get width() { return (this._size.length > 0) ? this._size.x : 0; }\n    set width(w) {\n        this._size.x = w;\n        this._updatePosFromTop();\n    }\n    get height() { return (this._size.length > 1) ? this._size.y : 0; }\n    set height(h) {\n        this._size.y = h;\n        this._updatePosFromTop();\n    }\n    get depth() { return (this._size.length > 2) ? this._size.z : 0; }\n    set depth(d) {\n        this._size.z = d;\n        this._updatePosFromTop();\n    }\n    get x() { return this.topLeft.x; }\n    get y() { return this.topLeft.y; }\n    get z() { return this.topLeft.z; }\n    get inited() { return this._inited; }\n    update() {\n        this._topLeft = this[0];\n        this._bottomRight = this[1];\n        this._updateSize();\n        return this;\n    }\n}\n//# sourceMappingURL=Pt.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Pt, Group } from \"./Pt\";\nimport { Rectangle, Circle, Polygon } from \"./Op\";\nexport const UIShape = {\n    rectangle: \"rectangle\", circle: \"circle\", polygon: \"polygon\", polyline: \"polyline\", line: \"line\"\n};\nexport const UIPointerActions = {\n    up: \"up\", down: \"down\", move: \"move\", drag: \"drag\", uidrag: \"uidrag\", drop: \"drop\", over: \"over\", out: \"out\", enter: \"enter\", leave: \"leave\", all: \"all\"\n};\nexport class UI {\n    constructor(group, shape, states = {}, id) {\n        this._holds = [];\n        this._group = Group.fromArray(group);\n        this._shape = shape;\n        this._id = id === undefined ? `ui_${(UI._counter++)}` : id;\n        this._states = states;\n        this._actions = {};\n    }\n    static fromRectangle(group, states, id) {\n        return new this(group, UIShape.rectangle, states, id);\n    }\n    static fromCircle(group, states, id) {\n        return new this(group, UIShape.circle, states, id);\n    }\n    static fromPolygon(group, states, id) {\n        return new this(group, UIShape.polygon, states, id);\n    }\n    static fromUI(ui, states, id) {\n        return new this(ui.group, ui.shape, states || ui._states, id);\n    }\n    get id() { return this._id; }\n    set id(d) { this._id = d; }\n    get group() { return this._group; }\n    set group(d) { this._group = d; }\n    get shape() { return this._shape; }\n    set shape(d) { this._shape = d; }\n    state(key, value) {\n        if (!key)\n            return null;\n        if (value !== undefined) {\n            this._states[key] = value;\n            return this;\n        }\n        return this._states[key];\n    }\n    on(key, fn) {\n        if (!this._actions[key])\n            this._actions[key] = [];\n        return UI._addHandler(this._actions[key], fn);\n    }\n    off(key, which) {\n        if (!this._actions[key])\n            return false;\n        if (which === undefined) {\n            delete this._actions[key];\n            return true;\n        }\n        else {\n            return UI._removeHandler(this._actions[key], which);\n        }\n    }\n    listen(key, p) {\n        if (this._actions[key] !== undefined) {\n            if (this._within(p) || this._holds.indexOf(key) >= 0) {\n                UI._trigger(this._actions[key], this, p, key);\n                return true;\n            }\n            else if (this._actions['all']) {\n                UI._trigger(this._actions['all'], this, p, key);\n                return true;\n            }\n        }\n        return false;\n    }\n    hold(key) {\n        this._holds.push(key);\n        return this._holds.length - 1;\n    }\n    unhold(id) {\n        if (id !== undefined) {\n            this._holds = this._holds.splice(id, 1);\n        }\n        else {\n            this._holds = [];\n        }\n    }\n    static track(uis, key, p) {\n        for (let i = 0, len = uis.length; i < len; i++) {\n            uis[i].listen(key, p);\n        }\n    }\n    render(fn) {\n        fn(this._group, this._states);\n    }\n    toString() {\n        return `UI ${this.group.toString}`;\n    }\n    _within(p) {\n        let fn = null;\n        if (this._shape === UIShape.rectangle) {\n            fn = Rectangle.withinBound;\n        }\n        else if (this._shape === UIShape.circle) {\n            fn = Circle.withinBound;\n        }\n        else if (this._shape === UIShape.polygon) {\n            fn = Polygon.hasIntersectPoint;\n        }\n        else {\n            return false;\n        }\n        return fn(this._group, p);\n    }\n    static _trigger(fns, target, pt, type) {\n        if (fns) {\n            for (let i = 0, len = fns.length; i < len; i++) {\n                if (fns[i])\n                    fns[i](target, pt, type);\n            }\n        }\n    }\n    static _addHandler(fns, fn) {\n        if (fn) {\n            fns.push(fn);\n            return fns.length - 1;\n        }\n        else {\n            return -1;\n        }\n    }\n    static _removeHandler(fns, index) {\n        if (index >= 0 && index < fns.length) {\n            let temp = fns.length;\n            fns.splice(index, 1);\n            return (temp > fns.length);\n        }\n        else {\n            return false;\n        }\n    }\n}\nUI._counter = 0;\nexport class UIButton extends UI {\n    constructor(group, shape, states = {}, id) {\n        super(group, shape, states, id);\n        this._hoverID = -1;\n        if (states.hover === undefined)\n            this._states['hover'] = false;\n        if (states.clicks === undefined)\n            this._states['clicks'] = 0;\n        const UA = UIPointerActions;\n        this.on(UA.up, (target, pt, type) => {\n            this.state('clicks', this._states.clicks + 1);\n        });\n        this.on(UA.move, (target, pt, type) => {\n            let hover = this._within(pt);\n            if (hover && !this._states.hover) {\n                this.state('hover', true);\n                UI._trigger(this._actions[UA.enter], this, pt, UA.enter);\n                var _capID = this.hold(UA.move);\n                this._hoverID = this.on(UA.move, (t, p) => {\n                    if (!this._within(p) && !this.state('dragging')) {\n                        this.state('hover', false);\n                        UI._trigger(this._actions[UA.leave], this, pt, UA.leave);\n                        this.off(UA.move, this._hoverID);\n                        this.unhold(_capID);\n                    }\n                });\n            }\n        });\n    }\n    onClick(fn) {\n        return this.on(UIPointerActions.up, fn);\n    }\n    offClick(id) {\n        return this.off(UIPointerActions.up, id);\n    }\n    onHover(enter, leave) {\n        var ids = [undefined, undefined];\n        if (enter)\n            ids[0] = this.on(UIPointerActions.enter, enter);\n        if (leave)\n            ids[1] = this.on(UIPointerActions.leave, leave);\n        return ids;\n    }\n    offHover(enterID, leaveID) {\n        var s = [false, false];\n        if (enterID === undefined || enterID >= 0)\n            s[0] = this.off(UIPointerActions.enter, enterID);\n        if (leaveID === undefined || leaveID >= 0)\n            s[1] = this.off(UIPointerActions.leave, leaveID);\n        return s;\n    }\n}\nexport class UIDragger extends UIButton {\n    constructor(group, shape, states = {}, id) {\n        super(group, shape, states, id);\n        this._draggingID = -1;\n        this._moveHoldID = -1;\n        if (states.dragging === undefined)\n            this._states['dragging'] = false;\n        if (states.offset === undefined)\n            this._states['offset'] = new Pt();\n        const UA = UIPointerActions;\n        this.on(UA.down, (target, pt, type) => {\n            this.state('dragging', true);\n            this.state('offset', new Pt(pt).subtract(target.group[0]));\n            this._moveHoldID = this.hold(UA.move);\n            this._draggingID = this.on(UA.move, (t, p) => {\n                if (this.state('dragging')) {\n                    UI._trigger(this._actions[UA.uidrag], t, p, UA.uidrag);\n                }\n            });\n        });\n        this.on(UA.up, (target, pt, type) => {\n            this.state('dragging', false);\n            this.off(UA.move, this._draggingID);\n            this.unhold(this._moveHoldID);\n            UI._trigger(this._actions[UA.drop], target, pt, type);\n        });\n    }\n    onDrag(fn) {\n        return this.on(UIPointerActions.uidrag, fn);\n    }\n    offDrag(id) {\n        return this.off(UIPointerActions.uidrag, id);\n    }\n    onDrop(fn) {\n        return this.on(UIPointerActions.drop, fn);\n    }\n    offDrop(id) {\n        return this.off(UIPointerActions.drop, id);\n    }\n}\n//# sourceMappingURL=UI.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Pt, Bound } from \"./Pt\";\nimport { UIPointerActions as UIA } from \"./UI\";\nexport class Space {\n    constructor() {\n        this.id = \"space\";\n        this.bound = new Bound();\n        this._time = { prev: 0, diff: 0, end: -1 };\n        this.players = {};\n        this.playerCount = 0;\n        this._animID = -1;\n        this._pause = false;\n        this._refresh = undefined;\n        this._pointer = new Pt();\n        this._isReady = false;\n        this._playing = false;\n    }\n    refresh(b) {\n        this._refresh = b;\n        return this;\n    }\n    add(p) {\n        let player = (typeof p == \"function\") ? { animate: p } : p;\n        let k = this.playerCount++;\n        let pid = this.id + k;\n        this.players[pid] = player;\n        player.animateID = pid;\n        if (player.resize && this.bound.inited)\n            player.resize(this.bound);\n        if (this._refresh === undefined)\n            this._refresh = true;\n        return this;\n    }\n    remove(player) {\n        delete this.players[player.animateID];\n        return this;\n    }\n    removeAll() {\n        this.players = {};\n        return this;\n    }\n    play(time = 0) {\n        this._animID = requestAnimationFrame(this.play.bind(this));\n        if (this._pause)\n            return this;\n        this._time.diff = time - this._time.prev;\n        this._time.prev = time;\n        try {\n            this.playItems(time);\n        }\n        catch (err) {\n            cancelAnimationFrame(this._animID);\n            this._playing = false;\n            throw err;\n        }\n        return this;\n    }\n    replay() {\n        this._time.end = -1;\n        this.play();\n    }\n    playItems(time) {\n        this._playing = true;\n        if (this._refresh)\n            this.clear();\n        if (this._isReady) {\n            for (let k in this.players) {\n                if (this.players[k].animate)\n                    this.players[k].animate(time, this._time.diff, this);\n            }\n        }\n        if (this._time.end >= 0 && time > this._time.end) {\n            cancelAnimationFrame(this._animID);\n            this._playing = false;\n        }\n    }\n    pause(toggle = false) {\n        this._pause = (toggle) ? !this._pause : true;\n        return this;\n    }\n    resume() {\n        this._pause = false;\n        return this;\n    }\n    stop(t = 0) {\n        this._time.end = t;\n        return this;\n    }\n    playOnce(duration = 5000) {\n        this.play();\n        this.stop(duration);\n        return this;\n    }\n    render(context) {\n        if (this._renderFunc)\n            this._renderFunc(context, this);\n        return this;\n    }\n    set customRendering(f) { this._renderFunc = f; }\n    get customRendering() { return this._renderFunc; }\n    get isPlaying() { return this._playing; }\n    get outerBound() { return this.bound.clone(); }\n    get innerBound() { return new Bound(Pt.make(this.size.length, 0), this.size.clone()); }\n    get size() { return this.bound.size.clone(); }\n    get center() { return this.size.divide(2); }\n    get width() { return this.bound.width; }\n    get height() { return this.bound.height; }\n}\nexport class MultiTouchSpace extends Space {\n    constructor() {\n        super(...arguments);\n        this._pressed = false;\n        this._dragged = false;\n        this._hasMouse = false;\n        this._hasTouch = false;\n    }\n    get pointer() {\n        let p = this._pointer.clone();\n        p.id = this._pointer.id;\n        return p;\n    }\n    bindCanvas(evt, callback) {\n        this._canvas.addEventListener(evt, callback);\n    }\n    unbindCanvas(evt, callback) {\n        this._canvas.removeEventListener(evt, callback);\n    }\n    bindMouse(_bind = true) {\n        if (_bind) {\n            this.bindCanvas(\"mousedown\", this._mouseDown.bind(this));\n            this.bindCanvas(\"mouseup\", this._mouseUp.bind(this));\n            this.bindCanvas(\"mouseover\", this._mouseOver.bind(this));\n            this.bindCanvas(\"mouseout\", this._mouseOut.bind(this));\n            this.bindCanvas(\"mousemove\", this._mouseMove.bind(this));\n            this._hasMouse = true;\n        }\n        else {\n            this.unbindCanvas(\"mousedown\", this._mouseDown.bind(this));\n            this.unbindCanvas(\"mouseup\", this._mouseUp.bind(this));\n            this.unbindCanvas(\"mouseover\", this._mouseOver.bind(this));\n            this.unbindCanvas(\"mouseout\", this._mouseOut.bind(this));\n            this.unbindCanvas(\"mousemove\", this._mouseMove.bind(this));\n            this._hasMouse = false;\n        }\n        return this;\n    }\n    bindTouch(_bind = true) {\n        if (_bind) {\n            this.bindCanvas(\"touchstart\", this._mouseDown.bind(this));\n            this.bindCanvas(\"touchend\", this._mouseUp.bind(this));\n            this.bindCanvas(\"touchmove\", this._touchMove.bind(this));\n            this.bindCanvas(\"touchcancel\", this._mouseOut.bind(this));\n            this._hasTouch = true;\n        }\n        else {\n            this.unbindCanvas(\"touchstart\", this._mouseDown.bind(this));\n            this.unbindCanvas(\"touchend\", this._mouseUp.bind(this));\n            this.unbindCanvas(\"touchmove\", this._touchMove.bind(this));\n            this.unbindCanvas(\"touchcancel\", this._mouseOut.bind(this));\n            this._hasTouch = false;\n        }\n        return this;\n    }\n    touchesToPoints(evt, which = \"touches\") {\n        if (!evt || !evt[which])\n            return [];\n        let ts = [];\n        for (var i = 0; i < evt[which].length; i++) {\n            let t = evt[which].item(i);\n            ts.push(new Pt(t.pageX - this.bound.topLeft.x, t.pageY - this.bound.topLeft.y));\n        }\n        return ts;\n    }\n    _mouseAction(type, evt) {\n        let px = 0, py = 0;\n        if (evt instanceof MouseEvent) {\n            for (let k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    let v = this.players[k];\n                    px = evt.pageX - this.outerBound.x;\n                    py = evt.pageY - this.outerBound.y;\n                    if (v.action)\n                        v.action(type, px, py, evt);\n                }\n            }\n        }\n        else {\n            for (let k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    let v = this.players[k];\n                    let c = evt.changedTouches && evt.changedTouches.length > 0;\n                    let touch = evt.changedTouches.item(0);\n                    px = (c) ? touch.pageX - this.outerBound.x : 0;\n                    py = (c) ? touch.pageY - this.outerBound.y : 0;\n                    if (v.action)\n                        v.action(type, px, py, evt);\n                }\n            }\n        }\n        if (type) {\n            this._pointer.to(px, py);\n            this._pointer.id = type;\n        }\n    }\n    _mouseDown(evt) {\n        this._mouseAction(UIA.down, evt);\n        this._pressed = true;\n        return false;\n    }\n    _mouseUp(evt) {\n        this._mouseAction(UIA.up, evt);\n        if (this._dragged)\n            this._mouseAction(UIA.drop, evt);\n        this._pressed = false;\n        this._dragged = false;\n        return false;\n    }\n    _mouseMove(evt) {\n        this._mouseAction(UIA.move, evt);\n        if (this._pressed) {\n            this._dragged = true;\n            this._mouseAction(UIA.drag, evt);\n        }\n        return false;\n    }\n    _mouseOver(evt) {\n        this._mouseAction(UIA.over, evt);\n        return false;\n    }\n    _mouseOut(evt) {\n        this._mouseAction(UIA.out, evt);\n        if (this._dragged)\n            this._mouseAction(UIA.drop, evt);\n        this._dragged = false;\n        return false;\n    }\n    _touchMove(evt) {\n        this._mouseMove(evt);\n        evt.preventDefault();\n        return false;\n    }\n}\n//# sourceMappingURL=Space.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Util } from \"./Util\";\nexport class Form {\n    constructor() {\n        this._ready = false;\n    }\n    get ready() { return this._ready; }\n    static _checkSize(pts, required = 2) {\n        if (pts.length < required) {\n            Util.warn(\"Requires 2 or more Pts in this Group.\");\n            return false;\n        }\n        return true;\n    }\n}\nexport class VisualForm extends Form {\n    constructor() {\n        super(...arguments);\n        this._filled = true;\n        this._stroked = true;\n        this._font = new Font(14, \"sans-serif\");\n    }\n    get filled() { return this._filled; }\n    set filled(b) { this._filled = b; }\n    get stroked() { return this._stroked; }\n    set stroked(b) { this._stroked = b; }\n    get currentFont() { return this._font; }\n    _multiple(groups, shape, ...rest) {\n        if (!groups)\n            return this;\n        for (let i = 0, len = groups.length; i < len; i++) {\n            this[shape](groups[i], ...rest);\n        }\n        return this;\n    }\n    fill(c) {\n        return this;\n    }\n    fillOnly(c) {\n        this.stroke(false);\n        return this.fill(c);\n    }\n    stroke(c, width, linejoin, linecap) {\n        return this;\n    }\n    strokeOnly(c, width, linejoin, linecap) {\n        this.fill(false);\n        return this.stroke(c, width, linejoin, linecap);\n    }\n    points(pts, radius, shape) {\n        if (!pts)\n            return;\n        for (let i = 0, len = pts.length; i < len; i++) {\n            this.point(pts[i], radius, shape);\n        }\n        return this;\n    }\n    circles(groups) {\n        return this._multiple(groups, \"circle\");\n    }\n    squares(groups) {\n        return this._multiple(groups, \"square\");\n    }\n    lines(groups) {\n        return this._multiple(groups, \"line\");\n    }\n    polygons(groups) {\n        return this._multiple(groups, \"polygon\");\n    }\n    rects(groups) {\n        return this._multiple(groups, \"rect\");\n    }\n}\nexport class Font {\n    constructor(size = 12, face = \"sans-serif\", weight = \"\", style = \"\", lineHeight = 1.5) {\n        this.size = size;\n        this.face = face;\n        this.style = style;\n        this.weight = weight;\n        this.lineHeight = lineHeight;\n    }\n    get value() { return `${this.style} ${this.weight} ${this.size}px/${this.lineHeight} ${this.face}`; }\n    toString() { return this.value; }\n}\n//# sourceMappingURL=Form.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Pt } from \"./Pt\";\nexport class Typography {\n    static textWidthEstimator(fn, samples = [\"M\", \"n\", \".\"], distribution = [0.06, 0.8, 0.14]) {\n        let m = samples.map(fn);\n        let avg = new Pt(distribution).dot(m);\n        return (str) => str.length * avg;\n    }\n    static truncate(fn, str, width, tail = \"\") {\n        let trim = Math.floor(str.length * Math.min(1, width / fn(str)));\n        if (trim < str.length) {\n            trim = Math.max(0, trim - tail.length);\n            return [str.substr(0, trim) + tail, trim];\n        }\n        else {\n            return [str, str.length];\n        }\n    }\n    static fontSizeToBox(box, ratio = 1, byHeight = true) {\n        let i = byHeight ? 1 : 0;\n        let h = (box[1][i] - box[0][i]);\n        let f = ratio * h;\n        return function (b) {\n            let nh = (b[1][i] - b[0][i]) / h;\n            return f * nh;\n        };\n    }\n    static fontSizeToThreshold(threshold, direction = 0) {\n        return function (defaultSize, val) {\n            let d = defaultSize * val / threshold;\n            if (direction < 0)\n                return Math.min(d, defaultSize);\n            if (direction > 0)\n                return Math.max(d, defaultSize);\n            return d;\n        };\n    }\n}\n//# sourceMappingURL=Typography.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { MultiTouchSpace } from './Space';\nimport { VisualForm, Font } from \"./Form\";\nimport { Pt, Group, Bound } from \"./Pt\";\nimport { Const } from \"./Util\";\nimport { Typography as Typo } from \"./Typography\";\nimport { Rectangle } from './Op';\nexport class CanvasSpace extends MultiTouchSpace {\n    constructor(elem, callback) {\n        super();\n        this._pixelScale = 1;\n        this._autoResize = true;\n        this._bgcolor = \"#e1e9f0\";\n        this._offscreen = false;\n        this._initialResize = false;\n        var _selector = null;\n        var _existed = false;\n        this.id = \"pt\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            this.id = \"pts_existing_space\";\n        }\n        else {\n            let id = elem;\n            id = (elem[0] === \"#\" || elem[0] === \".\") ? elem : \"#\" + elem;\n            _selector = document.querySelector(id);\n            _existed = true;\n            this.id = id.substr(1);\n        }\n        if (!_selector) {\n            this._container = this._createElement(\"div\", this.id + \"_container\");\n            this._canvas = this._createElement(\"canvas\", this.id);\n            this._container.appendChild(this._canvas);\n            document.body.appendChild(this._container);\n            _existed = false;\n        }\n        else if (_selector.nodeName.toLowerCase() != \"canvas\") {\n            this._container = _selector;\n            this._canvas = this._createElement(\"canvas\", this.id + \"_canvas\");\n            this._container.appendChild(this._canvas);\n            this._initialResize = true;\n        }\n        else {\n            this._canvas = _selector;\n            this._container = _selector.parentElement;\n            this._autoResize = false;\n        }\n        setTimeout(this._ready.bind(this, callback), 100);\n        this._ctx = this._canvas.getContext('2d');\n    }\n    _createElement(elem = \"div\", id) {\n        let d = document.createElement(elem);\n        d.setAttribute(\"id\", id);\n        return d;\n    }\n    _ready(callback) {\n        if (!this._container)\n            throw new Error(`Cannot initiate #${this.id} element`);\n        this._isReady = true;\n        this._resizeHandler(null);\n        this.clear(this._bgcolor);\n        this._canvas.dispatchEvent(new Event(\"ready\"));\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                if (this.players[k].start)\n                    this.players[k].start(this.bound.clone(), this);\n            }\n        }\n        this._pointer = this.center;\n        this._initialResize = false;\n        if (callback)\n            callback(this.bound, this._canvas);\n    }\n    setup(opt) {\n        if (opt.bgcolor)\n            this._bgcolor = opt.bgcolor;\n        this.autoResize = (opt.resize != undefined) ? opt.resize : false;\n        if (opt.retina !== false) {\n            let r1 = window.devicePixelRatio || 1;\n            let r2 = this._ctx.webkitBackingStorePixelRatio || this._ctx.mozBackingStorePixelRatio || this._ctx.msBackingStorePixelRatio || this._ctx.oBackingStorePixelRatio || this._ctx.backingStorePixelRatio || 1;\n            this._pixelScale = Math.max(1, r1 / r2);\n        }\n        if (opt.offscreen) {\n            this._offscreen = true;\n            this._offCanvas = this._createElement(\"canvas\", this.id + \"_offscreen\");\n            this._offCtx = this._offCanvas.getContext('2d');\n        }\n        else {\n            this._offscreen = false;\n        }\n        return this;\n    }\n    set autoResize(auto) {\n        this._autoResize = auto;\n        if (auto) {\n            window.addEventListener('resize', this._resizeHandler.bind(this));\n        }\n        else {\n            window.removeEventListener('resize', this._resizeHandler.bind(this));\n        }\n    }\n    get autoResize() { return this._autoResize; }\n    resize(b, evt) {\n        this.bound = b;\n        this._canvas.width = this.bound.size.x * this._pixelScale;\n        this._canvas.height = this.bound.size.y * this._pixelScale;\n        this._canvas.style.width = Math.floor(this.bound.size.x) + \"px\";\n        this._canvas.style.height = Math.floor(this.bound.size.y) + \"px\";\n        if (this._offscreen) {\n            this._offCanvas.width = this.bound.size.x * this._pixelScale;\n            this._offCanvas.height = this.bound.size.y * this._pixelScale;\n        }\n        if (this._pixelScale != 1) {\n            this._ctx.scale(this._pixelScale, this._pixelScale);\n            this._ctx.translate(0.5, 0.5);\n            if (this._offscreen) {\n                this._offCtx.scale(this._pixelScale, this._pixelScale);\n                this._offCtx.translate(0.5, 0.5);\n            }\n        }\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                let p = this.players[k];\n                if (p.resize)\n                    p.resize(this.bound, evt);\n            }\n        }\n        this.render(this._ctx);\n        if (evt && !this.isPlaying)\n            this.playOnce(0);\n        return this;\n    }\n    _resizeHandler(evt) {\n        let b = (this._autoResize || this._initialResize) ? this._container.getBoundingClientRect() : this._canvas.getBoundingClientRect();\n        if (b) {\n            let box = Bound.fromBoundingRect(b);\n            box.center = box.center.add(window.pageXOffset, window.pageYOffset);\n            this.resize(box, evt);\n        }\n    }\n    set background(bg) { this._bgcolor = bg; }\n    get background() { return this._bgcolor; }\n    get pixelScale() {\n        return this._pixelScale;\n    }\n    get hasOffscreen() {\n        return this._offscreen;\n    }\n    get offscreenCtx() { return this._offCtx; }\n    get offscreenCanvas() { return this._offCanvas; }\n    getForm() { return new CanvasForm(this); }\n    get element() {\n        return this._canvas;\n    }\n    get parent() {\n        return this._container;\n    }\n    get ready() {\n        return this._isReady;\n    }\n    get ctx() { return this._ctx; }\n    clear(bg) {\n        if (bg)\n            this._bgcolor = bg;\n        let lastColor = this._ctx.fillStyle;\n        if (this._bgcolor && this._bgcolor != \"transparent\") {\n            this._ctx.fillStyle = this._bgcolor;\n            this._ctx.fillRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n        }\n        else {\n            this._ctx.clearRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n        }\n        this._ctx.fillStyle = lastColor;\n        return this;\n    }\n    clearOffscreen(bg) {\n        if (this._offscreen) {\n            if (bg) {\n                this._offCtx.fillStyle = bg;\n                this._offCtx.fillRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n            }\n            else {\n                this._offCtx.clearRect(-1, -1, this._offCanvas.width + 1, this._offCanvas.height + 1);\n            }\n        }\n        return this;\n    }\n    playItems(time) {\n        if (this._isReady) {\n            this._ctx.save();\n            if (this._offscreen)\n                this._offCtx.save();\n            super.playItems(time);\n            this._ctx.restore();\n            if (this._offscreen)\n                this._offCtx.restore();\n            this.render(this._ctx);\n        }\n    }\n}\nexport class CanvasForm extends VisualForm {\n    constructor(space) {\n        super();\n        this._style = {\n            fillStyle: \"#f03\", strokeStyle: \"#fff\",\n            lineWidth: 1, lineJoin: \"bevel\", lineCap: \"butt\",\n        };\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx = this._space.ctx;\n                this._ctx.fillStyle = this._style.fillStyle;\n                this._ctx.strokeStyle = this._style.strokeStyle;\n                this._ctx.lineJoin = \"bevel\";\n                this._ctx.font = this._font.value;\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    useOffscreen(off = true, clear = false) {\n        if (clear)\n            this._space.clearOffscreen((typeof clear == \"string\") ? clear : null);\n        this._ctx = (this._space.hasOffscreen && off) ? this._space.offscreenCtx : this._space.ctx;\n        return this;\n    }\n    renderOffscreen(offset = [0, 0]) {\n        if (this._space.hasOffscreen) {\n            this._space.ctx.drawImage(this._space.offscreenCanvas, offset[0], offset[1], this._space.width, this._space.height);\n        }\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.filled = c;\n        }\n        else {\n            this.filled = true;\n            this._style.fillStyle = c;\n            this._ctx.fillStyle = c;\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.stroked = c;\n        }\n        else {\n            this.stroked = true;\n            this._style.strokeStyle = c;\n            this._ctx.strokeStyle = c;\n            if (width) {\n                this._ctx.lineWidth = width;\n                this._style.lineWidth = width;\n            }\n            if (linejoin) {\n                this._ctx.lineJoin = linejoin;\n                this._style.lineJoin = linejoin;\n            }\n            if (linecap) {\n                this._ctx.lineCap = linecap;\n                this._style.lineCap = linecap;\n            }\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n            this._ctx.font = this._font.value;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        if (this._estimateTextWidth)\n            this.fontWidthEstimate(true);\n        return this;\n    }\n    fontWidthEstimate(estimate = true) {\n        this._estimateTextWidth = (estimate) ? Typo.textWidthEstimator(((c) => this._ctx.measureText(c).width)) : undefined;\n        return this;\n    }\n    getTextWidth(c) {\n        return (!this._estimateTextWidth) ? this._ctx.measureText(c + \" .\").width : this._estimateTextWidth(c);\n    }\n    _textTruncate(str, width, tail = \"\") {\n        return Typo.truncate(this.getTextWidth.bind(this), str, width, tail);\n    }\n    _textAlign(box, vertical, offset, center) {\n        if (!center)\n            center = Rectangle.center(box);\n        var px = box[0][0];\n        if (this._ctx.textAlign == \"end\" || this._ctx.textAlign == \"right\") {\n            px = box[1][0];\n        }\n        else if (this._ctx.textAlign == \"center\" || this._ctx.textAlign == \"middle\") {\n            px = center[0];\n        }\n        var py = center[1];\n        if (vertical == \"top\" || vertical == \"start\") {\n            py = box[0][1];\n        }\n        else if (vertical == \"end\" || vertical == \"bottom\") {\n            py = box[1][1];\n        }\n        return (offset) ? new Pt(px + offset[0], py + offset[1]) : new Pt(px, py);\n    }\n    reset() {\n        for (let k in this._style) {\n            if (this._style.hasOwnProperty(k)) {\n                this._ctx[k] = this._style[k];\n            }\n        }\n        this._font = new Font();\n        this._ctx.font = this._font.value;\n        return this;\n    }\n    _paint() {\n        if (this._filled)\n            this._ctx.fill();\n        if (this._stroked)\n            this._ctx.stroke();\n    }\n    point(p, radius = 5, shape = \"square\") {\n        if (!p)\n            return;\n        if (!CanvasForm[shape])\n            throw new Error(`${shape} is not a static function of CanvasForm`);\n        CanvasForm[shape](this._ctx, p, radius);\n        this._paint();\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        if (!pt)\n            return;\n        ctx.beginPath();\n        ctx.arc(pt[0], pt[1], radius, 0, Const.two_pi, false);\n        ctx.closePath();\n    }\n    circle(pts) {\n        CanvasForm.circle(this._ctx, pts[0], pts[1][0]);\n        this._paint();\n        return this;\n    }\n    static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n        if (!pt)\n            return;\n        ctx.beginPath();\n        ctx.arc(pt[0], pt[1], radius, startAngle, endAngle, cc);\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        CanvasForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n        this._paint();\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        if (!pt)\n            return;\n        let x1 = pt[0] - halfsize;\n        let y1 = pt[1] - halfsize;\n        let x2 = pt[0] + halfsize;\n        let y2 = pt[1] + halfsize;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.lineTo(x2, y2);\n        ctx.lineTo(x2, y1);\n        ctx.closePath();\n    }\n    square(pt, halfsize) {\n        CanvasForm.square(this._ctx, pt, halfsize);\n        this._paint();\n        return this;\n    }\n    static line(ctx, pts) {\n        if (pts.length < 2)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        for (let i = 1, len = pts.length; i < len; i++) {\n            if (pts[i])\n                ctx.lineTo(pts[i][0], pts[i][1]);\n        }\n    }\n    line(pts) {\n        CanvasForm.line(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static polygon(ctx, pts) {\n        if (pts.length < 2)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        for (let i = 1, len = pts.length; i < len; i++) {\n            if (pts[i])\n                ctx.lineTo(pts[i][0], pts[i][1]);\n        }\n        ctx.closePath();\n    }\n    polygon(pts) {\n        CanvasForm.polygon(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (pts.length < 2)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[0][0], pts[1][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n        ctx.lineTo(pts[1][0], pts[0][1]);\n        ctx.closePath();\n    }\n    rect(pts) {\n        CanvasForm.rect(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static image(ctx, img, target = new Pt(), orig) {\n        if (typeof target[0] === \"number\") {\n            ctx.drawImage(img, target[0], target[1]);\n        }\n        else {\n            let t = target;\n            if (orig) {\n                ctx.drawImage(img, orig[0][0], orig[0][1], orig[1][0] - orig[0][0], orig[1][1] - orig[0][1], t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]);\n            }\n            else {\n                ctx.drawImage(img, t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]);\n            }\n        }\n    }\n    image(img, target, original) {\n        CanvasForm.image(this._ctx, img, target, original);\n        return this;\n    }\n    static text(ctx, pt, txt, maxWidth) {\n        if (!pt)\n            return;\n        ctx.fillText(txt, pt[0], pt[1], maxWidth);\n    }\n    text(pt, txt, maxWidth) {\n        CanvasForm.text(this._ctx, pt, txt, maxWidth);\n        return this;\n    }\n    textBox(box, txt, verticalAlign = \"middle\", tail = \"\", overrideBaseline = true) {\n        if (overrideBaseline)\n            this._ctx.textBaseline = verticalAlign;\n        let size = Rectangle.size(box);\n        let t = this._textTruncate(txt, size[0], tail);\n        this.text(this._textAlign(box, verticalAlign), t[0]);\n        return this;\n    }\n    paragraphBox(box, txt, lineHeight = 1.2, verticalAlign = \"top\", crop = true) {\n        let size = Rectangle.size(box);\n        this._ctx.textBaseline = \"top\";\n        let lstep = this._font.size * lineHeight;\n        let nextLine = (sub, buffer = [], cc = 0) => {\n            if (!sub)\n                return buffer;\n            if (crop && cc * lstep > size[1] - lstep * 2)\n                return buffer;\n            if (cc > 10000)\n                throw new Error(\"max recursion reached (10000)\");\n            let t = this._textTruncate(sub, size[0], \"\");\n            let newln = t[0].indexOf(\"\\n\");\n            if (newln >= 0) {\n                buffer.push(t[0].substr(0, newln));\n                return nextLine(sub.substr(newln + 1), buffer, cc + 1);\n            }\n            let dt = t[0].lastIndexOf(\" \") + 1;\n            if (dt <= 0 || t[1] === sub.length)\n                dt = undefined;\n            let line = t[0].substr(0, dt);\n            buffer.push(line);\n            return (t[1] <= 0 || t[1] === sub.length) ? buffer : nextLine(sub.substr((dt || t[1])), buffer, cc + 1);\n        };\n        let lines = nextLine(txt);\n        let lsize = lines.length * lstep;\n        let lbox = box;\n        if (verticalAlign == \"middle\" || verticalAlign == \"center\") {\n            let lpad = (size[1] - lsize) / 2;\n            if (crop)\n                lpad = Math.max(0, lpad);\n            lbox = new Group(box[0].$add(0, lpad), box[1].$subtract(0, lpad));\n        }\n        else if (verticalAlign == \"bottom\") {\n            lbox = new Group(box[0].$add(0, size[1] - lsize), box[1]);\n        }\n        else {\n            lbox = new Group(box[0], box[0].$add(size[0], lsize));\n        }\n        let center = Rectangle.center(lbox);\n        for (let i = 0, len = lines.length; i < len; i++) {\n            this.text(this._textAlign(lbox, \"top\", [0, i * lstep], center), lines[i]);\n        }\n        return this;\n    }\n    alignText(alignment = \"left\", baseline = \"alphabetic\") {\n        if (baseline == \"center\")\n            baseline = \"middle\";\n        if (baseline == \"baseline\")\n            baseline = \"alphabetic\";\n        this._ctx.textAlign = alignment;\n        this._ctx.textBaseline = baseline;\n        return this;\n    }\n    log(txt) {\n        let w = this._ctx.measureText(txt).width + 20;\n        this.stroke(false).fill(\"rgba(0,0,0,.4)\").rect([[0, 0], [w, 20]]);\n        this.fill(\"#fff\").text([10, 14], txt);\n        return this;\n    }\n}\n//# sourceMappingURL=Canvas.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Pt, Group } from \"./Pt\";\nimport { Line, Triangle } from \"./Op\";\nimport { Const } from \"./Util\";\nimport { Num, Geom } from \"./Num\";\nimport { Vec } from \"./LinearAlgebra\";\nexport class Create {\n    static distributeRandom(bound, count, dimensions = 2) {\n        let pts = new Group();\n        for (let i = 0; i < count; i++) {\n            let p = [bound.x + Math.random() * bound.width];\n            if (dimensions > 1)\n                p.push(bound.y + Math.random() * bound.height);\n            if (dimensions > 2)\n                p.push(bound.z + Math.random() * bound.depth);\n            pts.push(new Pt(p));\n        }\n        return pts;\n    }\n    static distributeLinear(line, count) {\n        let ln = Line.subpoints(line, count - 2);\n        ln.unshift(line[0]);\n        ln.push(line[line.length - 1]);\n        return ln;\n    }\n    static gridPts(bound, columns, rows, orientation = [0.5, 0.5]) {\n        if (columns === 0 || rows === 0)\n            throw new Error(\"grid columns and rows cannot be 0\");\n        let unit = bound.size.$subtract(1).$divide(columns, rows);\n        let offset = unit.$multiply(orientation);\n        let g = new Group();\n        for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < columns; c++) {\n                g.push(bound.topLeft.$add(unit.$multiply(c, r)).add(offset));\n            }\n        }\n        return g;\n    }\n    static gridCells(bound, columns, rows) {\n        if (columns === 0 || rows === 0)\n            throw new Error(\"grid columns and rows cannot be 0\");\n        let unit = bound.size.$subtract(1).divide(columns, rows);\n        let g = [];\n        for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < columns; c++) {\n                g.push(new Group(bound.topLeft.$add(unit.$multiply(c, r)), bound.topLeft.$add(unit.$multiply(c, r).add(unit))));\n            }\n        }\n        return g;\n    }\n    static radialPts(center, radius, count) {\n        let g = new Group();\n        let a = Const.two_pi / count;\n        for (let i = 0; i < count; i++) {\n            g.push(new Pt(center).toAngle(a * i - Const.half_pi, radius, true));\n        }\n        return g;\n    }\n    static noisePts(pts, dx = 0.01, dy = 0.01, rows = 0, columns = 0) {\n        let seed = Math.random();\n        let g = new Group();\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let np = new Noise(pts[i]);\n            let r = (rows && rows > 0) ? Math.floor(i / rows) : i;\n            let c = (columns && columns > 0) ? i % columns : i;\n            np.initNoise(dx * c, dy * r);\n            np.seed(seed);\n            g.push(np);\n        }\n        return g;\n    }\n    static delaunay(pts) {\n        return Delaunay.from(pts);\n    }\n}\nconst grad3 = [\n    [1, 1, 0], [-1, 1, 0], [1, -1, 0], [-1, -1, 0],\n    [1, 0, 1], [-1, 0, 1], [1, 0, -1], [-1, 0, -1],\n    [0, 1, 1], [0, -1, 1], [0, 1, -1], [0, -1, -1]\n];\nconst permTable = [151, 160, 137, 91, 90, 15,\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\n    129, 22, 39, 253, 9, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\n];\nexport class Noise extends Pt {\n    constructor(...args) {\n        super(...args);\n        this.perm = [];\n        this._n = new Pt(0.01, 0.01);\n        this.perm = permTable.concat(permTable);\n    }\n    initNoise(...args) {\n        this._n = new Pt(...args);\n    }\n    step(x = 0, y = 0) {\n        this._n.add(x, y);\n    }\n    seed(s) {\n        if (s > 0 && s < 1)\n            s *= 65536;\n        s = Math.floor(s);\n        if (s < 256)\n            s |= s << 8;\n        for (let i = 0; i < 255; i++) {\n            let v = (i & 1) ? permTable[i] ^ (s & 255) : permTable[i] ^ ((s >> 8) & 255);\n            this.perm[i] = this.perm[i + 256] = v;\n        }\n    }\n    noise2D() {\n        let i = Math.max(0, Math.floor(this._n[0])) % 255;\n        let j = Math.max(0, Math.floor(this._n[1])) % 255;\n        let x = (this._n[0] % 255) - i;\n        let y = (this._n[1] % 255) - j;\n        let n00 = Vec.dot(grad3[(i + this.perm[j]) % 12], [x, y, 0]);\n        let n01 = Vec.dot(grad3[(i + this.perm[j + 1]) % 12], [x, y - 1, 0]);\n        let n10 = Vec.dot(grad3[(i + 1 + this.perm[j]) % 12], [x - 1, y, 0]);\n        let n11 = Vec.dot(grad3[(i + 1 + this.perm[j + 1]) % 12], [x - 1, y - 1, 0]);\n        let _fade = (f) => f * f * f * (f * (f * 6 - 15) + 10);\n        let tx = _fade(x);\n        return Num.lerp(Num.lerp(n00, n10, tx), Num.lerp(n01, n11, tx), _fade(y));\n    }\n}\nexport class Delaunay extends Group {\n    constructor() {\n        super(...arguments);\n        this._mesh = [];\n    }\n    delaunay(triangleOnly = true) {\n        if (this.length < 3)\n            return [];\n        this._mesh = [];\n        let n = this.length;\n        let indices = [];\n        for (let i = 0; i < n; i++)\n            indices[i] = i;\n        indices.sort((i, j) => this[j][0] - this[i][0]);\n        let pts = this.slice();\n        let st = this._superTriangle();\n        pts = pts.concat(st);\n        let opened = [this._circum(n, n + 1, n + 2, st)];\n        let closed = [];\n        let tris = [];\n        for (let i = 0, len = indices.length; i < len; i++) {\n            let c = indices[i];\n            let edges = [];\n            let j = opened.length;\n            if (!this._mesh[c])\n                this._mesh[c] = {};\n            while (j--) {\n                let circum = opened[j];\n                let radius = circum.circle[1][0];\n                let d = pts[c].$subtract(circum.circle[0]);\n                if (d[0] > 0 && d[0] * d[0] > radius * radius) {\n                    closed.push(circum);\n                    tris.push(circum.triangle);\n                    opened.splice(j, 1);\n                    continue;\n                }\n                if (d[0] * d[0] + d[1] * d[1] - radius * radius > Const.epsilon) {\n                    continue;\n                }\n                edges.push(circum.i, circum.j, circum.j, circum.k, circum.k, circum.i);\n                opened.splice(j, 1);\n            }\n            Delaunay._dedupe(edges);\n            j = edges.length;\n            while (j > 1) {\n                opened.push(this._circum(edges[--j], edges[--j], c, false, pts));\n            }\n        }\n        for (let i = 0, len = opened.length; i < len; i++) {\n            let o = opened[i];\n            if (o.i < n && o.j < n && o.k < n) {\n                closed.push(o);\n                tris.push(o.triangle);\n                this._cache(o);\n            }\n        }\n        return (triangleOnly) ? tris : closed;\n    }\n    voronoi() {\n        let vs = [];\n        let n = this._mesh;\n        for (let i = 0, len = n.length; i < len; i++) {\n            vs.push(this.neighborPts(i, true));\n        }\n        return vs;\n    }\n    mesh() {\n        return this._mesh;\n    }\n    neighborPts(i, sort = false) {\n        let cs = new Group();\n        let n = this._mesh;\n        for (let k in n[i]) {\n            if (n[i].hasOwnProperty(k))\n                cs.push(n[i][k].circle[0]);\n        }\n        return (sort) ? Geom.sortEdges(cs) : cs;\n    }\n    neighbors(i) {\n        let cs = [];\n        let n = this._mesh;\n        for (let k in n[i]) {\n            if (n[i].hasOwnProperty(k))\n                cs.push(n[i][k]);\n        }\n        return cs;\n    }\n    _cache(o) {\n        this._mesh[o.i][`${Math.min(o.j, o.k)}-${Math.max(o.j, o.k)}`] = o;\n        this._mesh[o.j][`${Math.min(o.i, o.k)}-${Math.max(o.i, o.k)}`] = o;\n        this._mesh[o.k][`${Math.min(o.i, o.j)}-${Math.max(o.i, o.j)}`] = o;\n    }\n    _superTriangle() {\n        let minPt = this[0];\n        let maxPt = this[0];\n        for (let i = 1, len = this.length; i < len; i++) {\n            minPt = minPt.$min(this[i]);\n            maxPt = maxPt.$max(this[i]);\n        }\n        let d = maxPt.$subtract(minPt);\n        let mid = minPt.$add(maxPt).divide(2);\n        let dmax = Math.max(d[0], d[1]);\n        return new Group(mid.$subtract(20 * dmax, dmax), mid.$add(0, 20 * dmax), mid.$add(20 * dmax, -dmax));\n    }\n    _triangle(i, j, k, pts = this) {\n        return new Group(pts[i], pts[j], pts[k]);\n    }\n    _circum(i, j, k, tri, pts = this) {\n        let t = tri || this._triangle(i, j, k, pts);\n        return {\n            i: i,\n            j: j,\n            k: k,\n            triangle: t,\n            circle: Triangle.circumcircle(t)\n        };\n    }\n    static _dedupe(edges) {\n        let j = edges.length;\n        while (j > 1) {\n            let b = edges[--j];\n            let a = edges[--j];\n            let i = j;\n            while (i > 1) {\n                let n = edges[--i];\n                let m = edges[--i];\n                if ((a == m && b == n) || (a == n && b == m)) {\n                    edges.splice(j, 2);\n                    edges.splice(i, 2);\n                    break;\n                }\n            }\n        }\n        return edges;\n    }\n}\n//# sourceMappingURL=Create.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { Pt, Group } from \"./Pt\";\nimport { Util } from \"./Util\";\nimport { Num, Geom } from \"./Num\";\nexport class Color extends Pt {\n    constructor(...args) {\n        super(...args);\n        this._mode = \"rgb\";\n        this._isNorm = false;\n    }\n    static from(...args) {\n        let p = [1, 1, 1, 1];\n        let c = Util.getArgs(args);\n        for (let i = 0, len = p.length; i < len; i++) {\n            if (i < c.length)\n                p[i] = c[i];\n        }\n        return new Color(p);\n    }\n    static fromHex(hex) {\n        if (hex[0] == \"#\")\n            hex = hex.substr(1);\n        if (hex.length <= 3) {\n            let fn = (i) => hex[i] || \"F\";\n            hex = `${fn(0)}${fn(0)}${fn(1)}${fn(1)}${fn(2)}${fn(2)}`;\n        }\n        let alpha = 1;\n        if (hex.length === 8) {\n            alpha = hex.substr(6) && 0xFF / 255;\n            hex = hex.substring(0, 6);\n        }\n        let hexVal = parseInt(hex, 16);\n        return new Color(hexVal >> 16, hexVal >> 8 & 0xFF, hexVal & 0xFF, alpha);\n    }\n    static rgb(...args) { return Color.from(...args).toMode(\"rgb\"); }\n    static hsl(...args) { return Color.from(...args).toMode(\"hsl\"); }\n    static hsb(...args) { return Color.from(...args).toMode(\"hsb\"); }\n    static lab(...args) { return Color.from(...args).toMode(\"lab\"); }\n    static lch(...args) { return Color.from(...args).toMode(\"lch\"); }\n    static luv(...args) { return Color.from(...args).toMode(\"luv\"); }\n    static xyz(...args) { return Color.from(...args).toMode(\"xyz\"); }\n    static maxValues(mode) { return Color.ranges[mode].zipSlice(1).$take([0, 1, 2]); }\n    get hex() { return this.toString(\"hex\"); }\n    get rgb() { return this.toString(\"rgb\"); }\n    get rgba() { return this.toString(\"rgba\"); }\n    clone() {\n        let c = new Color(this);\n        c.toMode(this._mode);\n        return c;\n    }\n    toMode(mode, convert = false) {\n        if (convert) {\n            let fname = this._mode.toUpperCase() + \"to\" + mode.toUpperCase();\n            if (Color[fname]) {\n                this.to(Color[fname](this, this._isNorm, this._isNorm));\n            }\n            else {\n                throw new Error(\"Cannot convert color with \" + fname);\n            }\n        }\n        this._mode = mode;\n        return this;\n    }\n    get mode() { return this._mode; }\n    get r() { return this[0]; }\n    set r(n) { this[0] = n; }\n    get g() { return this[1]; }\n    set g(n) { this[1] = n; }\n    get b() { return this[2]; }\n    set b(n) { this[2] = n; }\n    get h() { return (this._mode == \"lch\") ? this[2] : this[0]; }\n    set h(n) {\n        let i = (this._mode == \"lch\") ? 2 : 0;\n        this[i] = n;\n    }\n    get s() { return this[1]; }\n    set s(n) { this[1] = n; }\n    get l() { return (this._mode == \"hsl\") ? this[2] : this[0]; }\n    set l(n) {\n        let i = (this._mode == \"hsl\") ? 2 : 0;\n        this[i] = n;\n    }\n    get a() { return this[1]; }\n    set a(n) { this[1] = n; }\n    get c() { return this[1]; }\n    set c(n) { this[1] = n; }\n    get u() { return this[1]; }\n    set u(n) { this[1] = n; }\n    get v() { return this[2]; }\n    set v(n) { this[2] = n; }\n    get alpha() { return (this.length > 3) ? this[3] : 1; }\n    get normalized() { return this._isNorm; }\n    set normalized(b) { this._isNorm = b; }\n    normalize(toNorm = true) {\n        if (this._isNorm == toNorm)\n            return this;\n        let ranges = Color.ranges[this._mode];\n        for (let i = 0; i < 3; i++) {\n            this[i] = (!toNorm)\n                ? Num.mapToRange(this[i], 0, 1, ranges[i][0], ranges[i][1])\n                : Num.mapToRange(this[i], ranges[i][0], ranges[i][1], 0, 1);\n        }\n        this._isNorm = toNorm;\n        return this;\n    }\n    $normalize(toNorm = true) { return this.clone().normalize(toNorm); }\n    toString(format = \"mode\") {\n        if (format == \"hex\") {\n            let _hex = (n) => {\n                let s = Math.floor(n).toString(16);\n                return (s.length < 2) ? '0' + s : s;\n            };\n            return `#${_hex(this[0])}${_hex(this[1])}${_hex(this[2])}`;\n        }\n        else if (format == \"rgba\") {\n            return `rgba(${Math.floor(this[0])},${Math.floor(this[1])},${Math.floor(this[2])},${this.alpha}`;\n        }\n        else if (format == \"rgb\") {\n            return `rgb(${Math.floor(this[0])},${Math.floor(this[1])},${Math.floor(this[2])}`;\n        }\n        else {\n            return `${this._mode}(${this[0]},${this[1]},${this[2]},${this.alpha})`;\n        }\n    }\n    static RGBtoHSL(rgb, normalizedInput = false, normalizedOutput = false) {\n        let [r, g, b] = (!normalizedInput) ? rgb.$normalize() : rgb;\n        let max = Math.max(r, g, b);\n        let min = Math.min(r, g, b);\n        let h = (max + min) / 2;\n        let s = h;\n        let l = h;\n        if (max == min) {\n            h = 0;\n            s = 0;\n        }\n        else {\n            let d = max - min;\n            s = (l > 0.5) ? d / (2 - max - min) : d / (max + min);\n            h = 0;\n            if (max === r) {\n                h = (g - b) / d + ((g < b) ? 6 : 0);\n            }\n            else if (max === g) {\n                h = (b - r) / d + 2;\n            }\n            else if (max === b) {\n                h = (r - g) / d + 4;\n            }\n        }\n        return Color.hsl(((normalizedOutput) ? h / 60 : h * 60), s, l, rgb.alpha);\n    }\n    static HSLtoRGB(hsl, normalizedInput = false, normalizedOutput = false) {\n        let [h, s, l] = hsl;\n        if (!normalizedInput)\n            h = h / 360;\n        if (s == 0)\n            return Color.rgb(l * 255, l * 255, l * 255, hsl.alpha);\n        let q = (l <= 0.5) ? l * (1 + s) : l + s - (l * s);\n        let p = 2 * l - q;\n        let convert = (t) => {\n            t = (t < 0) ? t + 1 : (t > 1) ? t - 1 : t;\n            if (t * 6 < 1) {\n                return p + (q - p) * t * 6;\n            }\n            else if (t * 2 < 1) {\n                return q;\n            }\n            else if (t * 3 < 2) {\n                return p + (q - p) * ((2 / 3) - t) * 6;\n            }\n            else {\n                return p;\n            }\n        };\n        let sc = (normalizedOutput) ? 1 : 255;\n        return Color.rgb(sc * convert((h + 1 / 3)), sc * convert(h), sc * convert((h - 1 / 3)), hsl.alpha);\n    }\n    static RGBtoHSB(rgb, normalizedInput = false, normalizedOutput = false) {\n        let [r, g, b] = (!normalizedInput) ? rgb.$normalize() : rgb;\n        let max = Math.max(r, g, b);\n        let min = Math.min(r, g, b);\n        let d = max - min;\n        let h = 0;\n        let s = (max === 0) ? 0 : d / max;\n        let v = max;\n        if (max != min) {\n            if (max === r) {\n                h = (g - b) / d + ((g < b) ? 6 : 0);\n            }\n            else if (max === g) {\n                h = (b - r) / d + 2;\n            }\n            else if (max === b) {\n                h = (r - g) / d + 4;\n            }\n        }\n        return Color.hsb(((normalizedOutput) ? h / 60 : h * 60), s, v, rgb.alpha);\n    }\n    static HSBtoRGB(hsb, normalizedInput = false, normalizedOutput = false) {\n        let [h, s, v] = hsb;\n        if (!normalizedInput)\n            h = h / 360;\n        let i = Math.floor(h * 6);\n        let f = h * 6 - i;\n        let p = v * (1 - s);\n        let q = v * (1 - f * s);\n        let t = v * (1 - (1 - f) * s);\n        let pick = [\n            [v, t, p], [q, v, p], [p, v, t],\n            [p, q, v], [t, p, v], [v, p, q]\n        ];\n        let c = pick[i % 6];\n        let sc = (normalizedOutput) ? 1 : 255;\n        return Color.rgb(sc * c[0], sc * c[1], sc * c[2], hsb.alpha);\n    }\n    static RGBtoLAB(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.XYZtoLAB(Color.RGBtoXYZ(c), false, normalizedOutput);\n    }\n    static LABtoRGB(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        return Color.XYZtoRGB(Color.LABtoXYZ(c), false, normalizedOutput);\n    }\n    static RGBtoLCH(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.LABtoLCH(Color.RGBtoLAB(c), false, normalizedOutput);\n    }\n    static LCHtoRGB(lch, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lch.$normalize(false) : lch;\n        return Color.LABtoRGB(Color.LCHtoLAB(c), false, normalizedOutput);\n    }\n    static RGBtoLUV(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.XYZtoLUV(Color.RGBtoXYZ(c), false, normalizedOutput);\n    }\n    static LUVtoRGB(luv, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? luv.$normalize(false) : luv;\n        return Color.XYZtoRGB(Color.LUVtoXYZ(c), false, normalizedOutput);\n    }\n    static RGBtoXYZ(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (!normalizedInput) ? rgb.$normalize() : rgb.clone();\n        for (let i = 0; i < 3; i++) {\n            c[i] = (c[i] > 0.04045) ? Math.pow((c[i] + 0.055) / 1.055, 2.4) : c[i] / 12.92;\n            if (!normalizedOutput)\n                c[i] = c[i] * 100;\n        }\n        let cc = Color.xyz(c[0] * 0.4124564 + c[1] * 0.3575761 + c[2] * 0.1804375, c[0] * 0.2126729 + c[1] * 0.7151522 + c[2] * 0.0721750, c[0] * 0.0193339 + c[1] * 0.1191920 + c[2] * 0.9503041, rgb.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoRGB(xyz, normalizedInput = false, normalizedOutput = false) {\n        let [x, y, z] = (!normalizedInput) ? xyz.$normalize() : xyz;\n        let rgb = [\n            x * 3.2404542 + y * -1.5371385 + z * -0.4985314,\n            x * -0.9692660 + y * 1.8760108 + z * 0.0415560,\n            x * 0.0556434 + y * -0.2040259 + z * 1.0572252\n        ];\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = (rgb[i] < 0) ? 0 : (rgb[i] > 0.0031308) ? (1.055 * Math.pow(rgb[i], 1 / 2.4) - 0.055) : (12.92 * rgb[i]);\n            rgb[i] = Math.max(0, Math.min(1, rgb[i]));\n            if (!normalizedOutput)\n                rgb[i] = Math.round(rgb[i] * 255);\n        }\n        let cc = Color.rgb(rgb[0], rgb[1], rgb[2], xyz.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoLAB(xyz, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? xyz.$normalize(false) : xyz.clone();\n        c.divide(Color.D65);\n        let fn = (n) => (n > 0.008856) ? Math.pow(n, 1 / 3) : (7.787 * n) + 16 / 116;\n        let cy = fn(c[1]);\n        let cc = Color.lab((116 * cy) - 16, 500 * (fn(c[0]) - cy), 200 * (cy - fn(c[2])), xyz.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static LABtoXYZ(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        let y = (c[0] + 16) / 116;\n        let x = (c[1] / 500) + y;\n        let z = y - c[2] / 200;\n        let fn = (n) => {\n            let nnn = n * n * n;\n            return (nnn > 0.008856) ? nnn : (n - 16 / 116) / 7.787;\n        };\n        let d = Color.D65;\n        let cc = Color.xyz(Math.max(0, d[0] * fn(x)), Math.max(0, d[1] * fn(y)), Math.max(0, d[2] * fn(z)), lab.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoLUV(xyz, normalizedInput = false, normalizedOutput = false) {\n        let [x, y, z] = (normalizedInput) ? xyz.$normalize(false) : xyz;\n        let u = (4 * x) / (x + (15 * y) + (3 * z));\n        let v = (9 * y) / (x + (15 * y) + (3 * z));\n        y = y / 100;\n        y = (y > 0.008856) ? Math.pow(y, 1 / 3) : (7.787 * y + 16 / 116);\n        let refU = (4 * Color.D65[0]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let refV = (9 * Color.D65[1]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let L = (116 * y) - 16;\n        return Color.luv(L, 13 * L * (u - refU), 13 * L * (v - refV), xyz.alpha);\n    }\n    static LUVtoXYZ(luv, normalizedInput = false, normalizedOutput = false) {\n        let [l, u, v] = (normalizedInput) ? luv.$normalize(false) : luv;\n        let y = (l + 16) / 116;\n        let cubeY = y * y * y;\n        y = (cubeY > 0.008856) ? cubeY : (y - 16 / 116) / 7.787;\n        let refU = (4 * Color.D65[0]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let refV = (9 * Color.D65[1]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        u = u / (13 * l) + refU;\n        v = v / (13 * l) + refV;\n        y = y * 100;\n        let x = -1 * (9 * y * u) / ((u - 4) * v - u * v);\n        let z = (9 * y - (15 * v * y) - (v * x)) / (3 * v);\n        return Color.xyz(x, y, z, luv.alpha);\n    }\n    static LABtoLCH(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        let h = Geom.toDegree(Geom.boundRadian(Math.atan2(c[2], c[1])));\n        return Color.lch(c[0], Math.sqrt(c[1] * c[1] + c[2] * c[2]), h, lab.alpha);\n    }\n    static LCHtoLAB(lch, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lch.$normalize(false) : lch;\n        let rad = Geom.toRadian(c[2]);\n        return Color.lab(c[0], Math.cos(rad) * c[1], Math.sin(rad) * c[1], lch.alpha);\n    }\n}\nColor.D65 = new Pt(95.047, 100, 108.883, 1);\nColor.ranges = {\n    rgb: new Group(new Pt(0, 255), new Pt(0, 255), new Pt(0, 255)),\n    hsl: new Group(new Pt(0, 360), new Pt(0, 1), new Pt(0, 1)),\n    hsb: new Group(new Pt(0, 360), new Pt(0, 1), new Pt(0, 1)),\n    lab: new Group(new Pt(0, 100), new Pt(-128, 127), new Pt(-128, 127)),\n    lch: new Group(new Pt(0, 100), new Pt(0, 100), new Pt(0, 360)),\n    luv: new Group(new Pt(0, 100), new Pt(-134, 220), new Pt(-140, 122)),\n    xyz: new Group(new Pt(0, 100), new Pt(0, 100), new Pt(0, 100))\n};\n//# sourceMappingURL=Color.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { MultiTouchSpace } from './Space';\nimport { VisualForm, Font } from \"./Form\";\nimport { Util } from './Util';\nimport { Pt, Bound } from './Pt';\nexport class DOMSpace extends MultiTouchSpace {\n    constructor(elem, callback) {\n        super();\n        this.id = \"domspace\";\n        this._autoResize = true;\n        this._bgcolor = \"#e1e9f0\";\n        this._css = {};\n        var _selector = null;\n        var _existed = false;\n        this.id = \"pts\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            this.id = \"pts_existing_space\";\n        }\n        else {\n            _selector = document.querySelector(elem);\n            _existed = true;\n            this.id = elem.substr(1);\n        }\n        if (!_selector) {\n            this._container = DOMSpace.createElement(\"div\", \"pts_container\");\n            this._canvas = DOMSpace.createElement(\"div\", \"pts_element\");\n            this._container.appendChild(this._canvas);\n            document.body.appendChild(this._container);\n            _existed = false;\n        }\n        else {\n            this._canvas = _selector;\n            this._container = _selector.parentElement;\n        }\n        setTimeout(this._ready.bind(this, callback), 50);\n    }\n    static createElement(elem = \"div\", id, appendTo) {\n        let d = document.createElement(elem);\n        if (id)\n            d.setAttribute(\"id\", id);\n        if (appendTo && appendTo.appendChild)\n            appendTo.appendChild(d);\n        return d;\n    }\n    _ready(callback) {\n        if (!this._container)\n            throw new Error(`Cannot initiate #${this.id} element`);\n        this._isReady = true;\n        this._resizeHandler(null);\n        this.clear(this._bgcolor);\n        this._canvas.dispatchEvent(new Event(\"ready\"));\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                if (this.players[k].start)\n                    this.players[k].start(this.bound.clone(), this);\n            }\n        }\n        this._pointer = this.center;\n        this.refresh(false);\n        if (callback)\n            callback(this.bound, this._canvas);\n    }\n    setup(opt) {\n        if (opt.bgcolor) {\n            this._bgcolor = opt.bgcolor;\n        }\n        this.autoResize = (opt.resize != undefined) ? opt.resize : false;\n        return this;\n    }\n    getForm() {\n        return null;\n    }\n    set autoResize(auto) {\n        this._autoResize = auto;\n        if (auto) {\n            window.addEventListener('resize', this._resizeHandler.bind(this));\n        }\n        else {\n            delete this._css['width'];\n            delete this._css['height'];\n            window.removeEventListener('resize', this._resizeHandler.bind(this));\n        }\n    }\n    get autoResize() { return this._autoResize; }\n    resize(b, evt) {\n        this.bound = b;\n        this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                let p = this.players[k];\n                if (p.resize)\n                    p.resize(this.bound, evt);\n            }\n        }\n        return this;\n    }\n    _resizeHandler(evt) {\n        let b = Bound.fromBoundingRect(this._container.getBoundingClientRect());\n        if (this._autoResize) {\n            this.styles({ width: \"100%\", height: \"100%\" }, true);\n        }\n        else {\n            this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n        }\n        this.resize(b, evt);\n    }\n    get element() {\n        return this._canvas;\n    }\n    get parent() {\n        return this._container;\n    }\n    get ready() { return this._isReady; }\n    clear(bg) {\n        if (bg)\n            this.background = bg;\n        this._canvas.innerHTML = \"\";\n        return this;\n    }\n    set background(bg) {\n        this._bgcolor = bg;\n        this._container.style.backgroundColor = this._bgcolor;\n    }\n    get background() { return this._bgcolor; }\n    style(key, val, update = false) {\n        this._css[key] = val;\n        if (update)\n            this._canvas.style[key] = val;\n        return this;\n    }\n    styles(styles, update = false) {\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k))\n                this.style(k, styles[k], update);\n        }\n        return this;\n    }\n    static setAttr(elem, data) {\n        for (let k in data) {\n            if (data.hasOwnProperty(k)) {\n                elem.setAttribute(k, data[k]);\n            }\n        }\n        return elem;\n    }\n    static getInlineStyles(data) {\n        let str = \"\";\n        for (let k in data) {\n            if (data.hasOwnProperty(k)) {\n                if (data[k])\n                    str += `${k}: ${data[k]}; `;\n            }\n        }\n        return str;\n    }\n}\nexport class HTMLSpace extends DOMSpace {\n    getForm() {\n        return new HTMLForm(this);\n    }\n    static htmlElement(parent, name, id, autoClass = true) {\n        if (!parent || !parent.appendChild)\n            throw new Error(\"parent is not a valid DOM element\");\n        let elem = document.querySelector(`#${id}`);\n        if (!elem) {\n            elem = document.createElement(name);\n            elem.setAttribute(\"id\", id);\n            if (autoClass)\n                elem.setAttribute(\"class\", id.substring(0, id.indexOf(\"-\")));\n            parent.appendChild(elem);\n        }\n        return elem;\n    }\n    remove(player) {\n        let temp = this._container.querySelectorAll(\".\" + HTMLForm.scopeID(player));\n        temp.forEach((el) => {\n            el.parentNode.removeChild(el);\n        });\n        return super.remove(player);\n    }\n    removeAll() {\n        this._container.innerHTML = \"\";\n        return super.removeAll();\n    }\n}\nexport class HTMLForm extends VisualForm {\n    constructor(space) {\n        super();\n        this._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {\n                \"filled\": true,\n                \"stroked\": true,\n                \"background\": \"#f03\",\n                \"border-color\": \"#fff\",\n                \"color\": \"#000\",\n                \"border-width\": \"1px\",\n                \"border-radius\": \"0\",\n                \"border-style\": \"solid\",\n                \"position\": \"absolute\",\n                \"top\": 0,\n                \"left\": 0,\n                \"width\": 0,\n                \"height\": 0\n            },\n            font: \"11px sans-serif\",\n            fontSize: 11,\n            fontFamily: \"sans-serif\"\n        };\n        this._ready = false;\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx.group = this._space.element;\n                this._ctx.groupID = \"pts_dom_\" + (HTMLForm.groupID++);\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    styleTo(k, v, unit = '') {\n        if (this._ctx.style[k] === undefined)\n            throw new Error(`${k} style property doesn't exist`);\n        this._ctx.style[k] = `${v}${unit}`;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"filled\", c);\n            if (!c)\n                this.styleTo(\"background\", \"transparent\");\n        }\n        else {\n            this.styleTo(\"filled\", true);\n            this.styleTo(\"background\", c);\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"stroked\", c);\n            if (!c)\n                this.styleTo(\"border-width\", 0);\n        }\n        else {\n            this.styleTo(\"stroked\", true);\n            this.styleTo(\"border-color\", c);\n            this.styleTo(\"border-width\", (width || 1) + \"px\");\n        }\n        return this;\n    }\n    fillText(c) {\n        this.styleTo(\"color\", c);\n        return this;\n    }\n    cls(c) {\n        if (typeof c == \"boolean\") {\n            this._ctx.currentClass = \"\";\n        }\n        else {\n            this._ctx.currentClass = c;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n            this._ctx.font = this._font.value;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        return this;\n    }\n    reset() {\n        this._ctx.style = {\n            \"filled\": true, \"stroked\": true,\n            \"background\": \"#f03\", \"border-color\": \"#fff\",\n            \"border-width\": \"1px\"\n        };\n        this._font = new Font(14, \"sans-serif\");\n        this._ctx.font = this._font.value;\n        return this;\n    }\n    updateScope(group_id, group) {\n        this._ctx.group = group;\n        this._ctx.groupID = group_id;\n        this._ctx.groupCount = 0;\n        this.nextID();\n        return this._ctx;\n    }\n    scope(item) {\n        if (!item || item.animateID == null)\n            throw new Error(\"item not defined or not yet added to Space\");\n        return this.updateScope(HTMLForm.scopeID(item), this.space.element);\n    }\n    nextID() {\n        this._ctx.groupCount++;\n        this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n        return this._ctx.currentID;\n    }\n    static getID(ctx) {\n        return ctx.currentID || `p-${HTMLForm.domID++}`;\n    }\n    static scopeID(item) {\n        return `item-${item.animateID}`;\n    }\n    static style(elem, styles) {\n        let st = [];\n        if (!styles[\"filled\"])\n            st.push(\"background: none\");\n        if (!styles[\"stroked\"])\n            st.push(\"border: none\");\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                let v = styles[k];\n                if (v) {\n                    if (!styles[\"filled\"] && k.indexOf('background') === 0) {\n                        continue;\n                    }\n                    else if (!styles[\"stroked\"] && k.indexOf('border-width') === 0) {\n                        continue;\n                    }\n                    else {\n                        st.push(`${k}: ${v}`);\n                    }\n                }\n            }\n        }\n        return HTMLSpace.setAttr(elem, { style: st.join(\";\") });\n    }\n    static rectStyle(ctx, pt, size) {\n        ctx.style[\"left\"] = pt[0] + \"px\";\n        ctx.style[\"top\"] = pt[1] + \"px\";\n        ctx.style[\"width\"] = size[0] + \"px\";\n        ctx.style[\"height\"] = size[1] + \"px\";\n        return ctx;\n    }\n    static point(ctx, pt, radius = 5, shape = \"square\") {\n        if (shape === \"circle\") {\n            return HTMLForm.circle(ctx, pt, radius);\n        }\n        else {\n            return HTMLForm.square(ctx, pt, radius);\n        }\n    }\n    point(pt, radius = 5, shape = \"square\") {\n        this.nextID();\n        if (shape == \"circle\")\n            this.styleTo(\"border-radius\", \"100%\");\n        HTMLForm.point(this._ctx, pt, radius, shape);\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-circle ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, new Pt(pt).$subtract(radius), new Pt(radius * 2, radius * 2));\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    circle(pts) {\n        this.nextID();\n        this.styleTo(\"border-radius\", \"100%\");\n        HTMLForm.circle(this._ctx, pts[0], pts[1][0]);\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-square ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, new Pt(pt).$subtract(halfsize), new Pt(halfsize * 2, halfsize * 2));\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    square(pt, halfsize) {\n        this.nextID();\n        HTMLForm.square(this._ctx, pt, halfsize);\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-rect ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, pts[0], pts[1]);\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    rect(pts) {\n        this.nextID();\n        this.styleTo(\"border-radius\", \"0\");\n        HTMLForm.rect(this._ctx, pts);\n        return this;\n    }\n    static text(ctx, pt, txt) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, {\n            position: 'absolute',\n            class: `pts-form pts-text ${ctx.currentClass}`,\n            left: pt[0],\n            top: pt[1],\n        });\n        elem.textContent = txt;\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    text(pt, txt) {\n        this.nextID();\n        HTMLForm.text(this._ctx, pt, txt);\n        return this;\n    }\n    log(txt) {\n        this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n        return this;\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        Util.warn(\"arc is not implemented in HTMLForm\");\n        return this;\n    }\n    line(pts) {\n        Util.warn(\"line is not implemented in HTMLForm\");\n        return this;\n    }\n    polygon(pts) {\n        Util.warn(\"polygon is not implemented in HTMLForm\");\n        return this;\n    }\n}\nHTMLForm.groupID = 0;\nHTMLForm.domID = 0;\n//# sourceMappingURL=Dom.js.map","/*! Source code licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\nimport { VisualForm, Font } from \"./Form\";\nimport { Geom } from './Num';\nimport { Const } from './Util';\nimport { Pt, Group } from './Pt';\nimport { Rectangle } from \"./Op\";\nimport { DOMSpace } from \"./Dom\";\nexport class SVGSpace extends DOMSpace {\n    constructor(elem, callback) {\n        super(elem, callback);\n        this.id = \"svgspace\";\n        this._bgcolor = \"#999\";\n        if (this._canvas.nodeName.toLowerCase() != \"svg\") {\n            let s = SVGSpace.svgElement(this._canvas, \"svg\", `${this.id}_svg`);\n            this._container = this._canvas;\n            this._canvas = s;\n        }\n    }\n    getForm() { return new SVGForm(this); }\n    get element() {\n        return this._canvas;\n    }\n    resize(b, evt) {\n        super.resize(b, evt);\n        SVGSpace.setAttr(this.element, {\n            \"viewBox\": `0 0 ${this.bound.width} ${this.bound.height}`,\n            \"width\": `${this.bound.width}`,\n            \"height\": `${this.bound.height}`,\n            \"xmlns\": \"http://www.w3.org/2000/svg\",\n            \"version\": \"1.1\"\n        });\n        return this;\n    }\n    static svgElement(parent, name, id) {\n        if (!parent || !parent.appendChild)\n            throw new Error(\"parent is not a valid DOM element\");\n        let elem = document.querySelector(`#${id}`);\n        if (!elem) {\n            elem = document.createElementNS(\"http://www.w3.org/2000/svg\", name);\n            elem.setAttribute(\"id\", id);\n            parent.appendChild(elem);\n        }\n        return elem;\n    }\n    remove(player) {\n        let temp = this._container.querySelectorAll(\".\" + SVGForm.scopeID(player));\n        temp.forEach((el) => {\n            el.parentNode.removeChild(el);\n        });\n        return super.remove(player);\n    }\n    removeAll() {\n        this._container.innerHTML = \"\";\n        return super.removeAll();\n    }\n}\nexport class SVGForm extends VisualForm {\n    constructor(space) {\n        super();\n        this._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {\n                \"filled\": true,\n                \"stroked\": true,\n                \"fill\": \"#f03\",\n                \"stroke\": \"#fff\",\n                \"stroke-width\": 1,\n                \"stroke-linejoin\": \"bevel\",\n                \"stroke-linecap\": \"sqaure\"\n            },\n            font: \"11px sans-serif\",\n            fontSize: 11,\n            fontFamily: \"sans-serif\"\n        };\n        this._ready = false;\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx.group = this._space.element;\n                this._ctx.groupID = \"pts_svg_\" + (SVGForm.groupID++);\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    styleTo(k, v) {\n        if (this._ctx.style[k] === undefined)\n            throw new Error(`${k} style property doesn't exist`);\n        this._ctx.style[k] = v;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"filled\", c);\n        }\n        else {\n            this.styleTo(\"filled\", true);\n            this.styleTo(\"fill\", c);\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"stroked\", c);\n        }\n        else {\n            this.styleTo(\"stroked\", true);\n            this.styleTo(\"stroke\", c);\n            if (width)\n                this.styleTo(\"stroke-width\", width);\n            if (linejoin)\n                this.styleTo(\"stroke-linejoin\", linejoin);\n            if (linecap)\n                this.styleTo(\"stroke-linecap\", linecap);\n        }\n        return this;\n    }\n    cls(c) {\n        if (typeof c == \"boolean\") {\n            this._ctx.currentClass = \"\";\n        }\n        else {\n            this._ctx.currentClass = c;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n            this._ctx.font = this._font.value;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        return this;\n    }\n    reset() {\n        this._ctx.style = {\n            \"filled\": true, \"stroked\": true,\n            \"fill\": \"#f03\", \"stroke\": \"#fff\",\n            \"stroke-width\": 1,\n            \"stroke-linejoin\": \"bevel\",\n            \"stroke-linecap\": \"sqaure\"\n        };\n        this._font = new Font(14, \"sans-serif\");\n        this._ctx.font = this._font.value;\n        return this;\n    }\n    updateScope(group_id, group) {\n        this._ctx.group = group;\n        this._ctx.groupID = group_id;\n        this._ctx.groupCount = 0;\n        this.nextID();\n        return this._ctx;\n    }\n    scope(item) {\n        if (!item || item.animateID == null)\n            throw new Error(\"item not defined or not yet added to Space\");\n        return this.updateScope(SVGForm.scopeID(item), this.space.element);\n    }\n    nextID() {\n        this._ctx.groupCount++;\n        this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n        return this._ctx.currentID;\n    }\n    static getID(ctx) {\n        return ctx.currentID || `p-${SVGForm.domID++}`;\n    }\n    static scopeID(item) {\n        return `item-${item.animateID}`;\n    }\n    static style(elem, styles) {\n        let st = [];\n        if (!styles[\"filled\"])\n            st.push(\"fill: none\");\n        if (!styles[\"stroked\"])\n            st.push(\"stroke: none\");\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                let v = styles[k];\n                if (v) {\n                    if (!styles[\"filled\"] && k.indexOf('fill') === 0) {\n                        continue;\n                    }\n                    else if (!styles[\"stroked\"] && k.indexOf('stroke') === 0) {\n                        continue;\n                    }\n                    else {\n                        st.push(`${k}: ${v}`);\n                    }\n                }\n            }\n        }\n        return DOMSpace.setAttr(elem, { style: st.join(\";\") });\n    }\n    static point(ctx, pt, radius = 5, shape = \"square\") {\n        if (shape === \"circle\") {\n            return SVGForm.circle(ctx, pt, radius);\n        }\n        else {\n            return SVGForm.square(ctx, pt, radius);\n        }\n    }\n    point(pt, radius = 5, shape = \"square\") {\n        this.nextID();\n        SVGForm.point(this._ctx, pt, radius, shape);\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        let elem = SVGSpace.svgElement(ctx.group, \"circle\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            cx: pt[0],\n            cy: pt[1],\n            r: radius,\n            'class': `pts-svgform pts-circle ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    circle(pts) {\n        this.nextID();\n        SVGForm.circle(this._ctx, pts[0], pts[1][0]);\n        return this;\n    }\n    static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n        let elem = SVGSpace.svgElement(ctx.group, \"path\", SVGForm.getID(ctx));\n        const start = new Pt(pt).toAngle(startAngle, radius, true);\n        const end = new Pt(pt).toAngle(endAngle, radius, true);\n        const diff = Geom.boundAngle(endAngle) - Geom.boundAngle(startAngle);\n        let largeArc = (diff > Const.pi) ? true : false;\n        if (cc)\n            largeArc = !largeArc;\n        const sweep = (cc) ? \"0\" : \"1\";\n        const d = `M ${start[0]} ${start[1]} A ${radius} ${radius} 0 ${largeArc ? \"1\" : \"0\"} ${sweep} ${end[0]} ${end[1]}`;\n        DOMSpace.setAttr(elem, {\n            d: d,\n            'class': `pts-svgform pts-arc ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        this.nextID();\n        SVGForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            x: pt[0] - halfsize,\n            y: pt[1] - halfsize,\n            width: halfsize * 2,\n            height: halfsize * 2,\n            'class': `pts-svgform pts-square ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    square(pt, halfsize) {\n        this.nextID();\n        SVGForm.square(this._ctx, pt, halfsize);\n        return this;\n    }\n    static line(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        if (pts.length > 2)\n            return SVGForm._poly(ctx, pts, false);\n        let elem = SVGSpace.svgElement(ctx.group, \"line\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            x1: pts[0][0],\n            y1: pts[0][1],\n            x2: pts[1][0],\n            y2: pts[1][1],\n            'class': `pts-svgform pts-line ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    line(pts) {\n        this.nextID();\n        SVGForm.line(this._ctx, pts);\n        return this;\n    }\n    static _poly(ctx, pts, closePath = true) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = SVGSpace.svgElement(ctx.group, ((closePath) ? \"polygon\" : \"polyline\"), SVGForm.getID(ctx));\n        let points = pts.reduce((a, p) => a + `${p[0]},${p[1]} `, \"\");\n        DOMSpace.setAttr(elem, {\n            points: points,\n            'class': `pts-svgform pts-polygon ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    static polygon(ctx, pts) {\n        return SVGForm._poly(ctx, pts, true);\n    }\n    polygon(pts) {\n        this.nextID();\n        SVGForm.polygon(this._ctx, pts);\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n        let bound = Group.fromArray(pts).boundingBox();\n        let size = Rectangle.size(bound);\n        DOMSpace.setAttr(elem, {\n            x: bound[0][0],\n            y: bound[0][1],\n            width: size[0],\n            height: size[1],\n            'class': `pts-svgform pts-rect ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    rect(pts) {\n        this.nextID();\n        SVGForm.rect(this._ctx, pts);\n        return this;\n    }\n    static text(ctx, pt, txt) {\n        let elem = SVGSpace.svgElement(ctx.group, \"text\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            \"pointer-events\": \"none\",\n            x: pt[0],\n            y: pt[1],\n            dx: 0, dy: 0,\n            'class': `pts-svgform pts-text ${ctx.currentClass}`,\n        });\n        elem.textContent = txt;\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    text(pt, txt) {\n        this.nextID();\n        SVGForm.text(this._ctx, pt, txt);\n        return this;\n    }\n    log(txt) {\n        this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n        return this;\n    }\n}\nSVGForm.groupID = 0;\nSVGForm.domID = 0;\n//# sourceMappingURL=Svg.js.map","export * from \"./Canvas\";\nexport * from \"./Create\";\nexport * from \"./Form\";\nexport * from \"./LinearAlgebra\";\nexport * from \"./Num\";\nexport * from \"./Op\";\nexport * from \"./Pt\";\nexport * from \"./Space\";\nexport * from \"./Color\";\nexport * from \"./Util\";\nexport * from \"./Dom\";\nexport * from \"./Svg\";\nexport * from \"./Typography\";\nexport * from \"./Physics\";\nexport * from \"./UI\";\n//# sourceMappingURL=_module.js.map","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"popper.js\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"reactTippy\", [\"react\", \"popper.js\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"reactTippy\"] = factory(require(\"react\"), require(\"popper.js\"), require(\"react-dom\"));\n\telse\n\t\troot[\"reactTippy\"] = factory(root[\"React\"], root[\"Popper\"], root[\"ReactDOM\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_38__, __WEBPACK_EXTERNAL_MODULE_39__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 15);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Browser = exports.Browser = {};\n\nif (typeof window !== 'undefined') {\n  Browser.SUPPORTED = 'requestAnimationFrame' in window;\n  Browser.SUPPORTS_TOUCH = 'ontouchstart' in window;\n  Browser.touch = false;\n  Browser.dynamicInputDetection = true;\n  // Chrome device/touch emulation can make this dynamic\n  Browser.iOS = function () {\n    return (/iPhone|iPad|iPod/.test(navigator.userAgent) && !window.MSStream\n    );\n  };\n}\n\n/**\n* The global storage array which holds all data reference objects\n* from every instance\n* This allows us to hide tooltips from all instances, finding the ref when\n* clicking on the body, and for followCursor\n*/\nvar Store = exports.Store = [];\n\n/**\n* Selector constants used for grabbing elements\n*/\nvar Selectors = exports.Selectors = {\n  POPPER: '.tippy-popper',\n  TOOLTIP: '.tippy-tooltip',\n  CONTENT: '.tippy-tooltip-content',\n  CIRCLE: '[x-circle]',\n  ARROW: '[x-arrow]',\n  TOOLTIPPED_EL: '[data-tooltipped]',\n  CONTROLLER: '[data-tippy-controller]'\n};\n\n/**\n* The default settings applied to each instance\n*/\nvar Defaults = exports.Defaults = {\n  html: false,\n  position: 'top',\n  animation: 'shift',\n  animateFill: true,\n  arrow: false,\n  arrowSize: 'regular',\n  delay: 0,\n  trigger: 'mouseenter focus',\n  duration: 350,\n  interactive: false,\n  interactiveBorder: 2,\n  theme: 'dark',\n  size: 'regular',\n  distance: 10,\n  offset: 0,\n  hideOnClick: true,\n  multiple: false,\n  followCursor: false,\n  inertia: false,\n  flipDuration: 350,\n  sticky: false,\n  stickyDuration: 200,\n  appendTo: function appendTo() {\n    return document.body;\n  },\n  zIndex: 9999,\n  touchHold: false,\n  performance: false,\n  dynamicTitle: false,\n  useContext: false,\n  reactInstance: undefined,\n  popperOptions: {},\n  open: undefined,\n  onRequestClose: function onRequestClose() {}\n};\n\n/**\n* The keys of the defaults object for reducing down into a new object\n* Used in `getIndividualSettings()`\n*/\nvar DefaultsKeys = exports.DefaultsKeys = Browser.SUPPORTED && Object.keys(Defaults);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefix;\n/**\n* Returns the supported prefixed property - only `webkit` is needed, `moz`, `ms` and `o` are obsolete\n* @param {String} property\n* @return {String} - browser supported prefixed property\n*/\nfunction prefix(property) {\n  var prefixes = [false, 'webkit'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var _prefix = prefixes[i];\n    var prefixedProp = _prefix ? '' + _prefix + upperProp : property;\n    if (typeof window.document.body.style[prefixedProp] !== 'undefined') {\n      return prefixedProp;\n    }\n  }\n\n  return null;\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = find;\n/**\n* Ponyfill for Array.prototype.find\n* @param {Array} arr\n* @param {Function} checkFn\n* @return item in the array\n*/\nfunction find(arr, checkFn) {\n  if (Array.prototype.find) {\n    return arr.find(checkFn);\n  }\n\n  // use `filter` as fallback\n  return arr.filter(checkFn)[0];\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getCorePlacement;\n/**\n* Returns the non-shifted placement (e.g., 'bottom-start' => 'bottom')\n* @param {String} placement\n* @return {String}\n*/\nfunction getCorePlacement(placement) {\n  return placement.replace(/-.+/, '');\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = closest;\n\nvar _matches = __webpack_require__(8);\n\n/**\n* Ponyfill to get the closest parent element\n* @param {Element} element - child of parent to be returned\n* @param {String} parentSelector - selector to match the parent if found\n* @return {Element}\n*/\nfunction closest(element, parentSelector) {\n  var _closest = Element.prototype.closest || function (selector) {\n    var el = this;\n    while (el) {\n      if (_matches.matches.call(el, selector)) {\n        return el;\n      }\n      el = el.parentElement;\n    }\n  };\n\n  return _closest.call(element, parentSelector);\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = defer;\n/**\n* Waits until next repaint to execute a fn\n* @param {Function} fn\n*/\nfunction defer(fn) {\n  window.requestAnimationFrame(function () {\n    setTimeout(fn, 0);\n  });\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getInnerElements;\n\nvar _globals = __webpack_require__(0);\n\n/**\n* Returns inner elements of the popper element\n* @param {Element} popper\n* @return {Object}\n*/\nfunction getInnerElements(popper) {\n  return {\n    tooltip: popper.querySelector(_globals.Selectors.TOOLTIP),\n    circle: popper.querySelector(_globals.Selectors.CIRCLE),\n    content: popper.querySelector(_globals.Selectors.CONTENT)\n  };\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVisible;\n/**\n* Determines if a popper is currently visible\n* @param {Element} popper\n* @return {Boolean}\n*/\nfunction isVisible(popper) {\n  return popper.style.visibility === 'visible';\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction defaultMatchSelector(s) {\n  var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n      i = matches.length;\n  while (--i >= 0 && matches.item(i) !== this) {}\n  return i > -1;\n}\n\nvar matches = exports.matches = typeof window === 'undefined' ? defaultMatchSelector : Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || defaultMatchSelector;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(13);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _tippy = __webpack_require__(30);\n\nvar _tippy2 = _interopRequireDefault(_tippy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  html: null,\n  position: 'top',\n  animation: 'shift',\n  animateFill: true,\n  arrow: false,\n  delay: 0,\n  hideDelay: 0,\n  trigger: 'mouseenter focus',\n  duration: 375,\n  hideDuration: 375,\n  interactive: false,\n  interactiveBorder: 2,\n  theme: 'dark',\n  offset: 0,\n  hideOnClick: true,\n  multiple: false,\n  followCursor: false,\n  inertia: false,\n  popperOptions: {},\n  onShow: function onShow() {},\n  onShown: function onShown() {},\n  onHide: function onHide() {},\n  onHidden: function onHidden() {},\n  disabled: false,\n  arrowSize: 'regular',\n  size: 'regular',\n  className: '',\n  style: {},\n  distance: 10,\n  onRequestClose: function onRequestClose() {},\n  sticky: false,\n  stickyDuration: 200,\n  touchHold: false,\n  unmountHTMLWhenHide: false\n};\n\nvar propKeys = Object.keys(defaultProps);\n\nvar detectPropsChanged = function detectPropsChanged(props, prevProps) {\n  var result = [];\n  propKeys.forEach(function (key) {\n    if (props[key] !== prevProps[key]) {\n      result.push(key);\n    }\n  });\n  return result;\n};\n\nvar Tooltip = function (_Component) {\n  _inherits(Tooltip, _Component);\n\n  function Tooltip(props) {\n    _classCallCheck(this, Tooltip);\n\n    var _this = _possibleConstructorReturn(this, (Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call(this, props));\n\n    _this.initTippy = _this._initTippy.bind(_this);\n    _this.destroyTippy = _this._destroyTippy.bind(_this);\n    _this.updateTippy = _this._updateTippy.bind(_this);\n    _this.updateReactDom = _this._updateReactDom.bind(_this);\n    _this.showTooltip = _this._showTooltip.bind(_this);\n    _this.hideTooltip = _this._hideTooltip.bind(_this);\n    _this.updateSettings = _this._updateSettings.bind(_this);\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        return;\n      }\n      this.initTippy();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        return;\n      }\n      this.destroyTippy();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      // enable and disabled\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        return;\n      }\n      if (this.props.disabled === false && prevProps.disabled === true) {\n        this.updateSettings('disabled', false);\n        this.destroyTippy();\n        this.initTippy();\n        return;\n      }\n\n      if (this.props.disabled === true && prevProps.disabled === false) {\n        this.updateSettings('disabled', true);\n        this.destroyTippy();\n        return;\n      }\n\n      // open\n      if (this.props.open === true && !prevProps.open) {\n        this.updateSettings('open', true);\n        setTimeout(function () {\n          _this2.showTooltip();\n        }, 0);\n      }\n      if (this.props.open === false && prevProps.open === true) {\n        this.updateSettings('open', false);\n        this.hideTooltip();\n      }\n\n      if (this.props.html !== prevProps.html) {\n        this.updateReactDom();\n      }\n\n      // Update content\n      if (this.props.title !== prevProps.title) {\n        this.updateTippy();\n      }\n\n      // update otherProps\n      var propChanges = detectPropsChanged(this.props, prevProps);\n      propChanges.forEach(function (key) {\n        _this2.updateSettings(key, _this2.props[key]);\n      });\n    }\n  }, {\n    key: '_showTooltip',\n    value: function _showTooltip() {\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        return;\n      }\n      if (this.tippy) {\n        var popper = this.tippy.getPopperElement(this.tooltipDOM);\n        this.tippy.show(popper, this.props.duration);\n      }\n    }\n  }, {\n    key: '_hideTooltip',\n    value: function _hideTooltip() {\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        return;\n      }\n      if (this.tippy) {\n        var popper = this.tippy.getPopperElement(this.tooltipDOM);\n        this.tippy.hide(popper, this.props.hideDuration);\n      }\n    }\n  }, {\n    key: '_updateSettings',\n    value: function _updateSettings(name, value) {\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        return;\n      }\n      if (this.tippy) {\n        var popper = this.tippy.getPopperElement(this.tooltipDOM);\n        this.tippy.updateSettings(popper, name, value);\n      }\n    }\n  }, {\n    key: '_updateReactDom',\n    value: function _updateReactDom() {\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        return;\n      }\n      if (this.tippy) {\n        this.updateSettings('reactDOM', this.props.html);\n        var popper = this.tippy.getPopperElement(this.tooltipDOM);\n        var isVisible = popper.style.visibility === 'visible' || this.props.open;\n        if (isVisible) {\n          this.tippy.updateForReact(popper, this.props.html);\n        }\n      }\n    }\n  }, {\n    key: '_updateTippy',\n    value: function _updateTippy() {\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        return;\n      }\n      if (this.tippy) {\n        var popper = this.tippy.getPopperElement(this.tooltipDOM);\n        this.tippy.update(popper);\n      }\n    }\n  }, {\n    key: '_initTippy',\n    value: function _initTippy() {\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        return;\n      }\n      if (!this.props.disabled) {\n        this.tooltipDOM.setAttribute('title', this.props.title);\n        this.tippy = (0, _tippy2.default)(this.tooltipDOM, {\n          disabled: this.props.disabled,\n          position: this.props.position,\n          animation: this.props.animation,\n          animateFill: this.props.animateFill,\n          arrow: this.props.arrow,\n          arrowSize: this.props.arrowSize,\n          delay: this.props.delay,\n          hideDelay: this.props.hideDelay,\n          trigger: this.props.trigger,\n          duration: this.props.duration,\n          hideDuration: this.props.hideDuration,\n          interactive: this.props.interactive,\n          interactiveBorder: this.props.interactiveBorder,\n          theme: this.props.theme,\n          offset: this.props.offset,\n          hideOnClick: this.props.hideOnClick,\n          multiple: this.props.multiple,\n          size: this.props.size,\n          followCursor: this.props.followCursor,\n          inertia: this.props.inertia,\n          popperOptions: this.props.popperOptions,\n          onShow: this.props.onShow,\n          onShown: this.props.onShown,\n          onHide: this.props.onHide,\n          onHidden: this.props.onHidden,\n          distance: this.props.distance,\n          reactDOM: this.props.html,\n          unmountHTMLWhenHide: this.props.unmountHTMLWhenHide,\n          open: this.props.open,\n          sticky: this.props.sticky,\n          stickyDuration: this.props.stickyDuration,\n          touchHold: this.props.touchHold,\n          onRequestClose: this.props.onRequestClose,\n          useContext: this.props.useContext,\n          reactInstance: this.props.useContext ? this : undefined,\n          performance: true,\n          html: this.props.rawTemplate ? this.props.rawTemplate : undefined\n        });\n        if (this.props.open) {\n          this.showTooltip();\n        }\n      } else {\n        this.tippy = null;\n      }\n    }\n  }, {\n    key: '_destroyTippy',\n    value: function _destroyTippy() {\n      if (typeof window === 'undefined' || typeof document === 'undefined') {\n        return;\n      }\n      if (this.tippy) {\n        var popper = this.tippy.getPopperElement(this.tooltipDOM);\n        this.updateSettings('open', false);\n        this.tippy.hide(popper, 0);\n        this.tippy.destroy(popper);\n        this.tippy = null;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      return _react2.default.createElement(\n        'div',\n        {\n          ref: function ref(tooltip) {\n            _this3.tooltipDOM = tooltip;\n          },\n          title: this.props.title,\n          className: this.props.className,\n          tabIndex: this.props.tabIndex,\n          style: _extends({\n            display: 'inline'\n          }, this.props.style)\n        },\n        this.props.children\n      );\n    }\n  }]);\n\n  return Tooltip;\n}(_react.Component);\n\nTooltip.defaultProps = defaultProps;\n\nexports.default = Tooltip;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = followCursorHandler;\n\nvar _globals = __webpack_require__(0);\n\nvar _getCorePlacement = __webpack_require__(3);\n\nvar _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);\n\nvar _find = __webpack_require__(2);\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _prefix = __webpack_require__(1);\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nvar _closest = __webpack_require__(4);\n\nvar _closest2 = _interopRequireDefault(_closest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Mousemove event listener callback method for follow cursor setting\n* @param {MouseEvent} e\n*/\nfunction followCursorHandler(e) {\n  var _this = this;\n\n  var refData = (0, _find2.default)(_globals.Store, function (refData) {\n    return refData.el === _this;\n  });\n\n  var popper = refData.popper,\n      offset = refData.settings.offset;\n\n\n  var position = (0, _getCorePlacement2.default)(popper.getAttribute('x-placement'));\n  var halfPopperWidth = Math.round(popper.offsetWidth / 2);\n  var halfPopperHeight = Math.round(popper.offsetHeight / 2);\n  var viewportPadding = 5;\n  var pageWidth = document.documentElement.offsetWidth || document.body.offsetWidth;\n\n  var pageX = e.pageX,\n      pageY = e.pageY;\n\n\n  var x = void 0,\n      y = void 0;\n\n  switch (position) {\n    case 'top':\n      x = pageX ;\n      y = pageY +10;\n      break;\n    case 'left':\n      x = pageX - 250;\n      y = pageY - halfPopperHeight - offset;\n      break;\n    case 'right':\n      x = pageX + halfPopperHeight;\n      y = pageY - halfPopperHeight + offset;\n      break;\n    case 'bottom':\n      x = pageX - halfPopperWidth + offset;\n      y = pageY + halfPopperHeight / 1.5;\n      break;\n  }\n\n  var isRightOverflowing = pageX + viewportPadding + halfPopperWidth + offset > pageWidth;\n  var isLeftOverflowing = pageX - viewportPadding - halfPopperWidth + offset < 0;\n\n  // Prevent left/right overflow\n  if (position === 'top' || position === 'bottom') {\n    if (isRightOverflowing) {\n      x = pageWidth - viewportPadding - 2 * halfPopperWidth;\n    }\n\n    if (isLeftOverflowing) {\n      x = viewportPadding;\n    }\n  }\n\n  popper.style[(0, _prefix2.default)('transform')] = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getOffsetDistanceInPx;\n\nvar _globals = __webpack_require__(0);\n\n/**\n* Returns the distance taking into account the default distance due to\n* the transform: translate setting in CSS\n* @param {Number} distance\n* @return {String}\n*/\nfunction getOffsetDistanceInPx(distance) {\n  return -(distance - _globals.Defaults.distance) + 'px';\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeTitle;\n/**\n* Removes the title from the tooltipped element, setting `data-original-title`\n* appropriately\n* @param {Element} el\n*/\nfunction removeTitle(el) {\n  var title = el.getAttribute('title');\n\n  // Only set `data-original-title` attr if there is a title\n  if (title) {\n    el.setAttribute('data-original-title', title);\n  }\n\n  el.removeAttribute('title');\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(13);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _component = __webpack_require__(9);\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar withTooltip = function withTooltip(Component) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (_ref) {\n    var props = _objectWithoutProperties(_ref, []);\n\n    return _react2.default.createElement(\n      _component2.default,\n      options,\n      _react2.default.createElement(Component, props)\n    );\n  };\n};\n\nexports.default = withTooltip;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withTooltip = exports.Tooltip = undefined;\n\nvar _component = __webpack_require__(9);\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _hoc = __webpack_require__(14);\n\nvar _hoc2 = _interopRequireDefault(_hoc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Tooltip = _component2.default;\nexports.withTooltip = _hoc2.default;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = bindEventListeners;\n\nvar _globals = __webpack_require__(0);\n\nvar _hideAllPoppers = __webpack_require__(25);\n\nvar _hideAllPoppers2 = _interopRequireDefault(_hideAllPoppers);\n\nvar _closest = __webpack_require__(4);\n\nvar _closest2 = _interopRequireDefault(_closest);\n\nvar _find = __webpack_require__(2);\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _matches = __webpack_require__(8);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Adds the needed event listeners\n*/\nfunction bindEventListeners() {\n  var touchHandler = function touchHandler() {\n    _globals.Browser.touch = true;\n\n    if (_globals.Browser.iOS()) {\n      document.body.classList.add('tippy-touch');\n    }\n\n    if (_globals.Browser.dynamicInputDetection && window.performance) {\n      document.addEventListener('mousemove', mousemoveHandler);\n    }\n  };\n\n  var mousemoveHandler = function () {\n    var time = void 0;\n\n    return function () {\n      var now = performance.now();\n\n      // Chrome 60+ is 1 mousemove per rAF, use 20ms time difference\n      if (now - time < 20) {\n        _globals.Browser.touch = false;\n        document.removeEventListener('mousemove', mousemoveHandler);\n        if (!_globals.Browser.iOS()) {\n          document.body.classList.remove('tippy-touch');\n        }\n      }\n\n      time = now;\n    };\n  }();\n\n  var clickHandler = function clickHandler(event) {\n    // Simulated events dispatched on the document\n    if (!(event.target instanceof Element)) {\n      return (0, _hideAllPoppers2.default)();\n    }\n\n    var el = (0, _closest2.default)(event.target, _globals.Selectors.TOOLTIPPED_EL);\n    var popper = (0, _closest2.default)(event.target, _globals.Selectors.POPPER);\n\n    if (popper) {\n      var ref = (0, _find2.default)(_globals.Store, function (ref) {\n        return ref.popper === popper;\n      });\n      var interactive = ref.settings.interactive;\n\n      if (interactive) return;\n    }\n\n    if (el) {\n      var _ref = (0, _find2.default)(_globals.Store, function (ref) {\n        return ref.el === el;\n      });\n      var _ref$settings = _ref.settings,\n          hideOnClick = _ref$settings.hideOnClick,\n          multiple = _ref$settings.multiple,\n          trigger = _ref$settings.trigger;\n\n      // Hide all poppers except the one belonging to the element that was clicked IF\n      // `multiple` is false AND they are a touch user, OR\n      // `multiple` is false AND it's triggered by a click\n\n      if (!multiple && _globals.Browser.touch || !multiple && trigger.indexOf('click') !== -1) {\n        return (0, _hideAllPoppers2.default)(_ref);\n      }\n\n      // If hideOnClick is not strictly true or triggered by a click don't hide poppers\n      if (hideOnClick !== true || trigger.indexOf('click') !== -1) return;\n    }\n\n    // Don't trigger a hide for tippy controllers, and don't needlessly run loop\n    if ((0, _closest2.default)(event.target, _globals.Selectors.CONTROLLER) || !document.querySelector(_globals.Selectors.POPPER)) return;\n\n    (0, _hideAllPoppers2.default)();\n  };\n\n  var blurHandler = function blurHandler(event) {\n    var _document = document,\n        el = _document.activeElement;\n\n    if (el && el.blur && _matches.matches.call(el, _globals.Selectors.TOOLTIPPED_EL)) {\n      el.blur();\n    }\n  };\n\n  // Hook events\n  document.addEventListener('click', clickHandler);\n  document.addEventListener('touchstart', touchHandler);\n  window.addEventListener('blur', blurHandler);\n\n  if (!_globals.Browser.SUPPORTS_TOUCH && (navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)) {\n    document.addEventListener('pointerdown', touchHandler);\n  }\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createPopperElement;\n\nvar _getCorePlacement = __webpack_require__(3);\n\nvar _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);\n\nvar _getOffsetDistanceInPx = __webpack_require__(11);\n\nvar _getOffsetDistanceInPx2 = _interopRequireDefault(_getOffsetDistanceInPx);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Creates a popper element then returns it\n* @param {Number} id - the popper id\n* @param {String} title - the tooltip's `title` attribute\n* @param {Object} settings - individual settings\n* @return {Element} - the popper element\n*/\nfunction createPopperElement(id, title, settings) {\n  var position = settings.position,\n      distance = settings.distance,\n      arrow = settings.arrow,\n      animateFill = settings.animateFill,\n      inertia = settings.inertia,\n      animation = settings.animation,\n      arrowSize = settings.arrowSize,\n      size = settings.size,\n      theme = settings.theme,\n      html = settings.html,\n      zIndex = settings.zIndex,\n      interactive = settings.interactive;\n\n\n  var popper = document.createElement('div');\n  popper.setAttribute('class', 'tippy-popper');\n  popper.setAttribute('role', 'tooltip');\n  popper.setAttribute('aria-hidden', 'true');\n  popper.setAttribute('id', 'tippy-tooltip-' + id);\n  popper.style.zIndex = zIndex;\n\n  var tooltip = document.createElement('div');\n  tooltip.setAttribute('class', 'tippy-tooltip tippy-tooltip--' + size + ' leave');\n  tooltip.setAttribute('data-animation', animation);\n\n  theme.split(' ').forEach(function (t) {\n    tooltip.classList.add(t + '-theme');\n  });\n\n  if (arrow) {\n    // Add an arrow\n    var _arrow = document.createElement('div');\n    _arrow.setAttribute('class', 'arrow-' + arrowSize);\n    _arrow.setAttribute('x-arrow', '');\n    tooltip.appendChild(_arrow);\n  }\n\n  if (animateFill) {\n    // Create animateFill circle element for animation\n    tooltip.setAttribute('data-animatefill', '');\n    var circle = document.createElement('div');\n    circle.setAttribute('class', 'leave');\n    circle.setAttribute('x-circle', '');\n    tooltip.appendChild(circle);\n  }\n\n  if (inertia) {\n    // Change transition timing function cubic bezier\n    tooltip.setAttribute('data-inertia', '');\n  }\n\n  if (interactive) {\n    tooltip.setAttribute('data-interactive', '');\n  }\n\n  // Tooltip content (text or HTML)\n  var content = document.createElement('div');\n  content.setAttribute('class', 'tippy-tooltip-content');\n\n  if (html) {\n    var templateId = void 0;\n\n    if (html instanceof Element) {\n      content.appendChild(html);\n      templateId = '#' + html.id || 'tippy-html-template';\n    } else {\n      content.innerHTML = document.getElementById(html.replace('#', '')).innerHTML;\n      templateId = html;\n    }\n\n    popper.classList.add('html-template');\n    interactive && popper.setAttribute('tabindex', '-1');\n    tooltip.setAttribute('data-template-id', templateId);\n  } else {\n    content.innerHTML = title;\n  }\n\n  // Init distance. Further updates are made in the popper instance's `onUpdate()` method\n  tooltip.style[(0, _getCorePlacement2.default)(position)] = (0, _getOffsetDistanceInPx2.default)(distance);\n\n  tooltip.appendChild(content);\n  popper.appendChild(tooltip);\n\n  return popper;\n}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = createPopperInstance;\n\nvar _popper = __webpack_require__(38);\n\nvar _popper2 = _interopRequireDefault(_popper);\n\nvar _defer = __webpack_require__(5);\n\nvar _defer2 = _interopRequireDefault(_defer);\n\nvar _prefix = __webpack_require__(1);\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nvar _getCorePlacement = __webpack_require__(3);\n\nvar _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);\n\nvar _getInnerElements2 = __webpack_require__(6);\n\nvar _getInnerElements3 = _interopRequireDefault(_getInnerElements2);\n\nvar _getOffsetDistanceInPx = __webpack_require__(11);\n\nvar _getOffsetDistanceInPx2 = _interopRequireDefault(_getOffsetDistanceInPx);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Creates a new popper instance\n* @param {Object} data\n* @return {Object} - the popper instance\n*/\nfunction createPopperInstance(data) {\n  var el = data.el,\n      popper = data.popper,\n      _data$settings = data.settings,\n      position = _data$settings.position,\n      popperOptions = _data$settings.popperOptions,\n      offset = _data$settings.offset,\n      distance = _data$settings.distance,\n      flipDuration = _data$settings.flipDuration;\n\n  var _getInnerElements = (0, _getInnerElements3.default)(popper),\n      tooltip = _getInnerElements.tooltip;\n\n  var config = _extends({\n    placement: position\n  }, popperOptions || {}, {\n    modifiers: _extends({}, popperOptions ? popperOptions.modifiers : {}, {\n      flip: _extends({\n        padding: distance + 5 /* 5px from viewport boundary */\n      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.flip : {}),\n      offset: _extends({\n        offset: offset\n      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.offset : {})\n    }),\n    onUpdate: function onUpdate() {\n      var styles = tooltip.style;\n      styles.top = '';\n      styles.bottom = '';\n      styles.left = '';\n      styles.right = '';\n      styles[(0, _getCorePlacement2.default)(popper.getAttribute('x-placement'))] = (0, _getOffsetDistanceInPx2.default)(distance);\n    }\n  });\n\n  // Update the popper's position whenever its content changes\n  // Not supported in IE10 unless polyfilled\n  if (window.MutationObserver) {\n    var styles = popper.style;\n\n    var observer = new MutationObserver(function () {\n      styles[(0, _prefix2.default)('transitionDuration')] = '0ms';\n      data.popperInstance.update();\n      (0, _defer2.default)(function () {\n        styles[(0, _prefix2.default)('transitionDuration')] = flipDuration + 'ms';\n      });\n    });\n\n    observer.observe(popper, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n\n    data._mutationObserver = observer;\n  }\n\n  return new _popper2.default(el, popper, config);\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTooltips;\n\nvar _getIndividualSettings = __webpack_require__(24);\n\nvar _getIndividualSettings2 = _interopRequireDefault(_getIndividualSettings);\n\nvar _createPopperElement = __webpack_require__(17);\n\nvar _createPopperElement2 = _interopRequireDefault(_createPopperElement);\n\nvar _createTrigger = __webpack_require__(20);\n\nvar _createTrigger2 = _interopRequireDefault(_createTrigger);\n\nvar _getEventListenerHandlers = __webpack_require__(23);\n\nvar _getEventListenerHandlers2 = _interopRequireDefault(_getEventListenerHandlers);\n\nvar _evaluateSettings = __webpack_require__(21);\n\nvar _evaluateSettings2 = _interopRequireDefault(_evaluateSettings);\n\nvar _removeTitle = __webpack_require__(12);\n\nvar _removeTitle2 = _interopRequireDefault(_removeTitle);\n\nvar _globals = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar idCounter = 1;\n\n/**\n* Creates tooltips for all el elements that match the instance's selector\n* @param {Element[]} els\n* @return {Object[]} Array of ref data objects\n*/\nfunction createTooltips(els) {\n  var _this = this;\n\n  return els.reduce(function (a, el) {\n    var id = idCounter;\n\n    var settings = (0, _evaluateSettings2.default)(_this.settings.performance ? _this.settings : (0, _getIndividualSettings2.default)(el, _this.settings));\n\n    var html = settings.html,\n        trigger = settings.trigger,\n        touchHold = settings.touchHold;\n\n\n    var title = el.getAttribute('title');\n    if (!title && !html) return a;\n\n    el.setAttribute('data-tooltipped', '');\n    el.setAttribute('aria-describedby', 'tippy-tooltip-' + id);\n    (0, _removeTitle2.default)(el);\n\n    var popper = (0, _createPopperElement2.default)(id, title, settings);\n    var handlers = _getEventListenerHandlers2.default.call(_this, el, popper, settings);\n\n    var listeners = [];\n\n    trigger.trim().split(' ').forEach(function (event) {\n      return listeners = listeners.concat((0, _createTrigger2.default)(event, el, handlers, touchHold));\n    });\n\n    a.push({\n      id: id,\n      el: el,\n      popper: popper,\n      settings: settings,\n      listeners: listeners,\n      tippyInstance: _this\n    });\n\n    idCounter++;\n\n    return a;\n  }, []);\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTrigger;\n\nvar _globals = __webpack_require__(0);\n\n/**\n* Creates a trigger\n* @param {Object} event - the custom event specified in the `trigger` setting\n* @param {Element} el - tooltipped element\n* @param {Object} handlers - the handlers for each listener\n* @param {Boolean} touchHold\n* @return {Array} - array of listener objects\n*/\nfunction createTrigger(event, el, handlers, touchHold) {\n  var listeners = [];\n\n  if (event === 'manual') return listeners;\n\n  // Enter\n  el.addEventListener(event, handlers.handleTrigger);\n  listeners.push({\n    event: event,\n    handler: handlers.handleTrigger\n  });\n\n  // Leave\n  if (event === 'mouseenter') {\n    if (_globals.Browser.SUPPORTS_TOUCH && touchHold) {\n      el.addEventListener('touchstart', handlers.handleTrigger);\n      listeners.push({\n        event: 'touchstart',\n        handler: handlers.handleTrigger\n      });\n      el.addEventListener('touchend', handlers.handleMouseleave);\n      listeners.push({\n        event: 'touchend',\n        handler: handlers.handleMouseleave\n      });\n    }\n\n    el.addEventListener('mouseleave', handlers.handleMouseleave);\n    listeners.push({\n      event: 'mouseleave',\n      handler: handlers.handleMouseleave\n    });\n  }\n\n  if (event === 'focus') {\n    el.addEventListener('blur', handlers.handleBlur);\n    listeners.push({\n      event: 'blur',\n      handler: handlers.handleBlur\n    });\n  }\n\n  return listeners;\n}\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = evaluateSettings;\n/**\n* Evaluates/modifies the settings object for appropriate behavior\n* @param {Object} settings\n* @return {Object} modified/evaluated settings\n*/\nfunction evaluateSettings(settings) {\n  // animateFill is disabled if an arrow is true\n  if (settings.arrow) {\n    settings.animateFill = false;\n  }\n\n  // reassign appendTo into the result of evaluating appendTo\n  // if it's set as a function instead of Element\n  if (settings.appendTo && typeof settings.appendTo === 'function') {\n    settings.appendTo = settings.appendTo();\n  }\n\n  return settings;\n}\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getArrayOfElements;\n/**\n* Returns an array of elements based on the selector input\n* @param {String|Element|Element[]} selector\n* @return {Element[]}\n*/\nfunction getArrayOfElements(selector) {\n  if (selector instanceof Element) {\n    return [selector];\n  }\n\n  if (Array.isArray(selector)) {\n    return selector;\n  }\n\n  return [].slice.call(document.querySelectorAll(selector));\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getEventListenerHandlers;\n\nvar _globals = __webpack_require__(0);\n\nvar _isVisible = __webpack_require__(7);\n\nvar _isVisible2 = _interopRequireDefault(_isVisible);\n\nvar _closest = __webpack_require__(4);\n\nvar _closest2 = _interopRequireDefault(_closest);\n\nvar _cursorIsOutsideInteractiveBorder = __webpack_require__(32);\n\nvar _cursorIsOutsideInteractiveBorder2 = _interopRequireDefault(_cursorIsOutsideInteractiveBorder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Returns relevant listener callbacks for each ref\n* @param {Element} el\n* @param {Element} popper\n* @param {Object} settings\n* @return {Object} - relevant listener handlers\n*/\nfunction getEventListenerHandlers(el, popper, settings) {\n  var _this = this;\n\n  var position = settings.position,\n      delay = settings.delay,\n      duration = settings.duration,\n      interactive = settings.interactive,\n      interactiveBorder = settings.interactiveBorder,\n      distance = settings.distance,\n      hideOnClick = settings.hideOnClick,\n      trigger = settings.trigger,\n      touchHold = settings.touchHold,\n      touchWait = settings.touchWait;\n\n\n  var showDelay = void 0,\n      hideDelay = void 0;\n\n  var clearTimeouts = function clearTimeouts() {\n    clearTimeout(showDelay);\n    clearTimeout(hideDelay);\n  };\n\n  var _show = function _show() {\n    clearTimeouts();\n\n    // Not hidden. For clicking when it also has a `focus` event listener\n    if ((0, _isVisible2.default)(popper)) return;\n\n    var _delay = Array.isArray(delay) ? delay[0] : delay;\n\n    if (delay) {\n      showDelay = setTimeout(function () {\n        return _this.show(popper);\n      }, _delay);\n    } else {\n      _this.show(popper);\n    }\n  };\n\n  var show = function show(event) {\n    return _this.callbacks.wait ? _this.callbacks.wait.call(popper, _show, event) : _show();\n  };\n\n  var hide = function hide() {\n    clearTimeouts();\n\n    var _delay = Array.isArray(delay) ? delay[1] : delay;\n\n    if (delay) {\n      hideDelay = setTimeout(function () {\n        return _this.hide(popper);\n      }, _delay);\n    } else {\n      _this.hide(popper);\n    }\n  };\n\n  var handleTrigger = function handleTrigger(event) {\n    var mouseenterTouch = event.type === 'mouseenter' && _globals.Browser.SUPPORTS_TOUCH && _globals.Browser.touch;\n\n    if (mouseenterTouch && touchHold) return;\n\n    // Toggle show/hide when clicking click-triggered tooltips\n    var isClick = event.type === 'click';\n    var isNotPersistent = hideOnClick !== 'persistent';\n\n    isClick && (0, _isVisible2.default)(popper) && isNotPersistent ? hide() : show(event);\n\n    if (mouseenterTouch && _globals.Browser.iOS() && el.click) {\n      el.click();\n    }\n  };\n\n  var handleMouseleave = function handleMouseleave(event) {\n\n    // Don't fire 'mouseleave', use the 'touchend'\n    if (event.type === 'mouseleave' && _globals.Browser.SUPPORTS_TOUCH && _globals.Browser.touch && touchHold) {\n      return;\n    }\n\n    if (interactive) {\n      // Temporarily handle mousemove to check if the mouse left somewhere\n      // other than its popper\n      var handleMousemove = function handleMousemove(event) {\n\n        var triggerHide = function triggerHide() {\n          document.body.removeEventListener('mouseleave', hide);\n          document.removeEventListener('mousemove', handleMousemove);\n          hide();\n        };\n\n        var closestTooltippedEl = (0, _closest2.default)(event.target, _globals.Selectors.TOOLTIPPED_EL);\n\n        var isOverPopper = (0, _closest2.default)(event.target, _globals.Selectors.POPPER) === popper;\n        var isOverEl = closestTooltippedEl === el;\n        var isClickTriggered = trigger.indexOf('click') !== -1;\n        var isOverOtherTooltippedEl = closestTooltippedEl && closestTooltippedEl !== el;\n\n        if (isOverOtherTooltippedEl) {\n          return triggerHide();\n        }\n\n        if (isOverPopper || isOverEl || isClickTriggered) return;\n\n        if ((0, _cursorIsOutsideInteractiveBorder2.default)(event, popper, settings)) {\n          triggerHide();\n        }\n      };\n\n      document.body.addEventListener('mouseleave', hide);\n      document.addEventListener('mousemove', handleMousemove);\n\n      return;\n    }\n\n    // If it's not interactive, just hide it\n    hide();\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore blur on touch devices, if there is no `relatedTarget`, hide\n    // If the related target is a popper, ignore\n    if (!event.relatedTarget || _globals.Browser.touch) return;\n    if ((0, _closest2.default)(event.relatedTarget, _globals.Selectors.POPPER)) return;\n\n    hide();\n  };\n\n  return {\n    handleTrigger: handleTrigger,\n    handleMouseleave: handleMouseleave,\n    handleBlur: handleBlur\n  };\n}\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getIndividualSettings;\n\nvar _globals = __webpack_require__(0);\n\n/**\n* Returns an object of settings to override global settings\n* @param {Element} el - the tooltipped element\n* @param {Object} instanceSettings\n* @return {Object} - individual settings\n*/\nfunction getIndividualSettings(el, instanceSettings) {\n  var settings = _globals.DefaultsKeys.reduce(function (acc, key) {\n    var val = el.getAttribute('data-' + key.toLowerCase()) || instanceSettings[key];\n\n    // Convert strings to booleans\n    if (val === 'false') val = false;\n    if (val === 'true') val = true;\n\n    // Convert number strings to true numbers\n    if (isFinite(val) && !isNaN(parseFloat(val))) {\n      val = parseFloat(val);\n    }\n\n    // Convert array strings to actual arrays\n    if (typeof val === 'string' && val.trim().charAt(0) === '[') {\n      val = JSON.parse(val);\n    }\n\n    acc[key] = val;\n\n    return acc;\n  }, {});\n\n  return Object.assign({}, instanceSettings, settings);\n}\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hideAllPoppers;\n\nvar _globals = __webpack_require__(0);\n\n/**\n* Hides all poppers\n* @param {Object} exclude - refData to exclude if needed\n*/\nfunction hideAllPoppers(exclude) {\n  _globals.Store.forEach(function (refData) {\n    var popper = refData.popper,\n        tippyInstance = refData.tippyInstance,\n        _refData$settings = refData.settings,\n        appendTo = _refData$settings.appendTo,\n        hideOnClick = _refData$settings.hideOnClick,\n        trigger = _refData$settings.trigger;\n\n    // Don't hide already hidden ones\n\n    if (!appendTo.contains(popper)) return;\n\n    // hideOnClick can have the truthy value of 'persistent', so strict check is needed\n    var isHideOnClick = hideOnClick === true || trigger.indexOf('focus') !== -1;\n    var isNotCurrentRef = !exclude || popper !== exclude.popper;\n\n    if (isHideOnClick && isNotCurrentRef) {\n      refData.settings.onRequestClose();\n      tippyInstance.hide(popper);\n    }\n  });\n}\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = init;\n\nvar _bindEventListeners = __webpack_require__(16);\n\nvar _bindEventListeners2 = _interopRequireDefault(_bindEventListeners);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* To run a single time, once DOM is presumed to be ready\n* @return {Boolean} whether the function has run or not\n*/\nfunction init() {\n  if (init.done) return false;\n  init.done = true;\n\n  (0, _bindEventListeners2.default)();\n\n  return true;\n}\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = makeSticky;\n\nvar _defer = __webpack_require__(5);\n\nvar _defer2 = _interopRequireDefault(_defer);\n\nvar _prefix = __webpack_require__(1);\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nvar _isVisible = __webpack_require__(7);\n\nvar _isVisible2 = _interopRequireDefault(_isVisible);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Updates a popper's position on each animation frame to make it stick to a moving element\n* @param {Object} refData\n*/\nfunction makeSticky(refData) {\n  var popper = refData.popper,\n      popperInstance = refData.popperInstance,\n      stickyDuration = refData.settings.stickyDuration;\n\n\n  var applyTransitionDuration = function applyTransitionDuration() {\n    return popper.style[(0, _prefix2.default)('transitionDuration')] = stickyDuration + 'ms';\n  };\n\n  var removeTransitionDuration = function removeTransitionDuration() {\n    return popper.style[(0, _prefix2.default)('transitionDuration')] = '';\n  };\n\n  var updatePosition = function updatePosition() {\n    popperInstance && popperInstance.scheduleUpdate();\n\n    applyTransitionDuration();\n\n    (0, _isVisible2.default)(popper) ? window.requestAnimationFrame(updatePosition) : removeTransitionDuration();\n  };\n\n  // Wait until Popper's position has been updated initially\n  (0, _defer2.default)(updatePosition);\n}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mountPopper;\n\nvar _globals = __webpack_require__(0);\n\nvar _followCursorHandler = __webpack_require__(10);\n\nvar _followCursorHandler2 = _interopRequireDefault(_followCursorHandler);\n\nvar _createPopperInstance = __webpack_require__(18);\n\nvar _createPopperInstance2 = _interopRequireDefault(_createPopperInstance);\n\nvar _prefix = __webpack_require__(1);\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Appends the popper and creates a popper instance if one does not exist\n* Also updates its position if need be and enables event listeners\n* @param {Object} data -  the element/popper reference data\n*/\nfunction mountPopper(data) {\n  var el = data.el,\n      popper = data.popper,\n      _data$settings = data.settings,\n      appendTo = _data$settings.appendTo,\n      followCursor = _data$settings.followCursor;\n\n  // Already on the DOM\n\n  if (appendTo.contains(popper)) return;\n\n  appendTo.appendChild(popper);\n\n  if (!data.popperInstance) {\n    data.popperInstance = (0, _createPopperInstance2.default)(data);\n  } else {\n    data.popperInstance.update();\n    if (!followCursor || _globals.Browser.touch) {\n      data.popperInstance.enableEventListeners();\n    }\n  }\n\n  // Since touch is determined dynamically, followCursor is set on mount\n  if (followCursor && !_globals.Browser.touch) {\n    el.addEventListener('mousemove', _followCursorHandler2.default);\n    data.popperInstance.disableEventListeners();\n  }\n}\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = onTransitionEnd;\n\nvar _globals = __webpack_require__(0);\n\nvar _getInnerElements2 = __webpack_require__(6);\n\nvar _getInnerElements3 = _interopRequireDefault(_getInnerElements2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Prepares the callback functions for `show` and `hide` methods\n* @param {Object} data\n* @param {Number} duration\n* @param {Function} callback - callback function to fire once transitions complete\n*/\nfunction onTransitionEnd(data, duration, callback) {\n  // Make callback synchronous if duration is 0\n  if (!duration) {\n    return callback();\n  }\n\n  var _getInnerElements = (0, _getInnerElements3.default)(data.popper),\n      tooltip = _getInnerElements.tooltip;\n\n  var transitionendFired = false;\n\n  var listenerCallback = function listenerCallback(e) {\n    if (e.target === tooltip && !transitionendFired) {\n      transitionendFired = true;\n      callback();\n    }\n  };\n\n  // Fire callback upon transition completion\n  tooltip.addEventListener('webkitTransitionEnd', listenerCallback);\n  tooltip.addEventListener('transitionend', listenerCallback);\n\n  // Fallback: transitionend listener sometimes may not fire\n  clearTimeout(data._transitionendTimeout);\n  data._transitionendTimeout = setTimeout(function () {\n    if (!transitionendFired) {\n      callback();\n    }\n  }, duration);\n}\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n/* Utility functions */\n\n\n/* Core library functions */\n\n\nvar _globals = __webpack_require__(0);\n\nvar _reactDom = __webpack_require__(39);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _init = __webpack_require__(26);\n\nvar _init2 = _interopRequireDefault(_init);\n\nvar _defer = __webpack_require__(5);\n\nvar _defer2 = _interopRequireDefault(_defer);\n\nvar _prefix = __webpack_require__(1);\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nvar _find = __webpack_require__(2);\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _findIndex = __webpack_require__(34);\n\nvar _findIndex2 = _interopRequireDefault(_findIndex);\n\nvar _removeTitle = __webpack_require__(12);\n\nvar _removeTitle2 = _interopRequireDefault(_removeTitle);\n\nvar _elementIsInViewport = __webpack_require__(33);\n\nvar _elementIsInViewport2 = _interopRequireDefault(_elementIsInViewport);\n\nvar _triggerReflow = __webpack_require__(37);\n\nvar _triggerReflow2 = _interopRequireDefault(_triggerReflow);\n\nvar _modifyClassList = __webpack_require__(35);\n\nvar _modifyClassList2 = _interopRequireDefault(_modifyClassList);\n\nvar _getInnerElements4 = __webpack_require__(6);\n\nvar _getInnerElements5 = _interopRequireDefault(_getInnerElements4);\n\nvar _applyTransitionDuration = __webpack_require__(31);\n\nvar _applyTransitionDuration2 = _interopRequireDefault(_applyTransitionDuration);\n\nvar _isVisible = __webpack_require__(7);\n\nvar _isVisible2 = _interopRequireDefault(_isVisible);\n\nvar _noop = __webpack_require__(36);\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _followCursorHandler = __webpack_require__(10);\n\nvar _followCursorHandler2 = _interopRequireDefault(_followCursorHandler);\n\nvar _getArrayOfElements = __webpack_require__(22);\n\nvar _getArrayOfElements2 = _interopRequireDefault(_getArrayOfElements);\n\nvar _onTransitionEnd = __webpack_require__(29);\n\nvar _onTransitionEnd2 = _interopRequireDefault(_onTransitionEnd);\n\nvar _mountPopper = __webpack_require__(28);\n\nvar _mountPopper2 = _interopRequireDefault(_mountPopper);\n\nvar _makeSticky = __webpack_require__(27);\n\nvar _makeSticky2 = _interopRequireDefault(_makeSticky);\n\nvar _createTooltips = __webpack_require__(19);\n\nvar _createTooltips2 = _interopRequireDefault(_createTooltips);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n* @param {String|Element|Element[]} selector\n* @param {Object} settings (optional) - the object of settings to be applied to the instance\n*/\nvar Tippy = function () {\n  function Tippy(selector) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Tippy);\n\n    // Use default browser tooltip on unsupported browsers\n    if (!_globals.Browser.SUPPORTED) return;\n\n    (0, _init2.default)();\n\n    this.state = {\n      destroyed: false\n    };\n\n    this.selector = selector;\n\n    this.settings = _extends({}, _globals.Defaults, settings);\n\n    if (settings.show || settings.shown || settings.hide || settings.hidden) {\n      console.warn('Callbacks without the `on` prefix are deprecated (with the exception of `wait`).' + ' Use onShow, onShown, onHide, and onHidden instead.');\n    }\n\n    this.callbacks = {\n      wait: settings.wait,\n      show: settings.onShow || settings.show || _noop2.default,\n      shown: settings.onShown || settings.shown || _noop2.default,\n      hide: settings.onHide || settings.hide || _noop2.default,\n      hidden: settings.onHidden || settings.hidden || _noop2.default\n    };\n\n    this.store = _createTooltips2.default.call(this, (0, _getArrayOfElements2.default)(selector));\n    _globals.Store.push.apply(_globals.Store, this.store);\n  }\n\n  /**\n  * Returns the reference element's popper element\n  * @param {Element} el\n  * @return {Element}\n  */\n\n\n  _createClass(Tippy, [{\n    key: 'getPopperElement',\n    value: function getPopperElement(el) {\n      try {\n        return (0, _find2.default)(this.store, function (data) {\n          return data.el === el;\n        }).popper;\n      } catch (e) {\n        console.error('[getPopperElement]: Element passed as the argument does not exist in the instance');\n      }\n    }\n\n    /**\n    * Returns a popper's reference element\n    * @param {Element} popper\n    * @return {Element}\n    */\n\n  }, {\n    key: 'getReferenceElement',\n    value: function getReferenceElement(popper) {\n      try {\n        return (0, _find2.default)(this.store, function (data) {\n          return data.popper === popper;\n        }).el;\n      } catch (e) {\n        console.error('[getReferenceElement]: Popper passed as the argument does not exist in the instance');\n      }\n    }\n\n    /**\n    * Returns the reference data object from either the reference element or popper element\n    * @param {Element} x (reference element or popper)\n    * @return {Object}\n    */\n\n  }, {\n    key: 'getReferenceData',\n    value: function getReferenceData(x) {\n      return (0, _find2.default)(this.store, function (data) {\n        return data.el === x || data.popper === x;\n      });\n    }\n\n    /**\n    * Update settings\n    * @param {DOMElement} - popper\n    * @param {string} - name\n    * @param {string} - value\n    */\n\n  }, {\n    key: 'updateSettings',\n    value: function updateSettings(popper, name, value) {\n      var data = (0, _find2.default)(this.store, function (data) {\n        return data.popper === popper;\n      });\n      var newSettings = _extends({}, data.settings, _defineProperty({}, name, value));\n      data.settings = newSettings;\n    }\n  }, {\n    key: 'updateForReact',\n\n\n    /**\n    * Update for React\n    * @param {DOMElement} - popper\n    * @param {ReactElement} - content\n    */\n    value: function updateForReact(popper, updatedContent) {\n      var tooltipContent = popper.querySelector(_globals.Selectors.CONTENT);\n      var data = (0, _find2.default)(this.store, function (data) {\n        return data.popper === popper;\n      });\n\n      var _data$settings = data.settings,\n          useContext = _data$settings.useContext,\n          reactInstance = _data$settings.reactInstance;\n\n      if (useContext) {\n        _reactDom2.default.unstable_renderSubtreeIntoContainer(data.settings.reactInstance, updatedContent, tooltipContent);\n      } else {\n        _reactDom2.default.render(updatedContent, tooltipContent);\n      }\n    }\n    /**\n    * Shows a popper\n    * @param {Element} popper\n    * @param {Number} customDuration (optional)\n    */\n\n  }, {\n    key: 'show',\n    value: function show(popper, customDuration) {\n      var _this = this;\n\n      if (this.state.destroyed) return;\n\n      var data = (0, _find2.default)(this.store, function (data) {\n        return data.popper === popper;\n      });\n\n      var _getInnerElements = (0, _getInnerElements5.default)(popper),\n          tooltip = _getInnerElements.tooltip,\n          circle = _getInnerElements.circle,\n          content = _getInnerElements.content;\n\n      if (!document.body.contains(data.el)) {\n        this.destroy(popper);\n        return;\n      }\n\n      this.callbacks.show.call(popper);\n\n      // Custom react\n      if (data && data.settings && data.settings.open === false) {\n        return;\n      }\n\n      if (data.settings.reactDOM) {\n        this.updateForReact(popper, data.settings.reactDOM);\n      }\n      // end: Custom react\n\n      var el = data.el,\n          _data$settings2 = data.settings,\n          appendTo = _data$settings2.appendTo,\n          sticky = _data$settings2.sticky,\n          interactive = _data$settings2.interactive,\n          followCursor = _data$settings2.followCursor,\n          flipDuration = _data$settings2.flipDuration,\n          duration = _data$settings2.duration,\n          dynamicTitle = _data$settings2.dynamicTitle;\n\n\n      if (dynamicTitle) {\n        var title = el.getAttribute('title');\n        if (title) {\n          content.innerHTML = title;\n          (0, _removeTitle2.default)(el);\n        }\n      }\n\n      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[0] : duration;\n\n      // Prevent a transition when popper changes position\n      (0, _applyTransitionDuration2.default)([popper, tooltip, circle], 0);\n\n      (0, _mountPopper2.default)(data);\n\n      popper.style.visibility = 'visible';\n      popper.setAttribute('aria-hidden', 'false');\n\n      // Wait for popper's position to update\n      (0, _defer2.default)(function () {\n        // Sometimes the arrow will not be in the correct position, force another update\n        if (!followCursor || _globals.Browser.touch) {\n          data.popperInstance.update();\n          (0, _applyTransitionDuration2.default)([popper], flipDuration);\n        }\n\n        // Re-apply transition durations\n        (0, _applyTransitionDuration2.default)([tooltip, circle], _duration);\n\n        // Make content fade out a bit faster than the tooltip if `animateFill`\n        if (circle) content.style.opacity = 1;\n\n        // Interactive tooltips receive a class of 'active'\n        interactive && el.classList.add('active');\n\n        // Update popper's position on every animation frame\n        sticky && (0, _makeSticky2.default)(data);\n\n        // Repaint/reflow is required for CSS transition when appending\n        (0, _triggerReflow2.default)(tooltip, circle);\n\n        (0, _modifyClassList2.default)([tooltip, circle], function (list) {\n          list.contains('tippy-notransition') && list.remove('tippy-notransition');\n          list.remove('leave');\n          list.add('enter');\n        });\n\n        // Wait for transitions to complete\n        (0, _onTransitionEnd2.default)(data, _duration, function () {\n          if (!(0, _isVisible2.default)(popper) || data._onShownFired) return;\n\n          // Focus interactive tooltips only\n          interactive && popper.focus();\n          // Remove transitions from tooltip\n          tooltip.classList.add('tippy-notransition');\n          // Prevents shown() from firing more than once from early transition cancellations\n          data._onShownFired = true;\n\n          _this.callbacks.shown.call(popper);\n        });\n      });\n    }\n\n    /**\n    * Hides a popper\n    * @param {Element} popper\n    * @param {Number} customDuration (optional)\n    */\n\n  }, {\n    key: 'hide',\n    value: function hide(popper, customDuration) {\n      var _this2 = this;\n\n      if (this.state.destroyed) return;\n\n      this.callbacks.hide.call(popper);\n\n      var data = (0, _find2.default)(this.store, function (data) {\n        return data.popper === popper;\n      });\n\n      var _getInnerElements2 = (0, _getInnerElements5.default)(popper),\n          tooltip = _getInnerElements2.tooltip,\n          circle = _getInnerElements2.circle,\n          content = _getInnerElements2.content;\n\n      // custom react\n      // Prevent hide if open\n\n\n      if (data.settings.disabled === false && data.settings.open) {\n        return;\n      }\n\n      var isUnmount = data && data.settings && data.settings.unmountHTMLWhenHide && data.settings.reactDOM;\n      // end: custom react\n\n      var el = data.el,\n          _data$settings3 = data.settings,\n          appendTo = _data$settings3.appendTo,\n          sticky = _data$settings3.sticky,\n          interactive = _data$settings3.interactive,\n          followCursor = _data$settings3.followCursor,\n          html = _data$settings3.html,\n          trigger = _data$settings3.trigger,\n          duration = _data$settings3.duration;\n\n\n      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[1] : duration;\n\n      data._onShownFired = false;\n      interactive && el.classList.remove('active');\n\n      popper.style.visibility = 'hidden';\n      popper.setAttribute('aria-hidden', 'true');\n\n      (0, _applyTransitionDuration2.default)([tooltip, circle, circle ? content : null], _duration);\n\n      if (circle) content.style.opacity = 0;\n\n      (0, _modifyClassList2.default)([tooltip, circle], function (list) {\n        list.contains('tippy-tooltip') && list.remove('tippy-notransition');\n        list.remove('enter');\n        list.add('leave');\n      });\n\n      // Re-focus click-triggered html elements\n      // and the tooltipped element IS in the viewport (otherwise it causes unsightly scrolling\n      // if the tooltip is closed and the element isn't in the viewport anymore)\n      if (html && trigger.indexOf('click') !== -1 && (0, _elementIsInViewport2.default)(el)) {\n        el.focus();\n      }\n\n      // Wait for transitions to complete\n      (0, _onTransitionEnd2.default)(data, _duration, function () {\n        // `isVisible` is not completely reliable to determine if we shouldn't\n        // run the hidden callback, we need to check the computed opacity style.\n        // This prevents glitchy behavior of the transition when quickly showing\n        // and hiding a tooltip.\n        if ((0, _isVisible2.default)(popper) || !appendTo.contains(popper) || getComputedStyle(tooltip).opacity === '1') return;\n\n        el.removeEventListener('mousemove', _followCursorHandler2.default);\n        data.popperInstance.disableEventListeners();\n        appendTo.removeChild(popper);\n\n        _this2.callbacks.hidden.call(popper);\n\n        // custom react\n        if (isUnmount) {\n          _reactDom2.default.unmountComponentAtNode(content);\n        }\n      });\n    }\n\n    /**\n    * Updates a popper with new content\n    * @param {Element} popper\n    */\n\n  }, {\n    key: 'update',\n    value: function update(popper) {\n      if (this.state.destroyed) return;\n\n      var data = (0, _find2.default)(this.store, function (data) {\n        return data.popper === popper;\n      });\n\n      var _getInnerElements3 = (0, _getInnerElements5.default)(popper),\n          content = _getInnerElements3.content;\n\n      var el = data.el,\n          html = data.settings.html;\n\n\n      if (html instanceof Element) {\n        console.warn('Aborted: update() should not be used if `html` is a DOM element');\n        return;\n      }\n\n      content.innerHTML = html ? document.getElementById(html.replace('#', '')).innerHTML : el.getAttribute('title') || el.getAttribute('data-original-title');\n\n      if (!html) (0, _removeTitle2.default)(el);\n    }\n\n    /**\n    * Destroys a popper\n    * @param {Element} popper\n    * @param {Boolean} _isLast - private param used by destroyAll to optimize\n    */\n\n  }, {\n    key: 'destroy',\n    value: function destroy(popper, _isLast) {\n      var _this3 = this;\n\n      if (this.state.destroyed) return;\n\n      var data = (0, _find2.default)(this.store, function (data) {\n        return data.popper === popper;\n      });\n\n      var el = data.el,\n          popperInstance = data.popperInstance,\n          listeners = data.listeners,\n          _mutationObserver = data._mutationObserver;\n\n      // Ensure the popper is hidden\n\n      if ((0, _isVisible2.default)(popper)) {\n        this.hide(popper, 0);\n      }\n\n      // Remove Tippy-only event listeners from tooltipped element\n      listeners.forEach(function (listener) {\n        return el.removeEventListener(listener.event, listener.handler);\n      });\n\n      // Restore original title\n      el.setAttribute('title', el.getAttribute('data-original-title'));\n\n      el.removeAttribute('data-original-title');\n      el.removeAttribute('data-tooltipped');\n      el.removeAttribute('aria-describedby');\n\n      popperInstance && popperInstance.destroy();\n      _mutationObserver && _mutationObserver.disconnect();\n\n      // Remove from store\n      _globals.Store.splice((0, _findIndex2.default)(_globals.Store, function (data) {\n        return data.popper === popper;\n      }), 1);\n\n      // Ensure filter is called only once\n      if (_isLast === undefined || _isLast) {\n        this.store = _globals.Store.filter(function (data) {\n          return data.tippyInstance === _this3;\n        });\n      }\n    }\n\n    /**\n    * Destroys all tooltips created by the instance\n    */\n\n  }, {\n    key: 'destroyAll',\n    value: function destroyAll() {\n      var _this4 = this;\n\n      if (this.state.destroyed) return;\n\n      var storeLength = this.store.length;\n\n      this.store.forEach(function (_ref, index) {\n        var popper = _ref.popper;\n\n        _this4.destroy(popper, index === storeLength - 1);\n      });\n\n      this.store = null;\n      this.state.destroyed = true;\n    }\n  }]);\n\n  return Tippy;\n}();\n\nfunction tippy(selector, settings) {\n  return new Tippy(selector, settings);\n}\n\ntippy.Browser = _globals.Browser;\ntippy.Defaults = _globals.Defaults;\ntippy.disableDynamicInputDetection = function () {\n  return _globals.Browser.dynamicInputDetection = false;\n};\ntippy.enableDynamicInputDetection = function () {\n  return _globals.Browser.dynamicInputDetection = true;\n};\n\nexports.default = tippy;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = applyTransitionDuration;\n\nvar _globals = __webpack_require__(0);\n\nvar _prefix = __webpack_require__(1);\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nvar _matches = __webpack_require__(8);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Applies the transition duration to each element\n* @param {Element[]} els - Array of elements\n* @param {Number} duration\n*/\nfunction applyTransitionDuration(els, duration) {\n  els.forEach(function (el) {\n    if (!el) return;\n\n    var isContent = _matches.matches.call(el, _globals.Selectors.CONTENT);\n\n    var _duration = isContent ? Math.round(duration / 1.3) : duration;\n\n    el.style[(0, _prefix2.default)('transitionDuration')] = _duration + 'ms';\n  });\n}\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cursorIsOutsideInteractiveBorder;\n\nvar _getCorePlacement = __webpack_require__(3);\n\nvar _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Determines if the mouse's cursor is outside the interactive border\n* @param {MouseEvent} event\n* @param {Element} popper\n* @param {Object} settings\n* @return {Boolean}\n*/\nfunction cursorIsOutsideInteractiveBorder(event, popper, settings) {\n  if (!popper.getAttribute('x-placement')) return true;\n\n  var x = event.clientX,\n      y = event.clientY;\n  var interactiveBorder = settings.interactiveBorder,\n      distance = settings.distance;\n\n\n  var rect = popper.getBoundingClientRect();\n  var corePosition = (0, _getCorePlacement2.default)(popper.getAttribute('x-placement'));\n  var borderWithDistance = interactiveBorder + distance;\n\n  var exceeds = {\n    top: rect.top - y > interactiveBorder,\n    bottom: y - rect.bottom > interactiveBorder,\n    left: rect.left - x > interactiveBorder,\n    right: x - rect.right > interactiveBorder\n  };\n\n  switch (corePosition) {\n    case 'top':\n      exceeds.top = rect.top - y > borderWithDistance;\n      break;\n    case 'bottom':\n      exceeds.bottom = y - rect.bottom > borderWithDistance;\n      break;\n    case 'left':\n      exceeds.left = rect.left - x > borderWithDistance;\n      break;\n    case 'right':\n      exceeds.right = x - rect.right > borderWithDistance;\n      break;\n  }\n\n  return exceeds.top || exceeds.bottom || exceeds.left || exceeds.right;\n}\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = elementIsInViewport;\n/**\n* Determines if an element is visible in the viewport\n* @param {Element} el\n* @return {Boolean}\n*/\nfunction elementIsInViewport(el) {\n  var rect = el.getBoundingClientRect();\n\n  return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);\n}\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findIndex;\n\nvar _find = __webpack_require__(2);\n\nvar _find2 = _interopRequireDefault(_find);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Ponyfill for Array.prototype.findIndex\n* @param {Array} arr\n* @param {Function} checkFn\n* @return index of the item in the array\n*/\nfunction findIndex(arr, checkFn) {\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(checkFn);\n  }\n\n  // fallback\n  return arr.indexOf((0, _find2.default)(arr, checkFn));\n}\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = modifyClassList;\n/**\n* Modifies elements' class lists\n* @param {Element[]} els - Array of elements\n* @param {Function} callback\n*/\nfunction modifyClassList(els, callback) {\n  els.forEach(function (el) {\n    if (!el) return;\n    callback(el.classList);\n  });\n}\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = noop;\nfunction noop() {}\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = triggerReflow;\n\nvar _prefix = __webpack_require__(1);\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n* Triggers a document repaint or reflow for CSS transition\n* @param {Element} tooltip\n* @param {Element} circle\n*/\nfunction triggerReflow(tooltip, circle) {\n  // Safari needs the specific 'transform' property to be accessed\n  circle ? window.getComputedStyle(circle)[(0, _prefix2.default)('transform')] : window.getComputedStyle(tooltip).opacity;\n}\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_38__;\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=react-tippy.js.map","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.4\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n"],"sourceRoot":""}