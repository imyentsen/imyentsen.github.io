{"version":3,"sources":["webpack:///./src/components/SideProject/d3React/BarChart/index.js","webpack:///./src/components/SideProject/d3React/StreamGraph/index.js","webpack:///./src/components/SideProject/d3React/index.js","webpack:///./src/pages/side-project/d3-react.js","webpack:///./src/components/Meta/index.js"],"names":["d3React_BarChart","BarChart","props","_this","_Component","call","this","createBarChart","bind","assertThisInitialized_default","componentDidMount","componentDidUpdate","_this2","node","dataMax","Object","d3_array_src","data","map","d","barWidth","size","length","legend","indexRollupNext","scale","colorScale","labels","d3_selection_src","selectAll","enter","append","attr","select","yScale","src","domain","range","on","onHover","exit","remove","i","style","hoverElement","id","launchday","render","_this3","react_default","a","createElement","ref","width","height","react","d3React_StreamGraph","stackData","_loop","x","forEach","country","xScale","stackLayout","d3_shape_src","offset","order","keys","stackArea","y0","y1","curve","stacks","key","onMouseEnter","fill","stroke","strokeOpacity","transform","appdata","worlddata","features","filter","d3_geo_src","Math","random","p","q","d3React","App","onResize","onBrush","state","screenWidth","screenHeight","hover","brushExtent","setState","window","innerWidth","innerHeight","addEventListener","filteredAppdata","className","__webpack_exports__","_ref","location","Layout","Meta","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","lodash_get__WEBPACK_IMPORTED_MODULE_2__","lodash_get__WEBPACK_IMPORTED_MODULE_2___default","site","title","desc","ogimg","siteTitle","meta","name","content","property"],"mappings":"8PAgFeA,sBAvEb,SAAAC,EAAYC,GAAM,IAAAC,EAAA,OAChBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,eAAiBJ,EAAKI,eAAeC,KAApBC,QAAAN,KAFNA,sCAKlBO,6BACEJ,KAAKC,oBAGPI,8BACEL,KAAKC,oBAGPA,0BAAiB,IAAAK,EAAAN,KACTO,EAAOP,KAAKO,KACZC,EAAUC,OAAAC,EAAA,EAAAD,CAAIT,KAAKJ,MAAMe,KAAKC,IAAI,SAAAC,GAAC,OAAIJ,OAAAC,EAAA,EAAAD,CAAII,EAAEF,SAC7CG,EAAWd,KAAKJ,MAAMmB,KAAK,GAAKf,KAAKJ,MAAMe,KAAKK,OAEhDC,EAASR,OAAAS,EAAA,EAAAT,GACZU,MAAMnB,KAAKJ,MAAMwB,YACjBC,OAAO,CAAC,SAAU,SAAU,SAAU,WAEzCZ,OAAAa,EAAA,EAAAb,CAAOF,GACJgB,UAAU,YACVZ,KAAK,CAAC,IACNa,QACAC,OAAO,KACLC,KAAK,QAAS,UACd3B,KAAKkB,GAEVR,OAAAa,EAAA,EAAAb,CAAOF,GACJoB,OAAO,YACLD,KAAK,YAAa,cAAgB1B,KAAKJ,MAAMmB,KAAK,GAAK,KAAO,SAEnE,IAAMa,EAASnB,OAAAoB,EAAA,EAAApB,GACZqB,OAAO,CAAC,EAAGtB,IACXuB,MAAM,CAAC,EAAG/B,KAAKJ,MAAMmB,KAAK,KAE7BN,OAAAa,EAAA,EAAAb,CAAOF,GACJgB,UAAU,YACVZ,KAAKX,KAAKJ,MAAMe,MAChBa,QACAC,OAAO,QACLC,KAAK,QAAS,OACdM,GAAG,YAAahC,KAAKJ,MAAMqC,SAEhCxB,OAAAa,EAAA,EAAAb,CAAOF,GACJgB,UAAU,YACVZ,KAAKX,KAAKJ,MAAMe,MAChBuB,OACEC,SAEL1B,OAAAa,EAAA,EAAAb,CAAOF,GACJgB,UAAU,YACVZ,KAAKX,KAAKJ,MAAMe,MACde,KAAK,IAAK,SAACb,EAAEuB,GAAH,OAASA,EAAItB,IACvBY,KAAK,IAAK,SAAAb,GAAC,OAAIP,EAAKV,MAAMmB,KAAK,GAAKa,EAAOnB,OAAAC,EAAA,EAAAD,CAAII,EAAEF,SACjDe,KAAK,SAAU,SAAAb,GAAC,OAAIe,EAAOnB,OAAAC,EAAA,EAAAD,CAAII,EAAEF,SACjCe,KAAK,QAASZ,GACduB,MAAM,OAAQ,SAACxB,EAAEuB,GAAH,OAAS9B,EAAKV,MAAM0C,eAAiBzB,EAAE0B,GAAK,UAAYjC,EAAKV,MAAMwB,WAAWP,EAAE2B,aAC9FH,MAAM,SAAU,SAChBA,MAAM,iBAAkB,QAI/BI,kBAAS,IAAAC,EAAA1C,KACP,OAAO2C,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAvC,GAAI,OAAImC,EAAKnC,KAAOA,GAAMwC,MAAO/C,KAAKJ,MAAMmB,KAAK,GAAIiC,OAAQhD,KAAKJ,MAAMmB,KAAK,SAnE3EkC,EAAA,2CCuCRC,4FAvCbT,kBAEE,IAFO,IAAA5C,EAAAG,KACDmD,EAAY1C,OAAAC,EAAA,EAAAD,CAAM,IAAIG,IAAI,iBAAO,KADhCwC,EAAA,SAEEC,GACPxD,EAAKD,MAAMe,KAAK2C,QAAQ,SAAAC,GACtBJ,EAAUE,GAAGE,EAAQhB,IAAMgB,EAAQ5C,KAAK0C,MAFnCA,EAAI,EAAGA,EAAE,GAAIA,IAAKD,EAAlBC,GAKT,IAAMG,EAAS/C,OAAAoB,EAAA,EAAApB,GAAcqB,OAAO,CAAC,EAAG,KACrCC,MAAM,CAAC,EAAG/B,KAAKJ,MAAMmB,KAAK,KAEvBa,EAASnB,OAAAoB,EAAA,EAAApB,GAAcqB,OAAO,CAAC,EAAG,KACrCC,MAAM,CAAC/B,KAAKJ,MAAMmB,KAAK,GAAI,IAExB0C,EAAchD,OAAAiD,EAAA,EAAAjD,GACjBkD,OAAOD,EAAA,GACPE,MAAMF,EAAA,GACNG,KAAKpD,OAAOoD,KAAKV,EAAU,KAExBW,EAAYrD,OAAAiD,EAAA,EAAAjD,GACf4C,EAAE,SAACxC,EAAGuB,GAAJ,OAAUoB,EAAOpB,KACnB2B,GAAG,SAAAlD,GAAC,OAAIe,EAAOf,EAAE,MACjBmD,GAAG,SAAAnD,GAAC,OAAIe,EAAOf,EAAE,MACjBoD,MAAMP,EAAA,GAEHQ,EAAST,EAAYN,GAAWvC,IAAI,SAACC,EAAGuB,GAAJ,OAAUO,EAAAC,EAAAC,cAAA,QAChDsB,IAAK,QAAU/B,EACfvB,EAAGiD,EAAUjD,GACbuD,aAAc,WAAOvE,EAAKD,MAAMqC,QAAQpC,EAAKD,MAAMe,KAAKyB,KACxDC,MAAO,CAACgC,KAAMxE,EAAKD,MAAM0C,eAAiBzC,EAAKD,MAAMe,KAAKyB,GAAhB,GAA2B,UAAYvC,EAAKD,MAAMwB,WAAWvB,EAAKD,MAAMe,KAAKyB,GAAGI,WAAY8B,OAAQ,QAASC,cAAe,QAG1K,OAAO5B,EAAAC,EAAAC,cAAA,OAAKE,MAAO/C,KAAKJ,MAAMmB,KAAK,GAAIiC,OAAQhD,KAAKJ,MAAMmB,KAAK,IAC7D4B,EAAAC,EAAAC,cAAA,KAAG2B,UAAW,gBAAmBxE,KAAKJ,MAAMmB,KAAK,GAAK,EAAK,KACxDmD,QAlCiBjB,EAAA,oBCApBwB,EAAUC,UAAUC,SACvBC,OAAO,SAAA/D,GAAC,OAAIJ,OAAAoE,EAAA,EAAApE,CAAYI,GAAG,IAAM,KAEpC4D,EACGnB,QAAQ,SAACzC,EAAEuB,GACV,IAAMuB,EAASmB,KAAKC,SACpBlE,EAAE2B,UAAYJ,EACdvB,EAAEF,KAAOF,OAAAC,EAAA,EAAAD,CAAM,IAAIG,IAAI,SAACoE,EAAEC,GAAH,OAASA,EAAI7C,EAAI,EAAoB,EAAhB0C,KAAKC,SAAepB,MAGpE,IAAMvC,EAAaX,OAAAoB,EAAA,EAAApB,GAAiBqB,OAAO,CAAC,EAAE,GAAG,GAAG,KAAKC,MAAM,CAAC,UAAW,UAAW,UAAW,YA8ClFmD,cA3Cb,SAAAC,EAAYvF,GAAM,IAAAC,EAAA,OAChBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKoF,SAAWvF,EAAKuF,SAASlF,KAAdC,QAAAN,KAChBA,EAAKoC,QAAUpC,EAAKoC,QAAQ/B,KAAbC,QAAAN,KACfA,EAAKwF,QAAUxF,EAAKwF,QAAQnF,KAAbC,QAAAN,KACfA,EAAKyF,MAAQ,CAAEC,YAAa,IAAMC,aAAc,IAAKC,MAAO,OAAQC,YAAa,CAAC,EAAE,KALpE7F,sCASlBuF,oBACEpF,KAAK2F,SAAS,CAAEJ,YAAaK,OAAOC,WAAYL,aAAcI,OAAOE,YAAc,SAGrF7D,iBAAQpB,GACNb,KAAK2F,SAAS,CAAEF,MAAO5E,EAAE0B,QAG3B8C,iBAAQxE,GACNb,KAAK2F,SAAS,CAAED,YAAa7E,OAG/BT,6BACEwF,OAAOG,iBAAiB,SAAU/F,KAAKoF,UAAU,GACjDpF,KAAKoF,cAGP3C,kBAAS,IAAAnC,EAAAN,KACDgG,EAAkBvB,EACrBG,OAAO,SAAC/D,EAAEuB,GAAH,OAASvB,EAAE2B,WAAalC,EAAKgF,MAAMI,YAAY,IAAM7E,EAAE2B,WAAalC,EAAKgF,MAAMI,YAAY,KACrG,OACE/C,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,OACbtD,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,cACbtD,EAAAC,EAAAC,cAAA,6BAEFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACK,EAAD,CAAaZ,aAActC,KAAKsF,MAAMG,MAAOxD,QAASjC,KAAKiC,QAASb,WAAYA,EAAYT,KAAMqF,EAAiBjF,KAAM,CAACf,KAAKsF,MAAMC,YAAavF,KAAKsF,MAAME,aAAe,KAC5K7C,EAAAC,EAAAC,cAACnD,EAAD,CAAU4C,aAActC,KAAKsF,MAAMG,MAAOxD,QAASjC,KAAKiC,QAASb,WAAYA,EAAYT,KAAMqF,EAAiBjF,KAAM,CAACf,KAAKsF,MAAMC,YAAc,EAAGvF,KAAKsF,MAAME,aAAe,WArCnKvC,EAAA,WCbHiD,EAAA,iBAAAC,GAAwBA,EAArBxF,KAAqB,IAAfyF,EAAeD,EAAfC,SACtB,OACIzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAQD,SAAUA,GAChBzD,EAAAC,EAAAC,cAACyD,EAAA,EAAD,MACA3D,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,eACbtD,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,aAEbtD,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,OACbtD,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,YACbtD,EAAAC,EAAAC,cAAA,MAAIoD,UAAU,cAAd,+BAMJtD,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,OACbtD,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,wBACbtD,EAAAC,EAAAC,cAAA,MAAIoD,UAAU,0CACZtD,EAAAC,EAAAC,cAAA,MAAIoD,UAAU,mBAAd,qBACAtD,EAAAC,EAAAC,cAAA,MAAIoD,UAAU,mBAAd,YACAtD,EAAAC,EAAAC,cAAA,MAAIoD,UAAU,mBAAd,cACAtD,EAAAC,EAAAC,cAAA,MAAIoD,UAAU,mBAAd,YACAtD,EAAAC,EAAAC,cAAA,MAAIoD,UAAU,mBAAd,kBAGJtD,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,oBACbtD,EAAAC,EAAAC,cAAA,sBAGAF,EAAAC,EAAAC,cAACqC,EAAD,8CCnChB,IAAAqB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,KAAAM,EAAAN,EAAAE,EAAAG,GAiCeX,EAAA,EA7BF,SAAAC,GAAkC,IAA/BY,EAA+BZ,EAA/BY,KAAMC,EAAyBb,EAAzBa,MAAOC,EAAkBd,EAAlBc,KAAMC,EAAYf,EAAZe,MAC7BC,EAAYL,IAAIC,EAAM,SAI1B,OAHAC,EAAQA,EAAWA,EAAN,MAAiBG,EAAjB,cACbF,EAAOA,EAAI,GAAMA,EAAN,kEACXC,EAAQA,EAAK,GAAMA,EAAN,0CAEXT,EAAA7D,EAAAC,cAAC+D,EAAAhE,EAAD,CACEoE,MAAOA,EACPI,KAAM,CACJ,CAAEC,KAAM,eAAgBC,QAAS,mEACjC,CACED,KAAM,eACNC,QAAO,IAAMR,IAAIC,EAAM,YAEzB,CAAEQ,SAAU,WAAYD,QAASN,GACjC,CAAEO,SAAU,UAAWD,QAAS,WAChC,CAAEC,SAAU,iBAAkBD,QAASL,GACvC,CACEM,SAAU,SACVD,QAAO,GAAKR,IAAIC,EAAM,YAExB,CACEQ,SAAU,WACVD,QAASJ","file":"component---src-pages-side-project-d-3-react-js-1b5437f45dd078c41623.js","sourcesContent":["import React, { Component } from 'react'\nimport './style.scss'\nimport { scaleLinear } from 'd3-scale'\nimport { max, sum } from 'd3-array'\nimport { select } from 'd3-selection'\nimport { legendColor } from 'd3-svg-legend'\nimport { transition } from 'd3-transition'\n\nclass BarChart extends Component {\n  constructor(props){\n    super(props)\n    this.createBarChart = this.createBarChart.bind(this)\n  }\n\n  componentDidMount() {\n    this.createBarChart()\n  }\n\n  componentDidUpdate() {\n    this.createBarChart()\n  }\n\n  createBarChart() {\n    const node = this.node\n    const dataMax = max(this.props.data.map(d => sum(d.data)))\n    const barWidth = this.props.size[0] / this.props.data.length\n\n    const legend = legendColor()\n      .scale(this.props.colorScale)\n      .labels([\"Wave 1\", \"Wave 2\", \"Wave 3\", \"Wave 4\"])\n\n    select(node)\n      .selectAll(\"g.legend\")\n      .data([0])\n      .enter()\n      .append(\"g\")\n        .attr(\"class\", \"legend\")\n        .call(legend)\n\n    select(node)\n      .select(\"g.legend\")\n        .attr(\"transform\", \"translate(\" + (this.props.size[0] - 100) + \", 20)\")\n\n    const yScale = scaleLinear()\n      .domain([0, dataMax])\n      .range([0, this.props.size[1]])\n\n    select(node)\n      .selectAll(\"rect.bar\")\n      .data(this.props.data)\n      .enter()\n      .append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .on(\"mouseover\", this.props.onHover)\n\n    select(node)\n      .selectAll(\"rect.bar\")\n      .data(this.props.data)\n      .exit()\n        .remove()\n\n    select(node)\n      .selectAll(\"rect.bar\")\n      .data(this.props.data)\n        .attr(\"x\", (d,i) => i * barWidth)\n        .attr(\"y\", d => this.props.size[1] - yScale(sum(d.data)))\n        .attr(\"height\", d => yScale(sum(d.data)))\n        .attr(\"width\", barWidth)\n        .style(\"fill\", (d,i) => this.props.hoverElement === d.id ? \"#FCBC34\" : this.props.colorScale(d.launchday))\n        .style(\"stroke\", \"black\")\n        .style(\"stroke-opacity\", 0.25)\n\n  }\n\n  render() {\n    return <svg ref={node => this.node = node} width={this.props.size[0]} height={this.props.size[1]}>\n    </svg>\n  }\n}\n\nexport default BarChart","import React, { Component } from 'react'\nimport './style.scss'\n\nimport { stack, area, curveBasis, stackOrderInsideOut, stackOffsetWiggle } from 'd3-shape'\nimport { range } from 'd3-array'\nimport { scaleLinear } from 'd3-scale'\n\nclass StreamGraph extends Component {\n  render() {\n    const stackData = range(30).map(() => ({}))\n    for (let x = 0; x<30; x++) {\n      this.props.data.forEach(country => {\n        stackData[x][country.id] = country.data[x]\n      })\n    }\n    const xScale = scaleLinear().domain([0, 30])\n      .range([0, this.props.size[0]])\n\n    const yScale = scaleLinear().domain([0, 60])\n      .range([this.props.size[1], 0])\n\n    const stackLayout = stack()\n      .offset(stackOffsetWiggle)\n      .order(stackOrderInsideOut)\n      .keys(Object.keys(stackData[0]))\n\n    const stackArea = area()\n      .x((d, i) => xScale(i))\n      .y0(d => yScale(d[0]))\n      .y1(d => yScale(d[1]))\n      .curve(curveBasis)\n\n    const stacks = stackLayout(stackData).map((d, i) => <path\n        key={\"stack\" + i}\n        d={stackArea(d)}\n        onMouseEnter={() => {this.props.onHover(this.props.data[i])}}\n        style={{fill: this.props.hoverElement === this.props.data[i][\"id\"] ? \"#FCBC34\" : this.props.colorScale(this.props.data[i].launchday), stroke: \"black\", strokeOpacity: 0.5 }}\n      />)\n\n    return <svg width={this.props.size[0]} height={this.props.size[1]}>\n      <g transform={\"translate(0,\" + (-this.props.size[1] / 2) + \")\"}>\n        {stacks}\n      </g>\n    </svg>\n  }\n}\n\nexport default StreamGraph","import React, { Component } from 'react'\nimport BarChart from './BarChart'\nimport StreamGraph from './StreamGraph'\nimport { range } from 'd3-array'\nimport { scaleThreshold } from 'd3-scale'\nimport { geoCentroid } from 'd3-geo'\n\nconst appdata = worlddata.features\n  .filter(d => geoCentroid(d)[0] < -20)\n\nappdata\n  .forEach((d,i) => {\n    const offset = Math.random()\n    d.launchday = i\n    d.data = range(30).map((p,q) => q < i ? 0 : Math.random() * 2 + offset)\n  })\n\nconst colorScale = scaleThreshold().domain([5,10,20,30]).range([\"#75739F\", \"#5EAFC6\", \"#41A368\", \"#93C464\"])\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.onResize = this.onResize.bind(this)\n    this.onHover = this.onHover.bind(this)\n    this.onBrush = this.onBrush.bind(this)\n    this.state = { screenWidth: 1000, screenHeight: 500, hover: \"none\", brushExtent: [0,40] }\n\n  }\n\n  onResize() {\n    this.setState({ screenWidth: window.innerWidth, screenHeight: window.innerHeight - 120 })\n  }\n\n  onHover(d) {\n    this.setState({ hover: d.id })\n  }\n\n  onBrush(d) {\n    this.setState({ brushExtent: d })\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onResize, false)\n    this.onResize()\n  }\n\n  render() {\n    const filteredAppdata = appdata\n      .filter((d,i) => d.launchday >= this.state.brushExtent[0] && d.launchday <= this.state.brushExtent[1])\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h2>d3ia dashboard</h2>\n        </div>\n        <div>\n        <StreamGraph hoverElement={this.state.hover} onHover={this.onHover} colorScale={colorScale} data={filteredAppdata} size={[this.state.screenWidth, this.state.screenHeight / 2]} />\n        <BarChart hoverElement={this.state.hover} onHover={this.onHover} colorScale={colorScale} data={filteredAppdata} size={[this.state.screenWidth / 2, this.state.screenHeight / 2]} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from \"react\"\nimport Layout from 'components/Layout'\nimport Meta from 'components/Meta'\nimport './d3-react.scss'\nimport App from \"components/SideProject/d3React\";\n\nexport default ({ data, location }) => {\n  return (\n      <Layout location={location}>\n        <Meta/>\n        <div className=\"cv bg-white\">\n          <div className=\"container\">\n    \n            <div className=\"row\">\n              <div className=\"col mt-5\">\n                <h1 className=\"title bloc\"> \n                  Playing with React and D3\n                </h1>\n              </div>\n            </div>    \n          \n            <div className=\"row\">\n              <div className=\"col-3 mt-2 mb-5 pl-0\">\n                <ul className=\"list-group list-group-flush sticky-top\">\n                  <li className=\"list-group-item\">Vertical Barchart</li>\n                  <li className=\"list-group-item\">Piechart</li>\n                  <li className=\"list-group-item\">Line Graph</li>\n                  <li className=\"list-group-item\">Box plot</li>\n                  <li className=\"list-group-item\">Scatter Plot</li>\n                </ul>\n              </div>  \n              <div className=\"col mb-5 pb-lg-5\">\n                <h2> \n                  Barchart\n                </h2>\n                <App/>\n              </div>\n            </div>\n          </div> \n        </div>\n    \n      </Layout>\n  )\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\n\nconst Meta = ({ site, title, desc, ogimg }) => {\n  let siteTitle = get(site, 'title')\n  title = title ? `${title} | ${siteTitle}` : `Yentsen Liu`\n  desc = desc ? `${desc}` : `Interface/Empowerment/Democracy Design Portfolio by Yentsen Liu`\n  ogimg = ogimg ? `${ogimg}` : `https://yentsenliu.com/img/og-image.jpg`\n  return (\n    <Helmet\n      title={title}\n      meta={[\n        { name: 'twitter:card', content: 'Interface/Empowerment/Democracy Design Portfolio by Yentsen Liu' },\n        {\n          name: 'twitter:site',\n          content: `@${get(site, 'twitter')}`,\n        },\n        { property: 'og:title', content: title },\n        { property: 'og:type', content: 'website' },\n        { property: 'og:description', content: desc },\n        {\n          property: 'og:url',\n          content: `${get(site, 'siteUrl')}`,\n        },\n        {\n          property: 'og:image',\n          content: ogimg ,\n        },\n      ]}\n    />\n  )\n}\nexport default Meta\n"],"sourceRoot":""}