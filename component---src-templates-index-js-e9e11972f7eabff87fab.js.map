{"version":3,"sources":["webpack:///./src/components/Adsense/index.js","webpack:///./src/templates/Post/index.js","webpack:///./src/templates/Page/index.js","webpack:///./src/templates/index.js","webpack:///./src/components/Meta/index.js"],"names":["components_Adsense","componentDidMount","this","props","clientId","window","adsbygoogle","push","render","_this$props","slotId","format","react_default","a","createElement","className","style","display","data-ad-client","data-ad-slot","data-ad-format","Component","templates_Post","_ref","data","options","_data$frontmatter","frontmatter","category","tags","description","title","path","date","image","isIndex","adsense","html","get_default","isMore","match","fixed","key","gatsby_browser_entry","boxShadow","to","dateTime","Post_Badges","items","primary","gatsby_image_default","margin","dangerouslySetInnerHTML","__html","getDescription","Post_Button","label","Post_getAd","body","replace","split","_ref2","_ref3","map_default","item","i","templates_Page","post","__webpack_exports__","location","Layout","Meta","site","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","lodash_get__WEBPACK_IMPORTED_MODULE_2__","lodash_get__WEBPACK_IMPORTED_MODULE_2___default","siteTitle","meta","name","content","property"],"mappings":"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","file":"component---src-templates-index-js-e9e11972f7eabff87fab.js","sourcesContent":["import React from 'react'\n\nclass Adsense extends React.Component {\n  componentDidMount() {\n    const { clientId } = this.props\n    if (clientId) {\n      ;(window.adsbygoogle = window.adsbygoogle || []).push({})\n    }\n  }\n\n  render() {\n    const { clientId, slotId, format } = this.props\n\n    return clientId ? (\n      <div className=\"ad\">\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: 'block' }}\n          data-ad-client={clientId}\n          data-ad-slot={slotId}\n          data-ad-format={format}\n        />\n      </div>\n    ) : (\n      ''\n    )\n  }\n}\nexport default Adsense\n","import { Link } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\nimport map from 'lodash/map'\nimport Img from 'gatsby-image'\n\nimport Adsense from 'components/Adsense'\nimport Footer from 'components/Footer'\nimport './style.scss'\n\nconst Post = ({ data, options }) => {\n  const {\n    category,\n    tags,\n    description,\n    title,\n    path,\n    date,\n    image,\n  } = data.frontmatter\n  const { isIndex, adsense } = options\n  const html = get(data, 'html')\n  const isMore = isIndex && !!html.match('<!--more-->')\n  const fixed = get(image, 'childImageSharp.fixed')\n\n  return (\n    <div className=\"article\" key={path}>\n      <div className=\"container\">\n        <div className=\"info\">\n          <Link style={{ boxShadow: 'none' }} to={path}>\n            <h1>{title}</h1>\n            <time dateTime={date}>{date}</time>\n          </Link>\n          {Badges({ items: [category], primary: true })}\n          {Badges({ items: tags })}\n        </div>\n        <div className=\"content\">\n          <p>{description}</p>\n          {fixed ? (\n            <Img fixed={fixed} style={{ display: 'block', margin: '0 auto' }} />\n          ) : (\n            ''\n          )}\n        </div>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{\n            __html: isMore ? getDescription(html) : html,\n          }}\n        />\n        {isMore ? Button({ path, label: 'MORE', primary: true }) : ''}\n        {getAd(isIndex, adsense)}\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n\nconst getAd = (isIndex, adsense) => {\n  return !isIndex ? <Adsense clientId={adsense} slotId=\"\" format=\"auto\" /> : ''\n}\n\nconst getDescription = body => {\n  body = body.replace(/<blockquote>/g, '<blockquote class=\"blockquote\">')\n  if (body.match('<!--more-->')) {\n    body = body.split('<!--more-->')\n    if (typeof body[0] !== 'undefined') {\n      return body[0]\n    }\n  }\n  return body\n}\n\nconst Button = ({ path, label, primary }) => (\n  <Link className=\"readmore\" to={path}>\n    <span\n      className={`btn btn-outline-primary btn-block ${\n        primary ? 'btn-outline-primary' : 'btn-outline-secondary'\n      }`}\n    >\n      {label}\n    </span>\n  </Link>\n)\n\nconst Badges = ({ items, primary }) =>\n  map(items, (item, i) => {\n    return (\n      <span\n        className={`badge ${primary ? 'badge-primary' : 'badge-secondary'}`}\n        key={i}\n      >\n        {item}\n      </span>\n    )\n  })\n","import React from 'react'\nimport './style.scss'\n\nconst Page = ({ data }) => (\n  <div dangerouslySetInnerHTML={{ __html: data.post.html }} />\n)\nexport default Page\n","import { graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\n\nimport Post from 'templates/Post'\nimport Meta from 'components/Meta'\nimport Layout from 'components/Layout'\nimport Page from 'templates/Page'\n\nconst Template = ({ data, location }) => (\n  <div>\n    <Layout location={location}>\n      <Meta\n        title={get(data, 'post.frontmatter.title')}\n        site={get(data, 'site.meta')}\n      />\n      {get(data, 'post.frontmatter.layout') != 'page' ? (\n        <Post\n          data={get(data, 'post')}\n          options={{\n            isIndex: false,\n            adsense: get(data, 'site.meta.adsense'),\n          }}\n        />\n      ) : (\n        <Page {...this.props} />\n      )}\n    </Layout>\n  </div>\n)\nexport default Template\n\nexport const pageQuery = graphql`\n  query PostByPath($path: String!) {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        url: siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        layout\n        title\n        path\n        category\n        tags\n        description\n        date(formatString: \"YYYY/MM/DD\")\n        image {\n          childImageSharp {\n            fixed(width: 500) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\n\nconst Meta = ({ site, title }) => {\n  const siteTitle = get(site, 'title')\n  title = title ? `${title} | ${siteTitle}` : siteTitle\n  return (\n    <Helmet\n      title={title}\n      meta={[\n        { name: 'twitter:card', content: 'summary' },\n        {\n          name: 'twitter:site',\n          content: `@${get(site, 'twitter')}`,\n        },\n        { property: 'og:title', content: title },\n        { property: 'og:type', content: 'website' },\n        {\n          property: 'og:description',\n          content: get(site, 'description'),\n        },\n        {\n          property: 'og:url',\n          content: `${get(site, 'siteUrl')}/profile`,\n        },\n        {\n          property: 'og:image',\n          content: `${get(site, 'siteUrl')}/img/profile.jpg`,\n        },\n      ]}\n    />\n  )\n}\nexport default Meta\n"],"sourceRoot":""}